2004-10-21  Jeffrey Stedfast  <fejj@novell.com>

	* camel-sasl-gssapi.c: #include "camel-i18n.h"

2004-10-20  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-store.c (imap4_get_folder): Don't
	allow users to create folders in offline mode. When in offline
	mode, use a different codepath to get a folder object.
	(imap4_noop): Handle offline mode.
	(imap4_unsubscribe_folder): Throw an exception if we are in
	offline mode.
	(imap4_subscribe_folder): Same.
	(imap4_get_folder_info): Started to implement offline
	support. Also, even if we are in online mode but the engine has
	not yet been connected, we should follow the "offline" code path
	and get the folder info's from the cache.
	(imap4_rename_folder): Disallow in offline mode.
	(imap4_delete_folder): Same.
	(imap4_connect): Handle offline mode.
	(imap4_disconnect): Handle offline mode and do proper locking.
	(imap4_query_auth_types): Same.

2004-10-19  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-summary.c (imap4_summary_fetch_all):
	Removed an already-fixed FIXME comment.
	(imap4_summary_fetch_flags): Same.

	* providers/imap4/camel-imap4-folder.c (imap4_get_path_delim):
	Removed. Use camel_imap4_get_path_delim() instead.
	(camel_imap4_folder_new): Updated.
	(imap4_sync): If we aren't online, we're done. nothing to do.
	(imap4_refresh_info): Same.
	(imap4_append_message): Same but set an exception.
	(imap4_transfer_messages_to): Same.

	* providers/imap4/camel-imap4-utils.c
	(camel_imap4_get_path_delim): Moved here from camel-imap4-store.c

	* providers/imap4/camel-imap4-store.c (imap4_try_authenticate):
	Change the service string for the sasl mechanism to"imap" rather
	than "imap4".
	(imap4_get_path_delim): Removed.
	(imap4_create_folder): Updated.
	(imap4_folder_utf7_name): Same.

2004-10-13  Not Zed  <NotZed@Ximian.com>

	* providers/imap4/camel-imap4-folder.c (camel_imap4_folder_new)
	(imap4_sync_changes, imap4_sync): 
	* providers/imap4/camel-imap4-summary.c (untagged_fetch_all): kill
	cast as lvalue warning.

	* camel-string-utils.h: add prototype for camel_toupper.

	* providers/imap4/camel-imap4-utils.c: 
	* providers/imap4/camel-imap4-summary.c: 
	* providers/imap4/camel-imap4-folder.c: 
	* providers/imap4/camel-imap4-engine.c: 
	* providers/imap4/camel-imap4-command.c: 
	* providers/imap4/camel-imap4-store.c: include camel-i18n.h.

2004-10-12  Not Zed  <NotZed@Ximian.com>

	** See bug ???

	* providers/nntp/camel-nntp-store.c (connect_to_server): if we
	have a username, try to authenticate before doing anything else.

	** See bug #67895.

	* providers/nntp/camel-nntp-summary.c (add_range_xover)
	(add_range_head): use raw_command_auth since we might need auth
	here.

	* providers/nntp/camel-nntp-store.c (camel_nntp_raw_command_auth):
	new almost-raw command that also does auth.
	(xover_setup, connect_to_server, camel_nntp_command): use
	raw_command_auth since we might need auth here.

2004-10-12  Not Zed  <NotZed@Ximian.com>

	** See bug #67898 and probably others.

	* providers/imapp/camel-imapp-store.c (connect_to_server):
	* providers/pop3/camel-pop3-store.c (connect_to_server_wrapper): 
	* providers/imap4/camel-imap4-store.c (connect_to_server_wrapper): 
	* providers/imap/camel-imap-store.c (connect_to_server_wrapper): 
	* providers/nntp/camel-nntp-store.c (connect_to_server_wrapper): 
	* providers/smtp/camel-smtp-transport.c (connect_to_server_wrapper):
	Fallback to hard-coded port number if the name lookup fails and no
	port was supplied.

2004-10-11  Not Zed  <NotZed@Ximian.com>

	** See bug #67211.

	* camel-mime-utils.c (camel_header_raw_check_mailing_list):
	initialise the match start/end pointers, since some regexec's
	don't seem to do it.

2004-10-09  Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/camel-gw-listner.c (add_esource) : add the
	source uid to list of selected calendar and tasks so that
	groupwise calendar and tasks are automatically selected
        (remove_esource) : remove the uids from corresponding gconf keys
	Fixes #62053

2004-10-08  Not Zed  <NotZed@Ximian.com>

	** See bug #67170.

	* providers/nntp/camel-nntp-store.c
	(nntp_store_get_cached_folder_info): compare newsgroup names case
	sensitively.

2004-10-05  Jeffrey Stedfast  <fejj@novell.com>

	* camel-service.c (camel_getaddrinfo): Check msg->result for error
	and set an exception if appropriate.
	(camel_getnameinfo): Same.

2004-10-04  Jeffrey Stedfast  <fejj@novell.com>

	* camel-service.c (camel_getaddrinfo): Add a non-const cast for
	hints when changing the ai_family member in the IPv6-disabled
	case. Fixes bug #67028.

2004-10-05  Not Zed  <NotZed@Ximian.com>

	** See bug #67527.

	* camel-service.c (cs_getaddrinfo, cs_getnameinfo): don't loop on
	EAI_AGAIN, it doesn't appear to mean the same as EAGAIN does with
	system calls (i guess 'no shit sherlock' really).

2004-10-04  JP Rosevear  <jpr@novell.com>

	* providers/imap4/camel-imap4-provider.c: include camel-i18n.h

2004-10-01  Jeffrey Stedfast  <fejj@novell.com>

	* camel-service.c (camel_getaddrinfo): Avoid assigning a value to
	the member of a const struct (which newer gcc's apparently break
	over) by casting to non-const.

2004-09-28  Not Zed  <NotZed@Ximian.com>

	** See bug #66509.

	* providers/nntp/camel-nntp-store.c (camel_nntp_command): if we
	get an error selecting the folder, disconnect/include it in the
	re-try loop.
	(camel_nntp_command): don't set the exception based on errno,
	exception processing is already done.  don't clear it if we're on
	the 3rd retry.

2004-09-27  Not Zed  <NotZed@Ximian.com>
	
	* providers/nntp/camel-nntp-store.c (nntp_get_folder_info): don't
	do any locking here.
	(nntp_store_get_folder_info_all): move the locking here.
	(nntp_store_get_subscribed_folder_info): and some here too.

	* providers/nntp/camel-nntp-store.c:
	* providers/nntp/camel-nntp-folder.c: Remove nntp command_lock and
	just use the service connect lock for serialisation.

2004-09-14  Jeffrey Stedfast  <fejj@novell.com>

	* providers/nntp/camel-nntp-store.c (camel_nntp_try_authenticate):
	s/not/no/ in the error string. Fixes bug #65828.

2004-09-24  Not Zed  <NotZed@Ximian.com>

	* camel-vee-store.c (camel_vee_store_finalise): free the unmatched
	uid values as well.

	* camel-vee-folder.c (vee_folder_remove_folder): lock main folder
	summary lock before doing the unmatched stuff, so the order is
	right.

2004-08-25  Ed Catmur  <ed@catmur.co.uk>

	** See bug #63881.

	* camel-vee-store.c:
	* camel-vee-folder.c: move the unmatched
	folder onto the camel-vee-store object.  Removede the global
 	unmatched folder and associated locks/etc, fixed all the code up
	to work with the new unmatched folder, if present.

2004-09-27  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-spool-folder.c (camel_spool_folder_new):
	make sure body indexing is turned off always, missed the ~ bit.

	* providers/local/camel-spool-store.c (camel_folder_info_new):
	dont take unread count.
	(spool_fill_fi): copied from mbox more or less.
	(scan_dir): use fill_fi to setup counts.
	(spool_new_fi): replace camel_foldeR_info_new with one that does
	most of the work, also generates uri's properly.
	(get_folder_info_mbox): make the 'system' inbox name translatable.

	* providers/local/camel-mbox-folder.h: make the
	camel_mbox_folder_get* functions properly public.

	* providers/local/camel-local-folder.h: pass the object to the
	virtual methods now, fix all callers.

	* providers/local/camel-spool-folder.c (spool_get_full_path)
	(spool_get_meta_path): implement, this needs to work differnetly
	to the parent classes implementations :-/.

2004-09-22  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap/camel-imap-store.c (connect_to_server): Instead
	of doing a host-lookup ourselves, get it passed in to us as an
	argument. Also simplified a bit (try_starttls is no longer an
	option).
	(connect_to_server_wrapper): Simplified (we no longer have
	fallback cases for SSL stuff). Also, perform host lookup here.

	* providers/imap4/camel-imap4-store.c: Same changes as above.

	* providers/pop3/camel-pop3-store.c: Same.

	* providers/smtp/camel-smtp-transport.c: Same. Other changes
	include making the code consistant with the other providers.

	* providers/nntp/camel-nntp-store.c: Same as pop/imap.

2004-09-21  Not Zed  <NotZed@Ximian.com>

	** See bug #63521.

	* camel-movemail.c (camel_movemail): don't clear exception on entry.

	* camel-folder-search.c (match_words_message): use local exception.

	* camel-operation.c (camel_operation_cancel_check): soak up all
	cancellation requests as soon as we get one.
	(camel_operation_uncancel): soak up all cancellation reqeusts when
	we uncancel.

	* camel-uid-cache.c (camel_uid_cache_save): open the file O_TRUNC
	rather than O_EXCL, otherwise a crash would mean this file never
	gets updated.
	(camel_uid_cache_save): block cancellation around writes otherwise
	we could be interupted from old cancellation.

	* providers/local/camel-local-folder.c
	(camel_local_folder_construct): don't clear exception here, just
	don't pass it to summary load.

	* providers/pop3/camel-pop3-store.c (pop3_connect): only clear the
	exception when we received one we handled.

	* camel-filter-driver.c (close_folder): if exception is already
	set, don't pass it to folder.sync().

	* camel-lock.c (camel_lock_folder): don't clear the exception
	here, if it came in set its a programming error.

	* camel-filter-driver.c (camel_filter_driver_filter_message): if
	the exception is set after evaluating the expression, stop
	immediately.

2004-09-13  Not Zed  <NotZed@Ximian.com>

	** See bug #47821.

	* camel-service.c: removed the old hostent based hostname interfaces.

	* camel-sasl-kerberos4.c (krb4_challenge): new hostname interfaces.

	* camel-sasl-gssapi.c (gssapi_challenge): new hostname interfaces.

	* camel-sasl-digest-md5.c (digest_md5_challenge): use new hostname
	interfaces.
	(generate_response): just take hostname directly, not hostent.

	* camel-mime-utils.c (camel_header_msgid_generate): use new
	hostname interfaces.

	* providers/smtp/camel-smtp-transport.c (connect_to_server): fixed
	to use new addrinfo apis.

	* providers/pop3/camel-pop3-store.c (connect_to_server): fixed to
	use new addrinfo apis.

	* camel-tcp-stream-ssl.c (stream_connect): try all addresses
	supplied.

	* camel-tcp-stream.c (camel_tcp_stream_get_remote_address)
	(camel_tcp_stream_get_local_address): return a sockaddr now, and
	also the address length.  Fixed all implementations and callers.
	(camel_tcp_stream_connect): use addrinfo rather than hostent for
	host AND port info.  Fixed all implementations and callers.

2004-09-22  Not Zed  <NotZed@Ximian.com>

	* camel-folder-summary.c (camel_folder_summary_decode_token):
	handle a zero-length token read rather than failing.

2004-09-21  Not Zed  <NotZed@Ximian.com>

	** See bug #66199.

	* camel-http-stream.c (stream_read): handle relative url's in
	redirect.
	(camel_http_stream_set_proxy): generate the basic auth token for
	basic proxy auth if we have a user and password.

	* camel-http-stream.c: turn off debug.

2004-09-08  Hannah & Fazlu <hannah_lins@yahoo.co.in>

        Fixes Bug#61088

	* camel/camel-smime-context.c: Change of strings.

2004-09-15  Not Zed  <NotZed@Ximian.com>

	** See bug #0xffff.

	* providers/local/camel-local-folder.c
	(camel_local_folder_construct): only emit folder_created if we
	actually created it.

2004-09-03  Not Zed  <NotZed@Ximian.com>

	* camel-tcp-stream-ssl.c (stream_connect): make ssl connection
	async and cancellable, and minor api update to async connection.

2004-08-27  Not Zed  <NotZed@Ximian.com>

	** See bug #64023.

	* providers/nntp/camel-nntp-store.c (camel_nntp_try_authenticate):
	forget the password if it was wrong.

2004-08-26  Sivaiah Nallagatla <snallagatla@novell.com>
	
	* providers/groupwise/camel-gw-listner.c
	(add_calendar_tasks_sources) : change the "CheckList" to "Tasks"
	as there is another foder called chekclist in groupwise not
	related to tasks Fixes #64092

2004-08-25  Frederic Crozat  <fcrozat@mandrakesoft.com>

	* camel-folder.c (folder_getv): Init one variable (remove warning)
	and don't redefine it.

2004-08-23  Not Zed  <NotZed@Ximian.com>

	** See bug #63189.

	* providers/imap/camel-imap-store.c (get_subscribed_folders): only
	LSUB folders we're interested in, and check full name of each path
	element.
	(imap_is_subfolder): helper for above.

2004-08-23  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap/camel-imap-store.c (get_folders): Check for an
	exception from get_folders_online() here so that we don't send
	commands to an IMAP server after a disconnect for example. See bug
	#63504 for an example.

2004-08-23  Jeffrey Stedfast  <fejj@novell.com>

	* camel-tcp-stream-openssl.c (open_ssl_connection): Call
	SSL_CTX_set_default_verify_paths() to initialise the certificate
	database paths. Thanks to Anton Altaparmakov for this fix.

2004-08-21 Sivaiah Nallagatla <snallagatla@novell.com>
	
	* providers/groupwise/camel-gw-listener.c (account_changed) :
	if any of the settings required for soap interaction changes 
	try connecting to server and resetup the ESources 
        * providers/groupwise/camel-groupwise-provider.c ": don't
	check soap ssl setting by default to be in consistent with
	IMAP 

2004-08-16  Not Zed  <NotZed@Ximian.com>

	* providers/groupwise/camel-groupwise-provider.c
	(camel_provider_module_init): pass an exception handle to
	camel_provider_get.

2004-08-13  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-summary.c (imap4_summary_fetch_all):
	Use g_ptr_array_sized_new() rather than using set_size() after
	creating a GPtrArray so that array->len starts out at 0.
	(imap4_summary_fetch_flags): Same.

2004-08-13  Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/camel-gw-listener.c (account_changed):
	remove the cal/taksks sources when account is disbaled. Also do
	not try to to create sources when a disabled account is changed to
	Novell Groupwise
	(camel_gw_listener_construct): do not add the disbaled accounts
	to exitsting groupwise accounts list

2004-08-13  Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/camel-groupwise-provider.c: update ssl
	setting label and title of the soap settings section. Fixes #62747

2004-08-13  Rodney Dawes  <dobey@novell.com>

	* camel-sasl-gssapi.c: Handle et/comm_err.h as well as the
	normal comm_err.h

2004-08-11  Jeffrey Stedfast  <fejj@novell.com>

	Fix for bug #62771

	* camel-mime-utils.c (append_quoted_pair): New function to append
	a string of text that may contain quoted-pairs.
	(header_decode_text): Now takes a ctext argument specifying
	whether or not to expect comments and to handle them.
	(camel_header_decode_string): Pass FALSE as ctext argument.
	(camel_header_format_ctext): New function to format text|comment
	header field bodies.

2004-08-10  Not Zed  <NotZed@Ximian.com>

	* providers/groupwise/camel-gw-listener.c
	(get_addressbook_names_from_server): fix for e_passwords api
	change, and handle reprompting as well.

2004-08-06  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-summary.c (untagged_fetch_all): Call
	camel_operation_progress().
	(imap4_summary_fetch_all): Setup info we need for progress
	reporting.
	(imap4_summary_fetch_flags): Same.

2004-08-04  Rodney Dawes  <dobey@novell.com>

	* camel-charset-map.c: #include <gal/util/e-iconv.h>

2004-08-03  Jeffrey Stedfast  <fejj@novell.com>

	* camel-url-scanner.c (camel_url_scanner_scan): In the case of
	start() or end() failing, loop starting with the first character
	immediately following the failed match position. Fixes bug #62136.

2004-08-03  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-store.c (imap4_construct): Pass a
	reconnect func.

	* providers/imap4/camel-imap4-engine.c
	(camel_imap4_engine_iterate): Reconnect if needed.
	(camel_imap4_engine_new): Now takes a reconnect func.

2004-07-30  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-engine.c
	(camel_imap4_engine_capability): This needs to prequeue the
	CAPABILITY command rather than queue it normally for the case of
	reconnecting.
	(camel_imap4_engine_namespace): Same.

2004-07-30  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (camel_header_encode_string): Similar fix as
	below in a later if-statement. Thanks to Suresh for spotting this
	one.

2004-07-28  Jeffrey Stedfast  <fejj@novell.com>

	* camel-mime-utils.c (camel_header_encode_string): Fixed an ABR
	that may have been responsible for bug #62029.

2004-07-29 Sivaiah Nallagatla <snallagatla@novell.com>

	* proivders/groupwise/camel-groupwise-provider.c: Add an entry to
	specify POA address and a check box to say whehter ssl has to be
	used for SOAP or not
	(groupwise_auto_detect_cb): new function to automatically fill POA
	address with host specified in receiving mail page
	(camel_provider_module_init): use the new auto_detect funcntion

	* providers/groupwise/camel-gw-listener.c (modify_esource)
	(account_changed, add_calendar_tasks_sources)
	(remove_calendar_tasks_sources, get_addressbook_names_from_server)
	(add_addressbook_sources, modify_addressbook_sources)
	(remove_addressbook_sources): while forming the uri, use the value
	from new poa_address setting instead of url->host. Also use ssl
	setting from the new check box provider instaed of imap one
	(get_addressbook_names_from_server): display an error to user when
	connection cpuld not be established with server during account
	setup

2004-07-26  Jeffrey Stedfast  <fejj@novell.com>

	* camel-charset-map.c (camel_charset_best_mask): Changed the logic
	slightly to only match certain charsets if the locale matches
	(Macedonians don't want to use koi8-r for example).

2004-07-27  Not Zed  <NotZed@Ximian.com>

	** See bug #61841.

	* providers/groupwise/camel-groupwise-provider.c: added junk settings.

2004-07-27  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-engine.c
	(camel_imap4_engine_prequeue): Changed to be the same prototype as
	engine_queue().
	(engine_prequeue_folder_select): Updated.

	* providers/imap4/camel-imap4-store.c (connect_to_server): Use
	engine_prequeue() for STARTTLS in case we are reconnecting and
	already have a command queue.
	(imap4_try_authenticate): Use prequeue() here too.
	(imap4_reconnect): Moved all the connect logic in here.
	(imap4_connect): just lock and call reconnect().

2004-07-27  Sivaiah Nallagatla <snallagatla@novell.com>

	Fixes #61454

	* providers/groupwise/camel-groupwise-provider.c
	(camel_provider_module_init): do not set transport object for
	groupwise provider. We want user to use SMTP itself instead of
	"Novell Groupwise"

2004-07-26  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-store.c (connect_to_server): Don't
	instantiate an engine here. Instead, take an engine as an argument
	(it has a service pointer) and connect using that. Also, if
	connect fails, don't unref the engine.
	(connect_to_server_wrapper): Now also takes an engine argument
	rather than a service argument.
	(imap4_try_authenticate): Now also takes an engine argument.
	(imap4_connect): Pass the engine to connect/auth functions rather
	than the store.
	(imap4_query_auth_types): Updated.
	(imap4_disconnect): Don't unref the engine here.
	(camel_imap4_store_init): Create the engine here.
	(imap4_get_folder_info): Can't check engine == NULL to know to
	connect (that was a broken check anyway).

	* providers/imap4/camel-imap4-engine.c (camel_imap4_engine_new):
	Now simply takes a service argument rather than a session and url.
	(camel_imap4_engine_next_token): Set the state to DISCONNECTED.
	(camel_imap4_engine_eat_line): Same.
	(camel_imap4_engine_line): Same.
	(camel_imap4_engine_literal): Same.

2004-07-22  Not Zed  <NotZed@Ximian.com>

	** See bug #61761.

	* providers/pop3/camel-pop3-engine.c (camel_pop3_engine_iterate):
	if we get an io error, move every current/active and queued
	command to the done queue and mark as failed.

2004-07-19  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap/camel-imap-store.c (get_subscribed_folders): Free
	result after parsing it. Fixes a leak.

2004-07-19  Not Zed  <NotZed@Ximian.com>

	* camel-mime-filter-canon.c (filter): only copy 5 chars after the
	F if we actually have "From ", otherwise we might have F.{,4}\n
	instead and break eol canonicalisation.  For #53355.

2004-07-16  Not Zed  <NotZed@Ximian.com>

	* camel-gpg-context.c: Added some debug stuff.

2004-07-15  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap/camel-imap-folder.c (imap_transfer_online): Don't
	grab the connect_lock before calling refresh_info so that we avoid
	the deadlock in bug #61551.

2004-07-14  Jeffrey Stedfast  <fejj@novell.com>

	Fix for bug #61538

	* camel-process.c (camel_process_fork): Same.

	* camel-filter-driver.c (pipe_to_system): Fixed strings

2004-07-12 Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/camel-gw-listener.c (add_esource)
	(modify_esource, add_addressbook_source)
	(modify_addressbook_sources): pass "use_ssl" value to these
	functions and set it on e-source
	(add_calendar_tasks_source): read the "use_ssl" param from camel
	url and pass it to add_esource) calls
	(get_addressbook_names_from_server): use "https" or http depending
	upon whther ssl is enabled or not
	(account_changed): compare urls from account instead of uris
	formed to know wheter somehting in the account changed

2004-07-09  Not Zed  <NotZed@Ximian.com>

	** This is no guarantee of security, but its just a helper to
	prevent old memory accidentally being included/used elsewhere.
	
	* camel-smime-context.c (sm_decrypt): mark the output stream
	'secure'.

	* camel-gpg-context.c (gpg_decrypt): set the output stream to
	secured, so we automagically blank it out on finalise.

	* camel-stream-mem.c (camel_stream_mem_set_secure): set the
	memory-stream 'secured', all we do at the moment is blank out the
	buffer on finalise.
	(camel_stream_mem_set_byte_array, camel_stream_mem_finalize):
	clear memory if owner and secured.  kill dead comment.
	(clear_mem): utilitiy to set memory to 0xABADF00D

2004-07-08  Not Zed  <NotZed@Ximian.com>

	** See bug #61186.
	
	* camel-cipher-context.c (camel_cipher_sign):
	(camel_cipher_verify, camel_cipher_encrypt, camel_cipher_decrypt):
	Add preliminary progress reporting.

2004-07-07  Chris Toshok  <toshok@ximian.com>

	* providers/groupwise/Makefile.am (INCLUDES): use
	CAMEL_GROUPWISE_CFLAGS.
	(libcamelgroupwise_la_LIBADD): use CAMEL_GROUPWISE_LIBS.

2004-09-07  Not Zed  <NotZed@Ximian.com>

	* providers/groupwise/camel-groupwise-provider.c: put the options
	in their own section.

2004-09-06  Not Zed  <NotZed@Ximian.com>

	* camel-search-private.c (utf8_get): remove this, and make the
	code use camel_utf8_getc instead.  Quite a bit faster esp if
	optimising with inlines.

	* camel-object.c (check_magic_fail): change the check_magic code
	to mostly run from a macro, its worth it.

2004-09-04  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-mbox-summary.c (message_info_new): fix
	cast issue.

	* providers/pop3/camel-pop3-engine.c (get_capabilities): remove
	some unused variables.

	* camel-object.h: remove camel-i18n.h, fixed all c files where
	appropriate.

2004-08-25  Not Zed  <NotZed@Ximian.com>

	* camel-list-utils.[ch]: Copied e_dlist* stuff to here, part of
	removing e-util dependency on camel.

2004-08-05  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-local-provider.c: same.

	* providers/imap/camel-imap-provider.c: put the extra stuff into a
	'general' section.

	* providers/imapp/camel-imapp-provider.c: same.

	* providers/pop3/camel-pop3-provider.c: make sure each section
	start has a name.

2004-08-03  Not Zed  <NotZed@Ximian.com>

	* camel-url.c (camel_url_set_param): when clearing a param, use
	remove_data instead of set_data_full.  craptatious glib at it
	again.

	* providers/nntp/camel-nntp-provider.c: turn on ssl option.

2004-07-07  Not Zed  <NotZed@Ximian.com>

	* camel-folder.c: removed filter-rule.h  ugh.

2004-07-02  Christian Neumair  <chris@gnome-de.org>

	* camel-smime-context.c: s/Can't/Cannot/.

2004-06-30  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-search.c (imap4_body_contains): Set
	the size of the ptrarray to prevent potentially realloc'ing
	several times.

2004-06-29  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-command.c
	(camel_imap4_command_newv): Aded a new %formatter 'V' which takes
	a string vector (needed for SEARCH).

	* providers/imap4/camel-imap4-search.[c,h]: New source files
	implementing search functionality.

	* providers/imap4/camel-imap4-folder.c (imap4_sync_flag): Use the
	new public version of imap4_get_uid_set().
	(imap4_transfer_messages_to): Same.
	(camel_imap4_folder_new): Create a search context.
	(camel_imap4_folder_finalize): Unref the search context.
	(camel_imap4_folder_class_init): Override the search methods.
	(imap4_search_by_expression): New.
	(imap4_search_by_uids): New.
	(imap4_search_free): New.

	* providers/imap4/camel-imap4-utils.c (camel_imap4_get_uid_set):
	Moved here from camel-imap4-folder.c

2004-06-29  Not Zed  <NotZed@Ximian.com>

	* camel-vee-store.c (vee_rename_folder): add any parents of the
	new name before we actually do the rename so the rename has
	somewhere to go to.  #60775.

2004-06-28  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-maildir-folder.c (maildir_folder_getv):
	override CAMEL_FOLDER_NAME arg so we can translate "." into
	"Inbox".

	* providers/local/camel-maildir-store.c (camel_folder_info_new):
	take url argument directly, fixes a memleak.
	(camel_folder_info_new): make the toplevel "." into "Inbox"
	always.
	(maildir_rename_folder): dont let users rename inbox.

2004-06-27  Jeffrey Stedfast  <fejj@novell.com>

	* camel-url-scanner.c (camel_url_web_end): More fixes.

2004-06-25  Jeffrey Stedfast  <fejj@novell.com>

	* camel-url-scanner.c (camel_url_web_end): Fixed to handle :pass
	in proto://user:pass@host. Fixes bug #60104.

2004-06-24  Jeffrey Stedfast  <fejj@novell.com>

	* providers/pop3/camel-pop3-store.c (connect_to_server): Error out
	and set an exception if camel_pop3_engine_new() returns NULL
	(which it can do now).

	* providers/pop3/camel-pop3-engine.c (get_capabilities): No longer
	reads the greeting.
	(camel_pop3_engine_new): Reads the greeting itself and returns
	NULL if an error occurs (like stupid braindamaged piece of shit
	POP servers that spew debug prinfs).

	* providers/local/camel-spool-folder.c (spool_lock): If we fail to
	lock the folder, close the lockfd and reset it to -1. Fixes bug
	#54680.

2004-06-23  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-store.c (imap4_get_folder_info):
	First LIST/LSUB the toplevel folder, and then LIST/LSUB the
	subfolders (it needs to be 2 commands to work properly).
	(imap4_delete_folder): CLOSE the folder we are about to DELETE if
	it is currently SELECTED.

	* providers/imap/camel-imap-provider.c (imap_url_equal): Same.

	* providers/imap4/camel-imap4-provider.c (imap4_url_equal): Check
	the protocol.

	* providers/imap4/camel-imap4-store.c (imap4_build_folder_info):
	Hide password, etc info in the fi->uri's.
	(imap4_create_folder): Don't bother to use
	imap4_get_folder_info(), we can construct the fi ourselves.
	(imap4_delete_folder): Emit the folder_deleted signal and
	construct an fi ourselves.
	(imap4_subscribe_folder): Same.
	(imap4_unsubscribe_folder): Same.

	* providers/imap4/camel-imap4-provider.c: Specify that the
	fragment is the path.

2004-06-21  Christian Kellner <gicmo@xatom.net>

	* camel-service.c (service_setv): Really set the path if tag is 
	CAMEL_SERVICE_PATH.

2004-06-21  Jeffrey Stedfast  <fejj@novell.com>

	* camel-mime-filter-enriched.c (enriched_to_html): Fixed a number
	of issues described in bug #49497.

2004-06-18  Jeffrey Stedfast  <fejj@novell.com>

	* camel.c (camel_shutdown): Call camel_mime_utils_shutdown() and
	camel_operation_shutdown().

	* camel-operation.c (camel_operation_shutdown): New function.

	* camel-mime-utils.c (camel_mime_utils_shutdown): New function to
	clean up the compiled regexes.

	* camel-stream-buffer.c (set_vbuf): Need to re-init sbf->ptr and
	sbf->end too, or we'll be sorrryy!

2004-06-18  Not Zed  <NotZed@Ximian.com>

	* camel-exception.h (CAMEL_EXCEPTION_INITIALISER): setup for
	static inititialisation.

2004-06-17  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-folder.c (uidset_init): init
	tail->last to (guint32) -1, so that index = tail->last + 1 will
	start at 0 at the top of uidset_add() :-)

2004-06-17  Rodney Dawes  <dobey@novell.com>

	* camel-mime-filter-tohtml.c: Add support for the webcal, callto, and
	h323 URIs when we get them in mails

2004-06-17  Jeffrey Stedfast  <fejj@novell.com>

	* camel-mime-filter-tohtml.c: Don't foolishly unmunge From_
	lines. First off, we don't even know if our input stream came from
	an mbox file and secondly, the ">From " may have been intentional
	by the author. We Just Don't Know (tm).

2004-06-15  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-store.c (imap4_build_folder_info):
	Make sure we have elements in the array, if not then we're done
	(return a NULL fi).

2004-06-17  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-folder.c (imap4_get_uid_set): Fixed
	to work properly. It was getting ranges wrong before sometimes
	which was making me lose mail! Ugh.

	Thanks to Christian Kellner for pointing out these bugs (and
	submitting the original patch for service_setv)

	* camel-service.c (service_setv): Don't use (tag &
	CAMEL_ARG_IGNORE) to determine if we should ignore this
	tag. CAMEL_ARG_IGNORE is not a bit flag.

	* providers/imap/camel-imap-store.c (imap_setv): Don't use (tag &
	CAMEL_ARG_IGNORE) to determine if we should ignore this
	tag. CAMEL_ARG_IGNORE is not a bit flag.

2004-06-16  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-folder.c (imap4_refresh_info): Only
	force a re-update of all FLAGS if this folder wasn't in the
	SELECTED state. Otherwise, simply send a NOOP.

	* providers/imap4/camel-imap4-summary.c: Added a 'first' member to
	the imap_fetch_all_t struct so we can use that as a base offset in
	our GPtrArray, allowing us to limit resource consumption which
	could otherwise get quite large. Also added a ChangeInfo member
	that was needed for changes to untagged_fetch_all().
	(imap4_fetch_all_add): Use fetch->first as a base offset and
	change int i to guint32 i. Also updated to sue the fetch->changes.
	(imap4_fetch_all_update): Same.
	(untagged_fetch_all): Same - this is where it is really valuable,
	since we can avoid adding elements to the GPtrArray that we won't
	even use. Also needed to change code a big in case index <
	fetch->first (which could happen if a server notified us of a
	FLAGS change for a message we didn't request info about).
	(imap4_fetch_all_free): Free the ChangeInfo.
	(imap4_summary_fetch_all): Init fetch->changes and fetch->first.
	(imap4_summary_fetch_flags): Same.
	(camel_imap4_summary_flush_updates): Only request envelope info if
	first <= summary->exists. Avoids needless queries.
	(info_uid_sort): #if 0'd
	(camel_imap4_summary_flush_updates): No need to sort the summary -
	this should never have been needed. I can't remember why I did
	this...

2004-06-15  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-gpg-context.c (gpg_verify): Use
	camel_multipart_signed_get_content_stream() rather than getting
	the first part and canonicalising it ourselves. Fixes bug #60159.

	* providers/imap4/camel-imap4-stream.c (camel_imap4_stream_init):
	Init have_unget to FALSE. Don't set unget to NULL, it's no longer
	a pointer.
	(camel_imap4_stream_finalize): No need to g_free() unget anymore.
	(camel_imap4_stream_next_token): Check have_unget rather than
	unget != NULL. Set have_unget to FALSE if we get an unget'd token.
	(camel_imap4_stream_unget_token): Don't malloc space for an unget
	token. The unget token is no longer a pointer.

2004-06-14  Not Zed  <NotZed@Ximian.com>

	* providers/smtp/camel-smtp-transport.c (smtp_data): use
	g_ascii_strcasecmp.
	(smtp_connect): do not re-helo after we've authenticated.  This
	was a misreading of the spec.  We must only re-helo after a
	transport layer negotiation.

2004-06-12  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-store.c (imap4_noop): Flush summary
	updates for the currently selected folder.
	(imap4_noop): Sync the currently selected folder before sending
	NOOP.

	* providers/imap4/camel-imap4-summary.c
	(camel_imap4_summary_set_exists): Don't bother with
	exists_changed. We don't need it afterall.
	(camel_imap4_summary_flush_updates): Instead of updating flags if
	update_flags or exists_changed is set, only bother if update_flags
	is set or if exists is smaller than the summary count (since
	updating flags is also sueful for determining which messages have
	been removed).

2004-06-11  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-folder.c (imap4_refresh_info): Force
	updating of the emsage flags (normally this only happens if
	something has changed that warrants rescanning them).

2004-06-11  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-folder.c (untagged_fetch): Handle
	getting FLAGS even though we didn't request it (server can send us
	FLAGS info if another client changed them recently, for
	example). Also fixed to handle the fact that not every bit of info
	has to be in a single untagged FETCH response - it may come in
	several untagged responses.

	* providers/imap4/camel-imap4-summary.c (envelope_decode_address):
	Decode the email address name token.
	(envelope_decode_nstring): rfc2047 decode strings if requested.
	(decode_envelope): Request that the subject string be rfc2047
	decoded.

2004-06-11  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-maildir-store.c (get_folder_info): if we
	scan from "" or top == NULL, then we really want to scan from "."
	instead.

	* camel-url.c (camel_url_new_with_base): don't check the for a
	character after the # before extracting the fragment.  An empty
	fragment is still allowed and # should never be added to the path.
	See Rfc1808 2.4.1.

2004-06-11  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-summary.c
	(camel_imap4_summary_flush_updates): Don't bother scanning summary
	info if EXISTS was 0.
	(camel_imap4_summary_set_uidvalidity): Emit the folder_changed
	event after clearing the summary.
	(camel_imap4_summary_expunge): Emit the folder_changed event after
	removing the message from the summary.
	(camel_imap4_summary_set_exists): Only set exists_changed if the
	new and old exists values are different.
	(imap4_fetch_all_add): Emit a folder_changed signal if any new
	info's were added.
	(imap4_fetch_all_update): Emit a folder_changed event if any uids
	were removed or otherwise updated.
	(camel_imap4_summary_expunge): Use seqid-1 to determine the actual
	summary index.
	(camel_imap4_summary_flush_updates): Added some logic to
	distinguish between EXISTS value changing because it changed and
	because messages got expunged.

	* providers/imap4/camel-imap4-folder.c (imap4_sync): Flush updates
	after an EXPUNGE and don't unset expunge if we didn't delete
	anything (the logic was wrong anyway).
	(imap4_refresh_info): Implemented.

2004-06-10  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-engine.c
	(camel_imap4_engine_handle_untagged_1): Don't always try and parse
	a RESP-CODE in the BYE case as the RESP-CODE is optional.

2004-06-10  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-store.c (imap4_build_folder_info):
	If flags does not include FOLDER_INFO_FAST, get the total/unread
	counts for the folder-info.

	* providers/imap4/camel-imap4-engine.c (engine_parse_status):
	Removed.
	(camel_imap4_engine_handle_untagged_1): Don't handle untagged
	STATUS responses anymore. Let the STATUS requestor handle them
	instead.

	* providers/imap4/camel-imap4-utils.c
	(camel_imap4_untagged_status): New function to parse untagged
	status events.

2004-06-10  Not Zed  <NotZed@Ximian.com>

	* camel-filter-driver.c (camel_filter_driver_filter_message): add
	some :filter debug.
	(open_folder): only ignore the get_folder exception if we have a
	default folder, otherwise don't.  See #59727.

	* providers/nntp/camel-nntp-store.c (camel_nntp_command): move the
	stream based checking into the loop, after we connect.  Fixes a
	crash.

2004-06-09  Jeffrey Stedfast  <fejj@novell.com>

	* camel-gpg-context.c (gpg_verify): Fixed a case where it was
	possible to double-free the gpg context.
	(gpg_verify): If we don't have a public key, then the signature is
	just BAD always.

2004-06-09  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-gpg-context.c (gpg_verify): Don't assign trust to be
	UNKNOWN if gpg sent us a NODATA status.

2004-06-07  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-folder.c (camel_imap4_folder_new):
	Load the entire summary, not just the summary header. This way
	when the user opens the folder, we don't do a complete re-sync
	with the server unnecessarily.

	* providers/imap4/camel-imap4-summary.c (untagged_fetch_all): New
	info's always have a uid of "", so don't checkagainst NULL.

2004-06-06  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-store.c (imap4_rename_folder):
	Implemented, mostly. Still need to update state on the renamed
	folder object if instantiated and rename the on-disk cache
	directory.

	* providers/imap4/camel-imap4-folder.c
	(camel_imap4_folder_finalize): Free the cachedir.
	(camel_imap4_folder_new): Init the cachedir and load the saved
	summary before updating it against the server summary.

	* providers/imap4/camel-imap4-store.c
	(camel_imap4_store_finalize): Free the storage_path.
	(imap4_construct): Init the storage_path.

2004-06-04  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap4/camel-imap4-folder.c (camel_imap4_folder_new):
	Initialise the folder->summary and force an update of the message
	info cache by selecting the folder and flushing the updates to the
	imap4 summary object.

	* providers/imap4/camel-imap4-store.c (imap4_get_folder_info):
	Lock the connect_lock before we check if the engine is NULL and
	after we connect (assuming we need to), initialise the engine
	pointer again.
	(imap4_get_folder_info): Doh. Need to escape the "'s in the LIST
	command string.
	(imap4_get_folder): Same.

	* camel-stream-buffer.c (stream_flush): Fixed to work
	properly. After we've flushed the buffer, we want to set sbf->ptr
	to sbf->buf, we don't want to do sbf->ptr += written, that'll just
	corrupt our next write.

	* providers/imap4/camel-imap4-store.c (connect_to_server_wrapper):
	Duh. If the user doesn't care about SSL/TLS - use USE_SSL_NEVER,
	not USE_SSL_ALWAYS.

	* camel-tcp-stream-ssl.c (stream_flush): Always just return 0,
	don't try to PR_Sync() - fsync on a socket causes an error.

	* providers/imap4/camel-imap4-command.c
	(camel_imap4_command_step): Set exceptions when write/flush fail.

	* providers/imap4/camel-imap4-engine.c
	(camel_imap4_engine_take_stream): Set an exception in the case
	where we get an unexpected greeting from the server.

	* providers/imap4/camel-imap4-store.c (imap4_create_folder):
	store->dir_sep no longer exists, so query the engine for the
	directory separator for the parent_folder.
	(imap4_build_folder_info): CamelFolderInfo no longer has a path
	component.

2004-06-03  Not Zed  <NotZed@Ximian.com>

	* providers/nntp/camel-nntp-store.c (camel_nntp_command):
	disconnect if we get an io error or user cancellation.
	(nntp_disconnect_online): reset current folder.
	(connect_to_server): and here too just to make sure.

	* providers/nntp/camel-nntp-folder.c (nntp_folder_sync_online):
	only save the summary, don't update from server, thats what
	refresh info does.
	(nntp_folder_download_message): fix exception handling.
	(nntp_folder_cache_message): same.
	(nntp_folder_get_message): ditto, plus major cleanup.
	(nntp_folder_download_message): take combined uid so it can cache
	and lookup properly.  duh.

	* providers/nntp/camel-nntp-store.c
	(nntp_store_get_subscribed_folder_info): if not fast, then open
	the folder, and update it.  Yeah i've given up trying to worry
	about performance vs usability.

	* providers/nntp/camel-nntp-summary.c (camel_nntp_summary_check):
	update the storesummary if we update the folder summary.  Hmm,
	isn't duplicated data meant to be a bad thing? :P

	* providers/nntp/camel-nntp-store.c (camel_nntp_store_set_folder):
	removed, now handled by nntp_command.
	(nntp_connected): removed, now handled by nntp_command.

	* camel-string-utils.c (camel_tolower): added ascii to-lower
	function.
	(camel_toupper): and upper, for completeness.

	* camel-store-summary.c (CAMEL_STORE_SUMMARY_VERSION): bumped file
	version by 1.  This is a mess, version 1 files treated the
	bitfield 'flags' with bit number values not bits.  Messy.

	* providers/nntp/camel-nntp-store-summary.c (store_info_save):
	write last/first count.
	(CAMEL_NNTP_STORE_SUMMARY_VERSION): bump version to 1.
	(store_info_load): if we're loading >= version 1, then load
	last/first counts.

	* providers/nntp/camel-nntp-store.c
	(nntp_store_get_folder_info_all): pass the whole line to
	store_info_from_line, dont strip last/first info.
	(nntp_store_info_update): renamed from info_new_from_line.  only
	add if not present.  handle updates, try and handle unread counts
	and readonly status.

2004-06-02  Not Zed  <NotZed@Ximian.com>

	* providers/nntp/camel-nntp-store.c: setup xover once we've
	started.

	* providers/nntp/camel-nntp-summary.c: (xover_setup): moved to
	nntp store.

	* providers/nntp/camel-nntp-folder.c (folder_check)
	(folder_check_free, camel_nntp_folder_new): remove async summary
	stuff.

	* providers/nntp/camel-nntp-store.c (camel_nntp_command): take
	exception argument again, and folder argument.  do retry logic and
	auth logic differently.
	(camel_nntp_raw_command): raw command interface, dont try
	reconnect or anything fancy.  pass i/o errors straight out, etc.
	(camel_nntp_try_authenticate): change to return return codes &
	take exception.

	* providers/nntp/camel-nntp-summary.c (camel_nntp_summary_new):
	just take path argument.
	(camel_nntp_summary_check): take a store, and a folder name.
	(add_range_head, add_range_xover): remove the time based update
	events, they never had any effect anyway.  Take store argument.
	(xover_setup): take store argument.

	* camel-folder-search.c (search_match_threads): remove debug.

2004-06-01  Not Zed  <NotZed@Ximian.com>

	** A few fixes for better rfc compliance, and cleaner code.

	* camel-mime-utils.c (header_encode_param): a bunch of logic
	cleanups with new util functions.
	(header_decode_init): setup a new type ATTR_CHAR, for
	attribute-char.

	* tests/misc/test2.c (main): new test for rfc2184 stuff.

	* camel-mime-utils.c (header_convert): helper to convert between
	charsets.
	(rfc2184_decode): fix a bunch of logic problems and use the helper
	above to simplify code.
	(decode_param_token): removed, not needed.
	(header_decode_rfc2184_param): removed, not needed.
	(header_decode_param): removed, not needed.  ugh.
	(header_decode_param_list): completely rewritten, hence lack of
	need of above.

2004-05-31  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-filter-gzip.c (camel_mime_filter_gzip_finalize):
	Don't leak the zlib stream internals.

2004-05-27  Jeffrey Stedfast  <fejj@novell.com>

	Fixes bug #59191.

	* providers/imap/camel-imap-store.c (camel_imap_store_readline):
	Don't override the exception with g_strerror() since presumably
	camel_imap_store_is_connected() will have set that for us (and
	will have a much more accurate exception anyway).

2004-05-26  Dan Winship  <danw@novell.com>

	* camel-store.c (camel_store_get_trash): If the store is not a
	vtrash store, just invoke the virtual method. (In particular,
	don't assume that the trash folder's name is CAMEL_VTRASH_NAME).
	If it is a vtrash store, just let camel_store_get_folder() do the
	work since it's duplicated there anyway. #57114
	(camel_store_get_junk): Likewise.

2004-05-25 Sivaiah nallagatla <snallagatla@novell.com>
	* providers/groupwise/came;-gw-listener.c (add_addressbook_sources):
	set port property on  e-source 

2004-05-25 Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/camel-gw-listener.c (lookup_account_info):
	return NULL when there is no existing gw account with same uid
	
2004-05-25  Not Zed  <NotZed@Ximian.com>

	* camel-store.c (camel_folder_info_build_path): removed.

	* camel-store.h (CamelFolderInfo): removed 'path', fixed all
	callers.
	(struct _CamelStore): removed 'dir_sep' fixed all uses.

2004-05-25  Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/camel-gw-listener.c (add_addressbook_sources)
	(add_calendar_tasks_sources) : remove /soap part from uri.
	make port as a e-source property instead of putting it in uri
	to amek the uris same as that of mail for password sharing 

2004-05-24  Not Zed  <NotZed@Ximian.com>

	* camel-mime-utils.c (camel_header_newsgroups_decode):
	fix/rearrange logic.  It was using the wrong working pointer.

2004-05-24  Sivaiah Nallagatla <snallagatla@novell.com>

	* camel-provider.h: Added CAMEL_PROVIDER_CONF_HIDDEN to
         conf item type enum. This is used by groupwise provider

	* providers/groupwise/camel-groupwise-provider.c: Added
	CAMEL_PROVIDER_CONF_HIDDEN to groupwise_conf_entries to pass the
	auth-domain value

	* providers/imap/camel-imap-store.c (imap_auth_loop): Read the
	auth-domain property from imap url and pass it camel sesstion apis

2004-05-22  Not Zed  <NotZed@Ximian.com>

	* camel-store.c: oops, forgot folder_created.  Removed locking, the
	object bag serialises stuff for us.
	(camel_store_get_junk): same.

	** Another unread count bug, #58814.

	* camel-store.c (camel_store_class_init): added a folder_opened
	event.
	(camel_store_get_folder): emit a folder_opened event whenever we
	[re] open the physical folder.

2004-05-21  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap/camel-imap-store.c (connect_to_server): Added a
	workaround for broken IMAP. Hopefully by forcing only the IMAP4
	command subset, we can work around their suckage.

2004-05-21  Not Zed  <NotZed@Ximian.com>

	* camel-session.c (camel_session_get_password): added a 'domain'
	argument, and rearragned arguments to be prettier and more
	consistent.  Fixed all callers.
	(camel_session_forget_password): added a domain argument.  Fixed
	all callers.

	** See #58376.

	* camel-folder.c (set_message_flags): if system flags change, then
	don't trigger a folder changed event.

	* camel-folder-summary.h (CAMEL_MESSAGE_SYSTEM_MASK): added this
	to indicate which flags are internal/apps not interested in.

	* camel-folder.c (filter_free): rearrange and use some helpers.
	(folder_changed): if we're frozen, dont go firing off threads to
	do any processing on each change, wait until we're called
	unfrozen.  Slight code rearragnement.
	(filter_filter): add progress to junk learn/unlearn, and separate
	them.

2004-05-19  Suresh Chandrasekharan  <suresh.chandrasekharan@sun.com>

	Fix for #58738 ja_JP.UTF-8: Evolution crashes when certain 
	ASCII/non-ASCII combination is used in mail subject

	* camel-mime-utils.c (camel_header_encode_string) Use 
	camel_mime_is_lwsp for determining word separators, 
	according to rfc822 (which's also same for rfc2047). 
	g_unichar_isspace as word separator is illegal.

2004-05-20  Jeffrey Stedfast  <fejj@novell.com>

	Fixes bug #42295 and the infinite loop part of bug #58766 (these 2
	bugs are almost identical, except the server responses are broken
	in different ways).

	* providers/imap/camel-imap-folder.c (imap_update_summary): Remove
	the kludge to re-SELECT the folder to force a re-FETCH of
	message-info's. This 1) doesn't do what it was meant to do and 2)
	has a tendency to cause infinite loops with broken servers such as
	Courier-IMAP.
	(imap_update_summary): Rework the loop that adds messages to the
	summary such that if we encounetr an error, we break out and set
	an exception (we can keep the messages up to the point of failure,
	but none after that because otherwise our uid-to-seqid mapping
	would be inconsistant with that of the server and could
	potentially cause data loss).

2004-05-20  Not Zed  <NotZed@Ximian.com>

	* camel-exception.c (camel_exception_setv): re-arrange the code so
	exception debug will print the expanded description.
	(camel_exception_set): print exception debug.

	* providers/pop3/camel-pop3-folder.c (pop3_get_message): same.

	* providers/local/camel-mh-folder.c (mh_get_message) *
	providers/local/camel-mbox-folder.c (mbox_get_message): *
	providers/local/camel-maildir-folder.c (maildir_get_message):
	Don't use INVALID_UID for errors which are more system related.
	And sync up all the error messages.

	* providers/nntp/camel-nntp-folder.c (nntp_folder_get_message):
	oops, poke the right uid to get the article number.
	(nntp_folder_cache_message): & here too.  Somehow fixes #58700,
	but i don't know why.

2004-05-19  Not Zed  <NotZed@Ximian.com>

	* camel-folder.c (transfer_message_to): copy the messageinfo
	rather than reference the source folder's one, we poke its flags
	variable if the message is deleted.  And dont re-delete the
	message if its already deleted.

	* providers/nntp/camel-nntp-folder.c (nntp_folder_get_message):
	use the article number instead of the messageid.  Some servers are
	just broken.
	(nntp_folder_cache_message): same.  See #58655.

	* camel-smime-context.c (sm_verify_cmsg): import the certs as
	UsageEmailRecipient as well as signer, and also save the certs
	always.

	** See #58641.

	* camel-vee-folder.c (vee_sync): don't rebuild auto-type vfolders.
	they should always be consistent and it saves a lot of unecessary
	work.

	* camel-store.c (store_sync): we don't want to sync any vfolders
	as part of the store sync call.  its used for a different purpose
	in vFolders.  oh well its a hack.

2004-05-18  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-maildir-store.c (fill_fi): do the same
	load of mailbox if we're in slow mode as we did for maildir.
	#58294.

	* camel-disco-folder.c (disco_expunge_uids): check for NULL
	implementation before calling it.
	(disco_sync): similar.  Fixes crash #58278.

2004-05-17  Jeffrey Stedfast  <fejj@novell.com>

	* camel-folder-search.c (search_match_threads): Fixed a string type-o.

	* camel-smime-context.c (sm_verify_cmsg): Fixed some spelling mistakes.

	* camel-gpg-context.c (gpg_decrypt): If the encrypted block was
	also signed, set the signature verification status on the Validity
	structure as well.

2004-05-17  Not Zed  <NotZed@Ximian.com>

	** Bug #56050.

	* providers/imap/camel-imap-store.c (imap_get_trash) 
	(imap_get_junk): similar to below.

	* providers/local/camel-local-store.c (local_get_trash)
	(local_get_junk): set state file on trash/junk to something we know
	about.

2004-05-17  Not Zed  <NotZed@Ximian.com>
	* providers/local/camel-mh-store.c (fill_fi): if we have no folder
	in-memory, load it if we're not doing it fast to get really up to
	date unread counts.  #57616.

2004-05-14  Not Zed  <NotZed@Ximian.com>

	* camel-store.c (camel_store_create_folder): don't allow creation
	of Trash or Junk folders.
	(camel_store_rename_folder): similar for rename.  #57250.

2004-05-13  Not Zed  <NotZed@Ximian.com>

	* camel-folder-summary.c (summary_build_content_info): set secure
	flag if we have a known security type.
	(flag_names[]): Added secure bit.
	(summary_build_content_info_message): set secure flag as
	appropriate.
	(summary_build_content_info_message): dont set attachments for
	simple types (non text), only base it on multipart/* stuff.
	(summary_build_content_info): same.

	* camel-folder-summary.h: added SECURE flag.  Indicates signed or
	encrypted content.

2004-05-12  Jeffrey Stedfast  <fejj@novell.com>

	* providers/imap/camel-imap-folder.c (camel_imap_folder_selected):
	Ignore PERMANENTFLAGS if it gives us an empty set. Works around
	broken IMAP servers like the one in bug #58355.

2004-05-12  Not Zed  <NotZed@Ximian.com>

	* camel-folder-search.c (search_threads): changed to match_threads.
	(camel_folder_search_search): remove thread matching stuff from here.

2004-05-11  Jeffrey Stedfast  <fejj@novell.com>

	* camel-smime-context.c (sm_signing_cmsmessage): Fixed a
	type-o. Fixes bug #58348.

2004-05-10  Jeffrey Stedfast  <fejj@novell.com>

	* camel-mime-filter-gzip.[c,h]: New class for zipping/unzipping
	gzip streams.

	* camel-mime-filter-yenc.[c,h]: New class for encoding/decoding
	the crack known as YEncode.

2004-05-07  Not Zed  <NotZed@Ximian.com>

	* camel-folder-thread.c (thread_summary): properly set the parent
	nodes for the re-parented phantom-node children.  Wasn't that fun
	to debug!

	* camel-folder-thread.h: make order and re bitfields, saves 4
	bytes/node.

2004-05-06  Not Zed  <NotZed@Ximian.com>

	* camel-digest-folder.c (digest_search_by_expression) 
	(digest_search_by_uids): 
	* providers/nntp/camel-nntp-folder.c (nntp_folder_search_by_expression)
	(nntp_folder_search_by_uids): 
	* providers/imap/camel-imap-folder.c (imap_search_by_expression) 
	(imap_search_by_uids):
	* providers/local/camel-local-folder.c (local_search_by_expression) 
	(local_search_by_uids): use camel_folder_search_search & some minor cleanups.

	* camel-folder-search.c (search_threads): keep track of the match
	threads option for this search.
	(camel_folder_search_match_expression): Removed, not used anymore.
	(camel_folder_search_search): new api entry point for searching, a
	bit easier to use and needed for thread matching.

	* camel-folder-search.c (camel_folder_search_search): new search
	api entry point, take a full summary and optionally a subset of
	uids to match against.
	(search_match_all): use the uids' passed in to only search a
	subset of uid's.

	* providers/imap/camel-imap-store.c (connect_to_server): set
	nodelay and keepalive on the socket.

	* camel-file-utils.c (camel_read): put a timeout on the select.
	Logic shuffle to match the ssl stuff.
	(camel_write): Similar.

	* camel-tcp-stream-ssl.c (stream_connect): remove timeout, use
	CONNECT_TIMEOUT directly.
	(stream_read): put a timeout on the poll.  IO_TIMEOUT.  And a
	little logic shuffle.
	(stream_write): similar.
	(CONNECT_TIMEOUT): make this 4 minutes === tcp-raw timeout.

2004-05-05  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-folder.c (get_message_simple): dont
	set X-Evolution-Source here anymore, set in caller.
	(imap_get_message): move the busted server get into the retry
	loop.  only leave the simple cache test outside of it.

2004-05-04  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-session.h: Get rid of #ifdef ENABLE_THREADS stuff, that
	was done away with a while back and is causing problems for 3rd
	parties trying to use camel unless they explicityly #define
	ENABLE_THREADS in their code.

2004-05-04  Christian Kellner <gicmo@xatom.net>

	* providers/groupwise/camel-gw-listener.h: Fixed typo.

2004-05-04  Not Zed  <NotZed@Ximian.com>

	** See #57979.

	* camel-vee-folder.c (subfolder_renamed_update): when the
	subfolder gets renamed, remove all the old uid's and add the new
	ones (since the uid is based on the subordinate folder name).
	(subfolder_renamed): listen to renamed folder events.

	* providers/local/camel-mbox-store.c (get_folder_info): if we're
	getting a single folder with no children, make sure we fill the
	counts out.  Fixes some rename strangeness.

	* camel-vee-folder.c (camel_vee_folder_add_folder): hook onto the
	folder renamed signal.
	(camel_vee_folder_finalise): unhook folder_renamed signal.
	(camel_vee_folder_remove_folder): same.

2004-05-03  Not Zed  <NotZed@Ximian.com>

	** See bug #57881.

	* camel-vee-folder.c (camel_vee_folder_add_folder): use the
	folder's change log and frozen count, not our copy.
	(vee_thaw): dont maintain our frozen count.
	(vee_freeze): same.
	(folder_changed_change): if we get changed messages that dont
	match, make sure they're also propagated as a change too.

	* camel-private.h: remove the freeze_count from
	camelveefolderprivate.  We already have that in the camel folder
	private.

2004-04-30  Priit Laes  <amd@tt.ee>

	* providers/nntp/camel-nntp-summary.c: Fix typo. #53466.

2004-04-28  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-folder.c: Change the UID_SET_LIMIT to
	768 (something <1000 octets as suggested by rfc2683). Fixes bug
	#57389.

	* camel-smime-context.c: Mark exception strings for translation
	and fixed a spelling mistake.

2004-04-27  Not Zed  <NotZed@Ximian.com>

	** See bug #57659.

	* camel-vee-store.c (vee_get_folder_info): translate Unmatched in
	the folder display name.

	* camel-store.c (add_special_info): dont translate full_name or
	path, only do that for name.

2004-04-23  Sarfraaz Ahmed <asarfraaz@novell.com>
	
	* camel-provider.h: Added HAS_LICENSE flag for allowing camel
	providers to display license file.

2004-04-22  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-folder.c (imap_expunge_uids_online)
	(imap_expunge_uids_resyncing): Send a flag list rather than
	\Deleted by itself.  See #57381.

2004-04-21  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-folder.c (imap4_sync_changes): Don't
	bother doing any work if perm_flags is 0.

2004-04-21  Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/Makefile.am: added CAMEL_LIBS to LIBADD

	* providers/groupwise/camel-gw-listener.c
	(get_addressbook_names_from_server): added new function to get
	addres book names from server.
	(add_addressbook_sources) (modify_addressbook_sources) : changed
	the implementation to use address book returned form above call
	while creating e-sources

2004-04-21  Not Zed  <NotZed@Ximian.com>

	* providers/nntp/camel-nntp-folder.c (camel_nntp_folder_new): set
	the meta data file on nntp folders.

	* camel-disco-folder.c (disco_refresh_info_online): implement
	dummy virtual method.

	* providers/nntp/camel-nntp-folder.c
	(nntp_folder_refresh_info_online): implement.  Fixes #57280.

2004-04-19  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-folder.c (untagged_fetch): Fixed to
	not expect ]'s as part of the BODY atom token.

2004-04-16  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-vee-store.c (change_folder): (flags & 0) will never be
	true. Fixes bug #56982.

2004-04-15  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-utils.c: Changed imap_atom_specials[]
	to not treat ']' as an atom char (as per rfc3501). Fixes bug
	#50985.

2004-04-14  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-store.c
	(imap_check_folder_still_extant): Use %F instead of %S so that the
	folder name gets properly converted from using '/' path delimeters
	to whatever the native character the server uses. Should fix bug
	#56715.

2004-04-14  Not Zed  <NotZed@Ximian.com>

	* camel-disco-store.c (set_status): do offline mail syncing (only
	for open folders so far).  If we fail doing syncing or store sync,
	don't abort.

2004-04-13  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-store.c (get_folder_online):
	Rearranged some error checking code to fix bug #56405.

2004-04-13  Not Zed  <NotZed@Ximian.com>

	* camel-folder.c (folder_getv): implement the new counts, and get
	them all atomically so they're only calculated once and can return
	consistent results.

	* camel-folder.h: Added CAMEL_FOLDER_DELETED, CAMEL_FOLDER_JUNKED,
	and CAMEL_FOLDER_VISIBLE args, to support client display of
	various values.

2004-04-13  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-folder.h (camel_folder_delete_message): Fix NotZed's fix
	to not mark messages as unseen. Fixes bug #56879.

2004-04-13   Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/camel-gw-listener.c
	(add_addressbook_sources): change the auth type string from
	Password to plain/password

2004-04-12  Jeffrey Stedfast  <fejj@ximian.com>

	Fix for bug #56878.

	* camel-gpg-context.c (gpg_verify): Don't rely on the exit code of
	gpg, we already save enough state to decide if the sig is valid
	without it. Modified to only set BAD if gpg->validsig and
	gpg->nopubkey are both FALSE. If we get a NO_PUBKEY status
	message, then it simply means that the the sender could not be
	verified.
	(gpg_ctx_parse_status): Listen for NO_PUBKEY status messages.

2004-04-11  Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/camel-gw-listener.c 
	(add_addressbook_sources) (modify_addressbook_sources) : add
	bookname to uri 

2004-04-09  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-provider.c: Fix capitalisation of the
	"mailcheck" section title and move it to the top (so it matches
	with the UI).

	* providers/imap/camel-imap-folder.c (imap_get_message): Fetch the
	entire message in one fell swoop even if the message size is
	larger than 5k *if* the message is a single part. Fixes bug #56686.

2004-04-08  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-store.c (get_folder_online): Changed
	(!flags & _CREATE) to (!(flags & _CREATE))
	(get_folder_online): Do what create_folder() does and if the
	parent folder has \NoInferiors set but contains no messages,
	delete the parent folder and recreate it before creating the child
	folder. Fixes bug #56651.

2004-04-08  Not Zed  <NotZed@Ximian.com>

	* camel-folder.h (camel_folder_delete_message): always set the
	seen flag when we delete a message.  I demand that this may, or
	may not, fix #56549.

	* camel-folder.c: include camel-debug.h
	(camel_folder_set_message_flags): fixed the doco slightly (well
	reversed the flag and set explanation) and give an example.

	* providers/local/camel-mbox-folder.c
	(mbox_set_message_user_flag): message changed to folder_changed.
	(mbox_set_message_user_tag): ditto.

	* camel-vee-folder.c (camel_vee_folder_finalise): dont hook onto
	message_changed.
	(camel_vee_folder_add_folder): or unhook.
	(camel_vee_folder_remove_folder): "
	(message_changed): or proxy.

	* camel-folder.c (camel_folder_class_init): removed the
	message_changed event - its redundant, and covered by
	folder_changed, and just makes life difficult for everything using
	message_changed/folder_changed (and nothing uses it anyway).
	(message_changed): removed.
	(set_message_user_flag): emit a folder_changed event instead of
	message changed.
	(set_message_user_tag): "
	(set_message_flags): "

	* camel-object.h: revered the CAMEL_OBJECT_TYPE change, it should
	be a global variable access.

2004-04-06  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-folder.c: Added mutex locking where
	appropriate.

	* providers/imap4/camel-imap4-store.c: Added mutex locking where
	appropriate.

	* camel-folder-summary.h (CAMEL_FOLDER_SUMMARY_TYPE): Defined.

	* camel-object.h (CAMEL_OBJECT_TYPE): Fixed.

	* providers/imap4/camel-imap4-folder.c
	(camel_imap4_folder_utf7_name): Implemented.

	* providers/imap4/camel-imap4-store.c (imap4_build_folder_info):
	Use camel_folder_info_build() to build the folder-info tree.

2004-04-06  Not Zed  <NotZed@Ximian.com>

	* camel-debug.c: #if 0 out the sys/debugreg stuff.

	** See bug #56110.

	* providers/imap/camel-imap-folder.c (get_content): more debug!
	(get_content): if we have no content-type header set on a sub-part
	of a multipart/digest, then we need to set it to message/rfc822 as
	in the multipart/digest rfc (2046 or so?).

	* camel-folder.c (camel_folder_get_message): output this stuff as
	folder debug.

	* providers/imap/camel-imap-folder.c (imap_get_message): add some
	imap:folder debug.
	(get_content): get xx.TEXT rather than xx if we're from a message
	parent part.

	** See bug #56464.

	* camel-folder.c (camel_folder_transfer_messages_to): do not lock
	the source here.
	(transfer_message_to): call the main entry point for get message
	and append message.

	** See bug #56050.

	* camel-vee-store.c (vee_delete_folder): delete the state file if
	it exists.

	* camel-object.c (camel_object_state_write): create the parent dir
	if we need to.  Also spit a warning if we fail in the end.

	* camel-vee-folder.c (camel_vee_folder_new): set the persistent
	state file location.
	(vee_sync): write the state file when we sync.

2004-04-05  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-store.c (get_folders): dont add
	folders to folders_out here, only in get_folders_add_folders.

	* camel-store.c (camel_folder_info_build): simplify 'list append'
	since we have next pointer at the head of the struct.

	* providers/imap/camel-imap-store.c (create_folder): fixed
	"containes" spelling count.
	(get_folder_online): "
	(get_folders_add_folders): duh, add the folder info to the
	folders_out array.

2004-04-02  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-folder.c (camel_folder_get_deleted_message_count): New
	function to get the deleted message count (used for Outbox count
	which is total minus deleted).

2004-04-02  Not Zed  <NotZed@Ximian.com>

	* camel-exception.c (w): turn this on, this should always be on,
	it points to real bugs in the code.

	* camel-folder-summary.c (summary_build_content_info): dont set
	attachments if its a signature block.
	(summary_build_content_info_message): same.

2004-04-01  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-exception.c (w): Wrap annoying exeption warnings with w().

2004-03-30  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-store.c (imap4_get_folder_info):
	Partially implemented.
	(imap4_get_folder): Implemented.

2004-03-30  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (header_decode_param): Use
	header_decode_text() rather than rfc2047_decode_word() to decode
	the brokenly rfc2047 encoded param value string in case it is
	actually made up of multiple rfc2047 encoded words. Thanks to
	Andrei Nigmatulin for the fix.

2004-03-30  Not Zed  <NotZed@Ximian.com>

	* camel-store.c (camel_store_get_folder_info): added some debug to
	dump the whole folderinfo tree if store:folder_info is set.

	* providers/imapp/camel-imapp-driver.c: #if 0 out some code, to
	kill warnings.

	* camel-url-scanner.c: include ctype.h for isspace (wonder if it
	should use utf8 funcs?).

2004-03-29  Not Zed  <NotZed@Ximian.com>

	** See #56146.

	* providers/imap/camel-imap-store.c (get_folders): check the
	top-level folders list for duplicates as well.
	(get_folders_add_folders): split out the folder return merging
	code from get_folders.  Absolute mess of crap to deal with more
	busted servers.

	* camel-debug.c (camel_debug_start, camel_debug_end): some helpers
	to wrap debug output for atomicicity.

2004-03-29  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap4-folder.c (camel_imap4_folder_new):
	Implemented.

	* providers/imap4/camel-imap4-engine.c (engine_parse_namespace):
	If the namespace begins with "INBOX", canonicalise the INBOX
	portion (ie, make it all caps).

	* providers/imap4/camel-imap4-store.c (imap4_noop): Implemented.

2004-03-29  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-store.c (get_folder_status): Updated
	to actually parse the STATUS response into a list of item/value
	pairs.
	(create_folder): Updated for above change.
	(get_folder_counts): Only call get_folder_status() once (we can
	get both values with a single call now). Fixes a FIXME and might
	also fix bug #55784.

	* providers/local/camel-mbox-store.c (get_folder_info): Removed
	debugging printfs.

	* providers/local/camel-local-folder.c
	(camel_local_folder_construct): Since the folder was *just*
	created, it shouldn't have any subfolders so set the
	CAMEL_FOLDER_NOCHILDREN flag (altho, ideally, we wouldn't be
	guessing these flags at all - rather we'd call get_folder_info()
	or some such). Fixes bug #56010.

2004-03-29  Radek Doulik  <rodo@ximian.com>

	* camel-mime-filter-tohtml.c (html_convert): close pre tag in case
	we just flush. I am not sure if it's still worth to check for
	inlen == 0 and handle it specially, but didn't want to make too
	big changes.

	Fixes #55817

2004-03-29  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-store.c (get_folder_counts): use
	object_bag_peek instead of _get, since we dont want to clash/wait
	for reservations.  More #56045 related fixes.
	(get_folder_counts): revert the lookup/hashtable stuff for the
	folder, and use object_bag_peek.

	* camel-object.c (camel_object_bag_peek): new method to get an
	object bag entry without worrying about if its reserved or not.

	* camel-gpg-context.c (gpg_verify): get the content-type off of
	the multipart-signed, not its container.  This seems wrong
	... but might fix #56084.

	* providers/imap/camel-imap-store.c (get_folder_counts): remove
	locking here, we're locked whne we enter.
	(fill_fi): call refresh_info unlocked.  More for #56045.

2004-03-28  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap-folder.[c,h]: New source files
	implementing the CamelFolder class for the new IMAP4
	implementation.

	* providers/imap4/camel-imap-summary.[c,h]: New source files
	implementing the CamelFolderSummary class for the new IMAP4
	implementation.

2004-03-26  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-folder.c (imap_update_summary):
	Reverted imap.web.de fix.

2004-03-26  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-maildir-summary.c (flagbits[]): Added new
	maildir flags D for draft and commented P for forwarded.

	* providers/imap/camel-imap-store.c (get_folder_counts): Instead
	of looking up the folder in the object bag which will handle
	reservations and perhaps deadlock, just get the list of opened
	folders and use them if they're available.  Should fix #56045.

2004-03-25  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap-engine.c
	(camel_imap_engine_parse_resp_code): No longer need to split ']'
	tokens from atom tokens due to a fixup in the ABNF grammar in
	rfc3501.

	* providers/imap4/camel-imap-specials.c: Changed ATOM_SPECIALS to
	include ']' (this is an addition in rfc3501).

	* providers/imap4/camel-imap-store.[c,h]: New Store class for
	IMAP. Implemnted a bunch of but still got a ways to go.

2004-03-25  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-folder.c (imap_update_summary): If the
	server is imap.web.de, just ask for all the headers rather than
	"HEADER.FIELDS.NOT (RECEIVED)". Actually, maybe we should always
	just query for the entire header block?
	(imap_get_message): If the server is brain-damaged (that's a
	technical term), always fetch the message in whole, never bother
	to try and fetch partial messages (Courier-IMAP gives us the wrong
	BODY responses fairly often).

	* providers/imap/camel-imap-store.c (connect_to_server): Set
	store->braindamaged to TRUE if we find the string "Courier-IMAP"
	in the greeting.

2004-03-25  Jeffrey Stedfast  <fejj@ximian.com>

	Fix for bug #55018.

	* providers/imap/camel-imap-store.c (create_folder): Don't allow
	the user to create folders with #, %, * or the directory separator
	in the folder name (added the checks for %, * and #).
	(get_folder_online): Add a check to make sure the folder name is
	sane before sending a CREATE (ie. we want to allow getting of
	folders with discouraged characters in them if they exist, but we
	don't want to allow the user to create them).

2004-03-25  Martyn Russell  <ginxd@btopenworld.com>

	* providers/smtp/camel-smtp-provider.c: Removed newline character
	from the provider description

2004-03-25  Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/camel-groupwise-provider.c: removed ldap
	seetings and added a settng for SOAP port 

	* providers/groupwise/camel-gw-listner.h
	(add_calendar_tasks_sources, remove_calendar_tasks_sources),
	(modify_calendar_tasks_sources): read port number from url instead
	of hardcoding. Also removed code for adding e-sources for ldap
	address book and adding now e-sources for groupwise address book

2004-03-24  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap4/camel-imap-engine.c (camel_imap_engine_literal):
	New convenience wrapper function.
	(engine_parse_status): Fixed to handle literal mailbox strings.

	* providers/imap4/camel-imap-command.c (camel_imap_command_newv):
	Changed how %L works - create the CamelIMAPLiteral for our caller
	instead of expecting them to create it for us. We can autodetect
	what type of object (stream vs data-wrapper) the literal is, so
	it's trivial to do.

2004-03-23  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-folder.c (imap_get_message): Reworked
	the else bit to fix a bug where if we had the BODY structure, we simply
	wouldn't try fetching the actual message.

2004-03-23  Not Zed  <NotZed@Ximian.com>

	* camel-exception.c (camel_exception_setv): use camel debug to add
	some debug here.

	* camel.c (camel_init): call camel_debug_init().

	* camel-debug.c (camel_debug_init, camel_debug): new util stuff
	for extended debug options.

	* providers/imap/camel-imap-folder.c (imap_get_message): if we're
	supposed to be online, check we are online before proceeding.
	Actually major restructure so we re-try the fetch a couple of
	times first before failing.  i.e. silent reconnect.  See #55381.

	* providers/imap/camel-imap-store.c (get_folder_info_online):
	connect lock around this.  was getting a race with mem corruption
	otherwise.

2004-03-22  Not Zed  <NotZed@Ximian.com>

	* camel-mime-utils.c (camel_header_newsgroups_decode)
	(camel_header_newsgroups_free): decode newsgroups header into a
	list of newsgroups.

	** See #55887.

	* providers/nntp/camel-nntp-summary.c (camel_nntp_summary_check):
	NOOP if we're offline.

	* providers/nntp/camel-nntp-store.c (nntp_connected): spit a
	warning if we try to do stuff whilst offline, rather than crash.

2004-03-19  Not Zed  <NotZed@Ximian.com>

	* camel-disco-store.c (disco_connect): ref the diary before
	replaying it.  it could get unreffed during replay if there's an
	error and we disconnect.

	* camel-store.c (camel_store_get_folder): no longer use
	folder_lock, we already have adequate serialisation code here or
	below here.  I hope.
	(camel_store_get_folder_info): same here.

	* providers/imap/camel-imap-store.h: remove async_thread thing.

2004-03-17  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-folder.c (imap_get_message): Checking
	that mi->content->type != NULL is no longer good enough to tell if
	a ContentInfo is complete (ie. contains the parsed BODY
	response). We need to check that th ContentInfo has children if
	the part is a multipart of message/rfc822 part. Apparently Zucchi
	didn't test his camel-folder-summary changes using IMAP.

2004-03-17  Radek Doulik  <rodo@ximian.com>

	* camel-folder-summary.h: use 1<<30 for CAMEL_MESSAGE_JUNK_LEARN,
	1<<17 was already used by imap provider and maybe others

2004-03-17  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-maildir-store.c: Reverted jeff's fix for
	#55018, since it wasn't tested, and doesn't work.  Wrote an
	alternate implementation, and tested it at least once.  Turns out
	it was a one line error, it still wasn't tested.  Oh well, its
	rewritten now.

	* See bug #55618.
	
	* camel-disco-diary.c (camel_disco_diary_new): seek to the end of
	the file after we open it.  c99 apparently says the file merely
	adds to the end of the file when you write, not that it is opened
	and positioned at the end of the file (linux's man pages are out
	of date).

	* camel-folder-summary.c (content_info_new): setup the content
	type as well, from the headers.

	* providers/imap/camel-imap-summary.c
	(camel_imap_summary_add_offline): copy size from the source info.

2004-03-15  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-folder.c (folder_rename): Always use '/' to derive the
	basename of the folder. folder->full_name is always the UNIX-path
	evrsion of the folder name, no matter what the actual path
	delimeter is on the underlying store.

	* providers/imap/camel-imap-store.c (get_folder_online): If the
	initial SELECT fails and CREATE is specified, clear the exception
	before attempting to CREATE, this way we don't have an exception
	set even if the CREATE passes. Fixes bug #55607.

2004-03-16  Not Zed  <NotZed@Ximian.com>

	* camel-mime-message.c (camel_mime_message_init): rever previous
	patch.  We don't want to set the default mime/type, it'll break
	stuff.

2004-03-15  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-mbox-store.c (delete_folder): same as
	below for path.

	* providers/local/camel-local-store.c (delete_folder): NULL out
	str before looking up the state file using it.  Otherwise we
	double-free str.

	* camel-mime-parser.c (folder_scan_skip_line): we want to scan
	till in-end-1.  If we've been called we're either at the end of
	data, or we know we have an end of line character within memory.
	Another case in Bug #53355.

	* providers/imap/camel-imap-folder.c (get_content, get_message):
	set the mime-type field on the content the same way as
	construct_from_stream does.  Bug #55472.

	* camel-mime-message.c (camel_mime_message_dump): utility function
	to dump message content to stdout.
	(camel_mime_message_init): default mime type to message/rfc822.

	* camel.c (camel_init): change camel verbose debug to be an int, a
	bitmask of debug options.

	* camel-mime-utils.c (camel_header_location_decode): drop embedded
	whitespace characters, and don't do unquoting, etc.  See rfc2557
	4.4.2 and rfc2017 3.1.

2004-03-12  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/smtp/camel-smtp-transport.c (smtp_set_exception): Now
	takes an argument to specify whether disconnecting when respbuf is
	NULL is safe (to prevent us from recursively disconnecting or
	disconnecting during a connect).

2004-03-12  Jeffrey Stedfast  <fejj@ximian.com>

	Fix for bug #53497.

	* providers/smtp/camel-smtp-transport.c (smtp_helo): Instead of
	unreffing the streams, call camel_service_disconnect().
	(smtp_mail): Same.
	(smtp_rcpt): Same.
	(smtp_data): Same.
	(smtp_send_to): Ignore exceptions for smtp_rset(). Also, check
	that we are connected before we try to send (in Evolution's
	current usage scenario, this isn't a problem but in the future if
	we ever try to fire off several messages via the same smtp
	connection, it may be - especially if RSET failed during the
	previous send).

2004-03-12  Radek Doulik  <rodo@ximian.com>

	* camel-folder.c (folder_changed): clearn the learn bit only if
	set.

2004-03-12  Jeffrey Stedfast  <fejj@ximian.com>

	Fixes for bug #55018.

	* providers/local/camel-local-folder.c
	(camel_local_folder_construct): Use camel_url_to_string() here
	too, so we properly encode the fragment.

	* providers/local/camel-mbox-store.c (get_folder_info): Use
	CamelURL to properly encode the fi->uri. Pass the CamelURL into
	scan_dir() so that scan_dir() can re-use it (rather than having to
	malloc/parse/free for each file/dir)
	(scan_dir): Use camel_url_to_string().

	* providers/local/camel-maildir-store.c (get_folder_info): Same as
	mbox.
	(scan_dir): Same as mbox. We also need to set the
	CAMEL_FOLDER_NOSELECT flag if appropriate.

	* providers/local/camel-mh-store.c (get_folder_info): Same as mbox
	and maildir.
	(folders_scan): Now takes a url argument which we pass off to
	folder_info_new().
	(recursive_scan): Same.
	(folder_info_new): Use camel_url_to_string().

2004-03-11  Radek Doulik  <rodo@ximian.com>

	* camel-folder.c (camel_folder_set_message_flags): watch for
	setting JUNK flag, if JUNK_LEARN is not set as well then reset
	JUNK_LEARN bit
	(folder_changed): look for junk changes in uid_changed's messages,
	if these changes request junk filter learning
	(CAMEL_MESSAGE_JUNK_LEARN bit set) then prepare junk and nonjunk
	uid arrays, clear CAMEL_MESSAGE_JUNK_LEARN bit so that we don't
	process it again
	(folder_changed): start filter thread if there's junk and/or
	nonjunk arrays
	(filter_filter): if junk/nonjunk arrays are non-NULL, call junk
	filter report to learn junk/non-junk messages
	(filter_free): free junk/nonjunk uids and arrays

	* camel-folder-summary.h: added CAMEL_MESSAGE_JUNK_LEARN to
	CamelMessageFlags, used when setting CAMEL_MESSAGE_JUNK flag to
	say that we request junk plugin to learn that message as
	junk/non-junk

2004-03-12  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/smtp/camel-smtp-transport.c (connect_to_server): If
	errno is EINTR, set USER_CANCEL instead of SERVICE_UNAVAILABLE or
	whatever.
	(smtp_helo): Same.
	(smtp_auth): Same.
	(smtp_mail): Same.
	(smtp_rcpt): Same.
	(smtp_data): Same.
	(smtp_rset): Same.
	(smtp_quit): Same.
	(smtp_set_exception): Here too.
	(smtp_auth): If the AUTH response code is not 334, then use
	smtp_set_exception() to get the most accurate error report we can.

2004-03-11  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-object.c (cobject_state_read): Sanity check that count is
	<1024 and also use g_try_malloc so that we can recover if malloc
	fails.

2004-03-11  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-store.c (no_such_folder): removed
	this.  not sure what it was doing there, a 1 line funciton used
	once.
	(get_folder_online): pass exception to camel_imap_command.  if we
	got a user cancel, pass it up.  See #55388.
	(hash_folder_name, compare_folder_name): more g_ascii_strcasecmp
	stuff.

2004-03-11  Not Zed  <NotZed@Ximian.com>

	* camel-vee-store.c (vee_get_folder_info): we need to add the
	folderinfo always if we're recursive from top.  Should fix #52965
	and maybe the other vfolders not showing on startup bug.

	* providers/imap/camel-imap-store.c (get_one_folder_offline):
	(parse_list_response_as_folder_info): turn off NOINFERIORS always,
	translate to nochildren.
	(imap_store_refresh_folders): check we're updating an imap folder,
	we could also have trash folders in the store too.

2004-03-08  Not Zed  <NotZed@Ximian.com>

	* camel-vee-store.c (vee_get_folder_info): setup virtual/system
	flags as appropriate.
	(change_folder): setup flags properly.

	* providers/nntp/camel-nntp-store.c
	(nntp_store_get_subscribed_folder_info): mark all folders as
	system folders.

	* providers/local/camel-mh-store.c (fill_fi): add this to setup
	folderinfo.
	(folder_info_new): call fill_fi to fill unread/total.
	(recursive_scan, folders_scan): ahh yeah, so wtf was i thinking,
	store->flags != get_folder_info flags!!!!

	* providers/local/camel-maildir-store.c (camel_folder_info_new):
	remove unread count arg & setup total.
	(fill_fi): setup total field.
	(scan_dir): remove the code that checked the directory directly -
	use fill_fi instead.  It will more accurately reflect what you get
	when you visit the folder.
	(camel_folder_info_new): mark "." as a system folder.
	(scan_dir): try to setup children/no children flags properly.

	* providers/local/camel-mbox-store.c (fill_fi): setup total field.
	(scan_dir): init total.
	(get_folder_info): "

2004-03-05  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-store.c
	(parse_list_response_as_folder_info): mark INBOX as a system
	folder.  Can't be renamed/deleted.
	(fill_fi): setup total field.
	(get_folder_counts): ditto.

	* camel-store.c (add_special_info): set the system folder flag.

	* camel-store.h: time to fix up the camelfolderinfo mess.  fix
	some member names, and add some type fields.  Fixed all uses.

2004-03-04  Not Zed  <NotZed@Ximian.com>

	** See bug #53355.

	* providers/imap/camel-imap-folder.c (get_content): if the parent
	isn't a message/rfc822 type, we don't want to get the section.TEXT
	for multipart/signed, we just want to get section.

2004-03-03  Rodrigo Moya <rodrigo@ximian.com>

	* providers/groupwise/camel-gw-listener.c
	(add_calendar_tasks_sources): use "Calendar" and "Checklist" for the
	folder names, instead of "Default".
	(remove_calendar_tasks_sources): remove the correct folder.

2004-03-03  Not Zed  <NotZed@Ximian.com>

	* camel-operation.c (camel_operation_uncancel): attempt at
	uncancelling a cancelled operation.

	* camel-stream-filter.c (do_write, do_write): fun dun diddley un
	fun.  Since we're writing a const buffer, we need to copy it
	first.  See #54937.

2004-02-27  Not Zed  <NotZed@Ximian.com>

	** See bug #54755.

	* camel-vtrash-folder.c (vtrash_append_message)
	(vtrash_transfer_messages_to): error/fail out if the user tries to
	copy messages to the trash.
	(vtrash_transfer_messages_to): use the destination bit not the
	source bit for moving messages to a vtrash folder.

	* camel-gpg-context.c (gpg_ctx_parse_status): ignore NODATA
	response, otherwise we abort in a meaningless way.  See #52939.

	* providers/imap/camel-imap-utils.c: use g_ascii_str[n]casecmp
	everywhere.
	* providers/imap/camel-imap-utils.c (imap_body_decode): fix the
	sense of the nil check for the subtype of a mutlipart.  See
	#53355.

2004-02-26  Not Zed  <NotZed@Ximian.com>

	* camel-session.c (camel_session_check_junk_for_imap) 
	(camel_session_set_check_junk_for_imap): removed.

	* providers/imap/camel-imap-provider.c: Add filter_junk and
	filter_junk_inbox options to the receive option page.

	* providers/imap/camel-imap-store.c (imap_setv, imap_getv): handle
	FILTER_JUNK and FILTER_JUNK_INBOX parameters.
	(imap_setv): conver to switch rather than if statement.
	(construct): handle url args for filter_junk and
	filter_junk_inbox.

	* providers/imap/camel-imap-folder.c (camel_imap_folder_new): Set
	the folder's flags based on the stores junk settings.
	(imap_update_summary): remove the test for
	session_check_junk_for_imap, its handled per-store now.

	* camel-folder.c (folder_changed): only check for FILTER_RECENT or
	FILTER_JUNK to see if we need to do filtering.

	* camel-folder.h (CAMEL_FOLDER_FILTER_JUNK): renamed from
	CAMEL_FOLDER_SUPRESS_JUNK_TEST (and obviously inverted logic).

2004-03-02  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-summary.c
	(mbox_summary_encode_x_evolution): Overrides the parent method. We
	don't want to encode user flags/tags or the size of the header
	will change and force a complete rewrite of the mbox file.

2004-02-25  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-filter-driver.c (camel_filter_driver_filter_folder): Free
	the uids *after* reporting Complete, otherwise we get an FMR if
	our caller didn't pass in the uids.

	* camel-sasl-gssapi.c (gssapi_challenge): #ifdef out another
	gss_release_buffer() call as this function causes memory
	corruption if using Heimdal's implementation of Kerberos5. Yay
	Heimdal.

2004-02-25  Radek Doulik  <rodo@ximian.com>

	* camel-folder.c (get_unread_message_count): do not avoid junk
	mails in unread count

2004-02-25  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-summary.h (CAMEL_IMAP_MESSAGE_RECENT):
	moved the RECNET flag into the folder area (bit 17-30).

2004-02-24  Not Zed  <NotZed@Ximian.com>

	** See bug #53876.

	* providers/imap/camel-imap-command.c (camel_imap_command): ref
	the folder before unreffing store->current_folder, incase they're
	the same.  Do a select anyway.

	* providers/imap/camel-imap-folder.c (imap_refresh_info): keep the
	connect_lock for longer, imap_rescan for one assumes its locked.
	Fixes a race selecting the folder for refresh.

2004-02-24  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-stream-process.c: #include <signal.h>, we don't need limits.h

	* camel-store.c (camel_store_folder_uri_equal): New function to do
	what camel_store_uri_cmp() was supposed to do.

2004-02-23  Rodney Dawes  <dobey@ximian.com>

	* providers/local/camel-mbox-store.c (scan_dir): If our folder has
	a subdir, but no actual children, then we need to unset the flag for
	CAMEL_FOLDER_CHILDREN

	Fixes #54470

2004-02-23  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-store.c (camel_store_uri_cmp): Removed. Useless/broken
	function.

2004-02-20  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-provider.c (camel_provider_list): Init list to NULL to
	prevent the crash in bug #54574.

2004-02-19  Chris Toshok  <toshok@ximian.com>

	* camel-smime-context.c: wrap this file with #ifdef ENABLE_SMIME
	instead of #ifdef HAVE_NSS.

2004-02-19  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-store.c (get_folder): Add sanity
	checking to the folder name if we are going to create it, just
	like we do in create_folder().

2004-02-19  Not Zed  <NotZed@Ximian.com>

	* providers/*/camel-*-provider.c
	(camel_provider_module_init): Fixes for api changes.

	* camel-provider.c (camel_provider_load): no longer take session
	argument.  the providers are global resources.
	(camel_provider_init): dont return anything anymore.  (error?)
	call from camel_init now.  Use a recursive lock too.

	* camel-session.c (camel_session_register_provider)
	(camel_session_list_providers, camel_session_get_provider): Moved
	to camel-provider, camel_provider_register/list/get.
	(vee_provider): moved to camel-provider.c

2004-02-18  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-gpg-context.c (gpg_verify): Use the trust to decide the
	validity signature status. (Better way of solving yesterday's
	problem)

	* camel-cipher-context.h: Revert change from yesterday.

2004-02-17  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-gpg-context.c (gpg_verify): Set the trust.

	* camel-cipher-context.h: Add a trust metric to signatures.

2004-02-17  Not Zed  <NotZed@Ximian.com>

	* camel-vee-store.c (vee_sync): implment, make sync a noop on vee
	stores.  Speeds up exit, so we don't try and sync and re-sync
	folders multiple times.

	** See bug #53861.

	* providers/nntp/camel-nntp-summary.c (add_range_xover): Fix from
	Edd Dumbill <edd@usefulinc.com> to avoid aborting on irrelevently
	truncated lines.

2004-02-16  Not Zed  <NotZed@Ximian.com>

	** See bug #51045.

	* providers/imap/camel-imap-store.c (fill_fi): similar to mbox
	version.
	(get_folder_counts): use fill_fi to try and get folder counts if
	we're not doing the hard slog.
	(get_one_folder_offline): use fill_fi to try to get folder counts
	from open folders or summaries.

	* providers/local/camel-maildir-store.c (fill_fi): similar to mbox
	version.
	(scan_dir): use fill_fi to get the unread count now.

	* providers/local/camel-mbox-store.c (fill_fi): helper to lookup
	unread count either from active folder or from summary file, if
	it's available.
	(scan_dir, get_folder_info): use helper above to get folder info.

	* devel-docs/camel-folder-summary.txt: New document describing the
	format/conventions in the CamelFolderSummary file.

	* providers/nntp/camel-nntp-summary.c (summary_header_load/save): 
	* providers/imapp/camel-imapp-summary.c (summary_header_load/save): 
	* providers/imap/camel-imap-summary.c (summary_header_load/save):
	Handle versions, per-class version number (1).

	* providers/local/camel-mbox-summary.c (summary_header_load/save):
	Handle versions properly, add a per-class version (1).  Write out the
	folder size as a size_t rather than 32 bit int.

	* providers/local/camel-local-summary.c (summary_header_load/save):
	read/write the per-class version number (1).

	* camel-folder-summary.c (summary_header_load): do version
	checking differently, allow the version to be bumped without
	aborting the load.  Added unread/deleted/junk counts to base
	header.
	(summary_header_save): Save out the new-format header.  Version
	bumped to 13.

	* camel.c (camel_init): return 0 rather than spit a compiler warning.

	* camel-file-utils.c (camel_file_util_encode_*_t): macro-ise the
	type encoder/decoders.  Also add size_t encoder/decoder.

2004-02-13  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-store.c (get_folder_online): Same.

	* providers/local/camel-mh-store.c (get_folder): Same as maildir
	changes.

	* providers/local/camel-maildir-store.c (get_folder): Make
	exceptions strings consistanmt with the mbox exception strings
	(and vise versa). Also handle the CAMEL_STORE_FOLDER_EXCL flag.

	* providers/local/camel-mbox-store.c (get_folder): Check
	CAMEL_STORE_FOLDER_EXCL flag.

	* providers/local/camel-local-store.c (get_folder): Simplified by
	using camel_mkdir instead of doing it manually.

	* camel-store.c (camel_store_get_folder): If the folder exists in
	the cache and the O_EXCL flag was passed, return NULL and set an
	exception.

	* camel-store.h: Added a new CAMEL_STORE_FOLDER_EXCL flag for use
	with get_folder().

2004-02-12  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-file-utils.c (camel_file_util_encode_string): Since
	decoding a string doesn't allow strings longer than 65536,
	truncate strings that are longer than 65536 here. Fixes bug
	#54319.

2004-02-09  Not Zed  <NotZed@Ximian.com>

	** See bug #53978.

	* providers/local/camel-mbox-store.c: added ".lock" to the list of
	ignored extensions.
	(ignore_file): ignore anything ending in ~ too.

	** See bug #51319.
	
	* providers/local/camel-local-folder.c
	(camel_local_folder_construct): re-enable indexing when folder is
	first opened.  Also load defaults if no meta-data present.

2004-02-06  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-provider.c (camel_provider_init): Use strrchr, not strchr.

	* camel-gpg-context.c (gpg_ctx_parse_status): Forget the need_id,
	not the userid. Fixes bug #53908.

	* camel-store.c (add_special_info): Set a CAMEL_FOLDER_VIRTUAL bit
	on the special folder info so our UI can know if it is virtual or
	not (meant for vTrash/vJunk).
	(camel_store_get_folder_info): Don't add vTrash/vJunk if the
	NO_VIRTUAL flag bit is set. Used by the subscriptions editor.

2004-02-06  Not Zed  <NotZed@Ximian.com>

	* camel-folder.c (camel_folder_set_message_flags): changed to
	return a boolean to indicate if the flags were actually changed or
	not.  Fixed all implementors.

2004-02-05  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-mbox-store.c (rename_folder): rename
	.cmeta file too, and fix the recovery order.

	* providers/local/camel-local-store.c (rename_folder): rename the
	.cmeta file too.

	* providers/local/camel-local-folder.c (local_rename): fix this to
	use local_get_full_path stuff.

	* camel-store.c (camel_store_rename_folder): fix umr's comparing
	old and new names.

2004-02-05  Not Zed  <NotZed@Ximian.com>

	** See bug #53553.
	
	* camel-provider.c (camel_provider_init): changed to return a
	hashtable of url protocols to CamelProviderModule structs, rather
	than simple strings.

	* camel-session.c (get_provider): if we load a provider module,
	mark it as loaded.
	(ensure_loaded): Check the module loaded flag before trying to
	load it.

	* providers/local/libcamellocal.urls: Remove spoold from the list,
	since it doesn't exist anymore.  Actually fixes #53553, the rest
	is to robustify the code.

2004-02-05  Not Zed  <NotZed@Ximian.com>

	* camel-session.c (CS_CLASS): dont typecheck cast.

	* camel-store.c (camel_vjunk_folder_new): removed, use
	vtrash_new(junk).
	(setup_special): changed to get_special, with a type now, and
	dont add vtrash folders to the sources.
	(get_trash, get_junk): down to 1 liners, call get_special

	* camel-vtrash-folder.c (CF_CLASS): dont use cast typecheck macros
	here, makes debugging easier and removes redundant checks.
	(camel_vtrash_folder_init): dont set flags here.
	(camel_vtrash_folder_new): takes a new argument, type, for junk
	folders too, removed name arg (taken from type).
	(vtrash_transfer_messages_to): parameterise flag processing.

2004-02-04  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-store.c: Get rid of some unnecessary
	CAMEL_OBJECT() casts.

	* providers/imap/camel-imap-folder.c (camel_imap_folder_new): The
	folder_name argument passed to this function is ALWAYS in the UNIX
	path form (ie. using '/' as the dir sep) and so when getting the
	short_name, don't use imap_store->dir_sep as the dir sep, always
	use '/'. Fixes bug #53755 for the IMAP case.

2004-02-04  Jeffrey Stedfast  <fejj@ximian.com>

	Fix for bug #53755 (local folders case)

	* providers/local/camel-mbox-store.c (xrename): No longer takes an
	exception arg, we just set errno. Our caller can take care of
	setting an exception.
	(rename_folder): Don't pass an exception to xrename(), we always
	overwrote if an error occured it anyway.
	(rename_folder): Rename the .sbd as well.

2004-02-04  Not Zed  <NotZed@Ximian.com>

	* camel-store.c (camel_store_sync): added 'expunge' parameter,
	easier 'empty trash on exit' call.
	(store_sync): duh, actually pass expunge to folder_sync.

2004-02-04  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-store.c
	(parse_list_response_as_folder_info): if we can't add the folder
	to the summary {i.e. duplicate}, then ignore it.  See #53836.

	* camel-store.c (camel_store_delete_folder): changed order around,
	first try to delete and only remove from the object bag if the
	delete worked.  If vjunk/vtrash enabled, don't allow those to be
	deleted.
	(cs_delete_cached_folder): helper to delete the folder if its in
	the cache, remove it from trash/junk, etc.
	(camel_store_unsubscribe_folder): changed similarly to
	delete_folder.

	* camel-vee-store.c (vee_delete_folder): dont do any trash/junk
	processing anymore.

2004-02-03  Not Zed  <NotZed@Ximian.com>

	* camel-store.c: use the folders object bag to manage the trash
	folder and junk folders.  Remove the init_trash and init_junk
	stuff, just use get_trash and get_junk to mean the same thing.
	Get rid of the hacked up vjunk and vtrash "uri" stuff too.

	* camel-object.c (camel_object_bag_add): null out the pair->func,
	otherwise we get an uninitalised memory read during unhook event.

2004-02-03  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-vee-folder.c (vee_folder_build_folder): Use macro casts
	from int to pointer.

	* camel-folder.c (camel_folder_change_info_add_source): Same as below.
	(camel_folder_change_info_add_source_list): Same.

	* camel-folder-search.c (camel_folder_search_execute_expression):
	Use GINT_TO_POINTER() to cast 1 to a pointer for
	g_hash_table_insert().

	* camel-vee-folder.c (vee_folder_remove_folder): 64bit fixes.
	(folder_added_uid): Same.
	(vee_folder_build_folder): Here too.
	(folder_changed_add_uid): And here.
	(folder_changed_remove_uid): Same.

2004-02-03  Jeffrey Stedfast  <fejj@ximian.com>

	* tests/misc/url-scan.c: New test suite for url scanning.

	* camel-url-scanner.c: Added single/double quotes to url_braces[]
	in case the user is quoting the url.
	(camel_url_web_end): Add "-;:" to list of punctuation to strip off
	the end of urls. Also fixed to handle user@domain's
	(camel_url_addrspec_start): Strip open brace characters from the
	beginning of the addr.
	(camel_url_web_start): Make sure "www" wasn't part of something
	not a url (like "Ewww.Gross") by check that pos[-1] is either an
	open brace or whitespace.
	(camel_url_addrspec_end): Don't allow toplevel domain addr-specs
	(if we encounter something that looks like it is a toplevel domain
	addr, it is more likely to be bogus than correct).

2004-02-02  Jeffrey Stedfast  <fejj@ximian.com>

	Fixes for bug #53091.

	* providers/imap/camel-imap-store.c (create_folder): Set the new
	folder's fi->flags to CAMEL_FOLDER_NOCHILDREN since we know it
	doesn't have any (we just created it!).
	(subscribe_folder): Same.

	* camel-store.c (folder_info_clone_rec): Copy the flags too. Fixes
	the local folder case of bug #53091.

2004-01-31  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/pop3/camel-pop3-store.c (pop3_try_authenticate): Same
	as below.

	* providers/smtp/camel-smtp-transport.c (smtp_connect): Instead of
	using the form %s@%s in the password prompt, use %s on host %s,
	hopefully this will be less confusing to users who have usernames
	of the form user@vhost.

2004-01-30  Rodney Dawes <dobey@ximian.com>

	* providers/groupwise/camel-groupwise-provider.c: Fix spelling error in
	provider description

	Fixes #53572

2004-01-30  Jeffrey Stedfast  <fejj@ximian.com>

	* camel.c (camel_init): Protect against multiple camel_init()
	calls. Remember if we've already been called.

2004-01-30  Not Zed  <NotZed@Ximian.com>

	* camel-store.c (camel_store_rename_folder): copy the old_name
	that comes in, since it might be the actual folder_name, which
	will go away during processing.  Related to #53123.

2004-01-29  Not Zed  <NotZed@Ximian.com>

	** See bug #53269.
	
	* providers/nntp/camel-nntp-store.c
	(nntp_store_get_cached_folder_info): don't dereference last before
	checking if its null.

	* camel-object.c (camel_object_bag_rekey): added a doc comment.

	** See bug #53520.

	* camel-session.c (get_service): free the url once done, it now
	gets copied by the service.

	* camel-service.c (construct): copy the url that comes in, don't
	just '0Wn34z' it.  clena up exception handling too.

2004-01-29  Not Zed  <NotZed@Ximian.com>

	* camel-object.c (cobject_state_write): output scan->name and
	scan->value for writing metadata, rather than meta->name/value
	which just duplicates the last entry, related to #53195.

	* camel-url.c (camel_url_free): zero out passwd/user/host before
	freeing them.

2004-01-28  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-store.c (rename_folder): Make sure
	the new dir path exists before trying to rename files to avoid
	ENOENT errors. Also save errno when we encounter errors so that we
	can report the true error later rather than an error we may get
	while reverting changes. Also, it is OK if the ibex files don't
	exist, so check for that errno case.

2004-01-28  Sivaih Nallagatla <snallagatla@novell.com>

	* providers/groupwise/camel-gw-listener.c (account_changed)
	(modify_esources) : add port and /soap parts to relative uri while 
	updating it when account changed

2004-01-27  Radek Doulik  <rodo@ximian.com>

	* providers/imap/camel-imap-folder.c (camel_imap_folder_new): set
	CAMEL_FOLDER_SUPRESS_JUNK_TEST flag
	(imap_update_summary): update CAMEL_FOLDER_SUPRESS_JUNK_TEST flag

	* camel-folder.c (folder_changed): use
	CAMEL_FOLDER_SUPRESS_JUNK_TEST flag instead of check_junk_for_imap

	* camel-folder.h (CAMEL_FOLDER_SUPRESS_JUNK_TEST): added new flag

2004-01-27  Not Zed  <NotZed@Ximian.com>

	** See bug #53373.

	* camel-store.c (camel_store_rename_folder): use object_bag_rekey
	to rename the object.  object_bag use was broken.

	* camel-object.c (camel_object_bag_rekey): new api to atomically
	re-key

2004-01-23  Radek Doulik  <rodo@ximian.com>

	* camel-folder.c (folder_changed): use check_junk_for_imap flag

	* camel-session.c: add check_junk_for_imap flag

2004-01-23  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-folder.c (IMAP_SMALL_BODY_SIZE):
	removed the meaningless fixme, a butt-retrieved-number is as good
	as any in this case.
	(imap_get_message): revert peterw's change of 2002-07-15, instead
	of checking for online mode here, let get_message do it when you
	retrieve the parts.  This lets a multi-fetch (i.e. large) message
	work more betterer in offline mode.

2004-01-22  Jeremy Katz  <katzj@redhat.com>

	* camel-mime-part.c: Fix prototype to be consistent.

2004-01-21  Not Zed  <NotZed@Ximian.com>

	** See bug #52996.

	* camel-data-cache.c (camel_data_cache_add): put a do-loop around
	the object_bag_reserve stuff, otherwise we can add/abort out of
	sync (i.e. when object_bag_reserve returned a pointer we mustn't
	call add/abort).

	* camel-object.c (camel_object_bag_*): Added some inline doco.

2004-01-20  Not Zed  <NotZed@Ximian.com>

	** See bug #52817.

	* camel-session.c (camel_session_get_password): merged reprompt
	and secret into a flags field, and add more options.  Fixed all
	callers.

	** See bug #52899.

	* camel-gpg-context.c (gpg_ctx_parse_status): use need_id as the
	password key, not userid.

2004-01-19  Siviaah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/camel-gw-listener.c
	(remove_calender_tasks_sources, modify_calender_tasks_sources):
	add port and "/soap" to source uri

2004-01-19  Not Zed  <NotZed@Ximian.com>

	* camel-vee-store.c (change_folder): use a CamelURL to properly
	encode the url we generate.
	(vee_get_folder_info): ditto.
	(vee_get_folder_info): removed unused variable/warning.

	* camel-session.c (vee_provider): Update the provider flags for
	URL_FRAGMENT_IS_PATH.

	* providers/imapp/camel-imapp-utils.c (imap_parse_addfress_list):
	namespaces fixes for HEADER_ADDRESS*

2004-01-17  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-folder.c (imap_sync_online): Limit the
	flags we set (or unset) to the folder's permanent flags.

2004-01-16  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-message.c (camel_mime_message_build_mbox_from): Same.

	* camel-internet-address.c (internet_decode): Same.

	* camel-mime-utils.[c,h]: Namespaced camel_header_address_t enums
	s/HEADER_ADDRESS_/CAMEL_HEADER_ADDRESS_/g

2004-01-16 Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/camel-groupwise-provider.c: added some conf
	entries for LDAP address setup

	* providers/groupwise/camel-gw-listener.c: added
	add_ldap_addressbook_source, modify_ldap_addressbook_source,
	remove_ldap_addressbook_source functions for setting up LDAP
	address book. Also setting "username" property on cal/tasks
	ESources

2004-01-15  Not Zed  <NotZed@Ximian.com>

	** See bug #52881.

	* camel-object.c (camel_object_bag*): Support reserving different
	keys from the same thread.  Oh the pain.

	* camel-vee-store.c (vee_get_folder_info): implement child flags
	properly. Changed to build tree itself rather than calling
	camel_folder_info_build.
	(vee_get_folder): if we're adding a folder with dummy parents,
	create and add the dummy parent folders too (as real folder
	objects).  We are the only owner of the ref, so this sort of leaks
	the folder, but they're small.

2004-01-14  Rodrigo Moya <rodrigo@ximian.com>

	* providers/groupwise/camel-groupwise-provider.c
	(camel_provider_module_init): missing renaming.

2004-01-14  Rodrigo Moya <rodrigo@ximian.com>

	* providers/groupwise/camel-gw-listener.c (add_esource): set the
	"auth" property on the ESource's we create, to get authentication.

2004-01-14  Not Zed  <NotZed@Ximian.com>

	** Patch from Timo Sirainen <tss@iki.fi> to honour read-only
	status for imap folders.
	
	* providers/imap/camel-imap-folder.c (camel_imap_folder_selected):
	check for read-only status response.
	(imap_sync_online): only call sync_offline if we're read-only.
	(imap_expunge_uids_resyncing): NOOP for read-only.

2004-01-14  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-local-folder.c (local_getv): remove debug
	printf.

	** See bug #52835.

	* camel-smime-context.c (sm_get_passwd): removed debugging.  If we
	get called multiple times in a row, then forget the old password
	and re-prompt - it was a bad password.  Zero out password memory
	too.

2004-01-13  Rodrigo Moya <rodrigo@ximian.com>

	* providers/groupwise/camel-groupwise-provider.c: missing renaming.

2004-01-13  Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/camel-gw-listener.[ch]: renamed
	groupwise-config-listener.[ch] to these file names and also
	changed code to use CamelURL insted of EUri

	* providers/groupwise/camel-groupwise-provider.c: use the renamed
	config listener apis

	* providers/groupwise/Makefile.am: changed the source file names

2004-01-12  Meilof Veeningen  <meilof@wanadoo.nl>

	* providers/nntp/camel-nntp-folder.[ch]: now based on discofolder,
	cache_message and append_message implemented, only retrieve messages
	when we are subscribed, some stubs

	* providers/nntp/camel-nntp-provider.c: newsgroup name display
	settings, password authentication, fix for check_equal where the
	protocols wouldn't be checked

	* providers/nntp/camel-nntp-store.[ch]: base on discostore with
	online/offline support, subscriptions, downloading changed parts of
	the newsgroup list, some stubs, authentication, automatic reconnect

	* providers/nntp/camel-nntp-store-summary.[ch]: NNTP store
	summary based on IMAP code

	* providers/nntp/camel-nntp-summary.c: save summary after xover

	* providers/nntp/camel-nntp-grouplist.h: added CamelNNTPGroupList
	structs

	* providers/nntp/Makefile.am: added store summary

2004-01-12  Not Zed  <NotZed@Ximian.com>

	** See bug 52725.

	* providers/imap/camel-imap-folder.c (get_content): pass in
	transfer encoding when setting up wrapper part.

	* providers/imap/camel-imap-wrapper.c (camel_imap_wrapper_new):
	Added an encoding type parameter, set on data wrapper.

2004-01-10  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (rfc2047_encode_word): if e_iconv() returns
	-1, check that errno != EINVAL - if errno *is* EINVAL, it just
	means that our convlen wasn't long enough to include the whole
	sequence. This is fine, we'll just start where we left off next
	loop thru. Fixes bug #52593 (the buffer was duplicated because
	state wasn't flushed).
	(camel_header_encode_string): Fixed a type-o in loop where
	encoding=0, don't g_string_append_len starting at 'word'
	inptr-start bytes long - 'word' could be NULL and/or inptr-start
	could be longer than inptr-word.

2004-01-09  Rodney Dawes  <dobey@ximian.com>

	* providers/groupwise/Makefile.am (EXTRA_DIST): libcamelgroupwise.urls
	instead of libcamelimap.urls

2004-01-09  Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/groupwise-config-listener.c
	(is_groupwise_account): added null check for source url to take
	care of accounts with Server Types as "None"

2004-01-09  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-store.c (imap_forget_folder): fix
	removal of journal file, and remove the cmeta state file too.

	* providers/imap/camel-imap-folder.c (imap_getv): count up so we
	call parent class if we missed any, rather than only if we didn't
	miss any.
	(imap_rename): rename the object state file.
	(camel_imap_folder_new): set the object state file for persistent
	properties.

	* camel-disco-folder.c (disco_getv): support
	(PERSISTENT_)PROPERTIES & OFFLINE_SYNC.
	(disco_setv): implement OFFLINE_SYNC.
	(camel_disco_folder_get_type): setup disco properties list.
	(cdf_folder_changed): honour the offline_sync setting on the
	current folder.
	(disco_sync): save object state.
	(disco_setv): save object state if it changed.

	* camel-data-wrapper.c (camel_data_wrapper_set_mime_type_field):
	move assertions here.
	(set_mime_type_field): change order slightly to properly handle
	setting the same object.  removed assertions from internal method.

2004-01-08 Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/Makefile.am : add groupwise to SUBDIRS

	* providers/groupwise/camel-groupwise-provider.c: new camel
	provider for groupwise

	* providers/groupwise/groupwise-config-listener.[ch] : new class
	to add e-sources for groupwise calender and tasks

	* providers/groupwise/Makefile.am : added new files to Makefile.am

2004-01-05  JP Rosevear <jpr@ximian.com>

	* camel-utf8.c: include sys/types.h for freebsd

2004-01-05  Rodrigo Moya <rodrigo@ximian.com>

	* providers/groupwise/camel-groupwise-provider.c (groupwise_url_hash,
	groupwise_url_equal): renamed from imap_*.

2004-01-05  Not Zed  <NotZed@Ximian.com>

	* camel-tcp-stream-raw.c (socket_connect): check the right return
	of the socket call, dont set fd to the value of the -1 check!

2003-12-27  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-tcp-stream-raw.c (socket_connect): Save errno and check
	the return of the socket() call.

2003-12-24  Rodrigo Moya <rodrigo@ximian.com>

	* providers/groupwise/camel-groupwise-provider.c
	(camel_provider_module_init): g_module_open the other providers we
	depend on to avoid load ordering problems.

2003-12-22  Rodrigo Moya <rodrigo@ximian.com>

	* providers/groupwise/camel-groupwise-provider.c: removed useless
	configuration options, and added other options from the IMAP
	provider.
	(camel_provider_module_init): register a SMTP transport object
	also, and removed SASL registration, since we don't support it.

2003-12-19  Sivaiah Nallagatla <snallagatla@novell.com>

	* providers/groupwise/Makefile.am:
	* providers/groupwise/libcamelgroupwise.urls:
	* providers/groupwise/camel-groupwise-provider.c: added Camel
	provider for Groupwise accounts, based on the IMAP one.

2003-12-11  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-gpg-context.c (gpg_ctx_parse_status): Don't immediately
	prompt for a passwd after receiving the NEED_PASSPHRASE status
	message. Instead, parse the userid that gpg needs a passwd for and
	store it on our context. Wait for a GET_HIDDEN status message
	before prompting, this way if the user has their gpg configured to
	use gpg-agent, the user won't get 2 passwd prompts.
	(gpg_sign): Fixed to not free a gpg context that we have not
	allocated (could happen in a fail case).

2003-12-10  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-store.c (get_folder_info): Use
	CAMEL_FODLER_NOCHILDREN rather than NOINFERIORS because
	NOINFERIORS means the folder cannot contain subfolders. However,
	our mbox structure always allows subfolders.
	(scan_dir): Same.

	* camel-store.h: Add a CAMEL_FOLDER_NOCHILDREN flag.

	* providers/imap/camel-imap-store.c (get_folders): Same as below.

	* providers/imap/camel-imap-utils.c (imap_parse_list_response):
	s/CAMEL_IMAP_FOLDER_NOCHILDREN/CAMEL_FOLDER_NOCHILDREN/

2003-12-10  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.c (sm_verify): also check
	application/pkcs7-signature (bloody applemail).
	(camel_smime_context_describe_part): as above, and fix the logic.
	dont think its used anyway.  Bug #51750.

2003-12-10  Not Zed  <NotZed@Ximian.com>

	* Makefile.am (libcamel_la_SOURCES): put the
	camel-smime-context.[ch] back in here, remove it from EXTRA_DIST,
	and make it compile optinally the same way camel-tcp-stream-ssl.c
	does (#ifdef ...).

	* camel-smime-context.c (sm_verify_cmsg): add signer info to
	certvalidity.

	* camel-cipher-context.c (CamelCipherValidity): Added certinfo to
	validity for signing and encrypting, so we can find the keys later
	for a gui.
	(camel_cipher_validity_add_certinfo): add signer or
	encrypter info to the validity.
	(camel_cipher_validity_envelope): add sign/encrypt keys.

2003-12-10  Not Zed  <NotZed@Ximian.com>

	* camel-stream-process.c (do_exec_command): remove dthe clearenv
	stuff, not sure why its there.  s/setenv/putenv/ for portability.
	See Bug #51767.

2003-12-08  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (header_decode_rfc2184_param): Revert the
	s/is_/camel_mime_is_/ changes or we get really long variable
	names.
	(header_decode_param): Same.
	(header_decode_param_list): Here too.

2003-12-09  Not Zed  <NotZed@Ximian.com>

	** See bug #51899.

	* providers/imap/camel-imap-store.c (get_folders): add the first
	fi to the info's hash, so we dont duplicate it if we come across
	it again (which we generally will).

2003-12-09  Not Zed  <NotZed@Ximian.com>

	* providers/smtp/camel-smtp-transport.c (smtp_send_to): encode the
	address before sending it out, rather than using the raw/utf8
	version.

	* camel-internet-address.c
	(camel_internet_address_encode_address): check for quoting the
	local part of the address before outputting it.
	(cia_encode_addrspec): quote local part if need be.
	(camel_internet_address_encode_address): make folding optional
	based on whether inlen is null or not.

	* camel-mime-utils.[ch]: rename is_* to camel_mime_is_* and export
	the type functions.

2003-12-08  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-utils.c (imap_atom_specials): add } to
	the atom specials list.  This isn't correct, but some busted
	servers expect it.  Bug #50728.

2003-12-08  Jeffrey Stedfast  <fejj@ximian.com>

	Fixes bug #51881

	* providers/local/camel-mbox-store.c (delete_folder): Same.

	* providers/local/camel-local-store.c (delete_folder): Unlink the
	cmeta file too.

2003-12-06  JP Rosevear <jpr@ximian.com>

	* */Makefile.am: Remove hard coded disable deprecated flags

2003-12-05  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-gpg-context.c (gpg_ctx_op_start): Properly set the
	O_NONBLOCK flag along with any previously set flags.

	* camel-filter-search.c (run_command): Don't set O_NONBLOCK on the
	pipe (1. we don't need to, and 2. we should have been setting
	O_NONBLOCK|prev_flags but we weren't, and so the pipe got
	O_RDONLY|O_NONBLOCK even tho we wanted to write to it).

	* camel-filter-driver.c (pipe_to_system): Same.

2003-12-04  Radek Doulik  <rodo@ximian.com>

	* camel-folder.c (folder_changed): check recent messages for junk
	mail

	* camel-session.c (camel_session_check_junk): new wrapper method
	for check_junk flag
	(camel_session_set_check_junk): ditto

	* camel-session.h (struct _CamelSession): added check_junk flag
	(if to check incoming mail for junk messages)

2003-12-03  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-store.c (add_special_info): Free fi->path if we are gonna
	replace it with the vinfo path.

	* providers/local/camel-mbox-store.c (create_folder): Treat
	parent_name == NULL and parent_name == "" the same.

	* camel-store.c (camel_store_get_folder_info): Only add
	vTrash/vJunk info's if we've requested the toplevel folder tree,
	otherwise we get vTrash/vJunk folders in odd places in the folder
	tree.
	(add_special_info): Use the provider->url_flags to determine if
	the url uses the fragment or not for the path.

2003-12-02  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-local-folder.c (local_setv): remove some
	debug printfs.

	** See bug #51576.

	* camel-url.c (camel_url_decode): robustify url decoding for bad
	input, addresses a crash.

	** See bug #51478.

	* camel-gpg-context.c (gpg_ctx_free): handle the context being
	NULL, and exit silently.

2003-12-01  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-process.c (camel_process_fork): Start at fd = 3.

	* camel-gpg-context.c (gpg_ctx_op_start): Same.

	* camel-filter-driver.c (pipe_to_system): Same.

	* camel-filter-search.c (run_command): Start at fd = 3.

2003-12-01  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-stream-process.c (do_exec_command): Same.

	* camel-process.c (camel_process_fork): Same.

	* camel-filter-search.c (run_command): Same as below.

	* camel-filter-driver.c (pipe_to_system): Same as below.

	* camel-gpg-context.c (gpg_ctx_op_start): Use fcntl() to set
	FD_CLOEXEC on each fd rather than close()ing it. Apparently
	Linux's older pthread implementations use sockets and so this
	fouls threading up. GO LINUX! GO!

2003-12-01  Radek Doulik  <rodo@ximian.com>

	* camel-store.c (add_special_info): set SUBSCRIBED and NOINFERIORS
	flags to special folders, renamed method from
	add_vtrash_or_vjunk_info
	(camel_store_get_folder_info): call add_special_info directly

2003-11-28  Radek Doulik  <rodo@ximian.com>

	* camel-store.c (camel_store_get_folder_info): use old code from
	mail-ops to add vtrash/vjunk info

2003-11-28  David Woodhouse  <dwmw2@redhat.com>

	* providers/imap/camel-imap-provider.c: Enable GUI option for
	'custom command' connection.
	* providers/imap/camel-imap-store.c: Don't g_free strings in
	.rodata. It's considered rude.

2003-11-28  Not Zed  <NotZed@Ximian.com>

	* camel-mime-utils.c (mail_list_magic[]): Added list-unsubscribe
	header match.

2003-11-26  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.c (sm_verify_cmsg): take a stream rather
	than a part for the content.
	(sm_verify): get the content directly as a stream.

	* camel-multipart-signed.c
	(camel_multipart_signed_get_content_stream): new api to get the
	content stream which will match the signed version.

2003-11-26  JP Rosevear <jpr@ximian.com>

	* Makefile.am: make sure we always dist the smime stuff

2003-11-26  JP Rosevear  <jpr@ximian.com>

	* Makefile.am (libcamelinclude_HEADERS): conditionally compile
	s/mime support

2003-11-25  Not Zed  <NotZed@Ximian.com>

	* camel-cipher-context.c (camel_cipher_validity_envelope): change
	args to make it suit storing the validity in a tree.
	(camel_cipher_validity_init): init the list header.
	(camel_cipher_validity_clone): call validity_new so it gets init
	properly.
	(camel_cipher_validity_free): free any children nodes recursively.

	* camel-cipher-context.h (CamelCipherValidity): added next/prev
	and list header.

2003-11-18  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-session.c (camel_session_finalise): Don't destroy the
	providers as it mans we can never ever have more than 1 session
	object. See bug #51119 for details.

2003-11-17  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-store.c (create_folder): Fixed an
	exception to give a more meaningful description.
	(get_folder_info): We always want to scan at least one level deep.

2003-11-14  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-store.c (get_folder_info): Handle ""
	as a request for a full dirscan as well (not just NULL). Makes it
	consistant with other stores.
	(scan_dir): Set the fi->flags appropriately.

	* providers/local/camel-mbox-folder.c
	(camel_mbox_folder_get_full_path): Removed temporary hack.

2003-11-14  Not Zed  <NotZed@Ximian.com>

	* camel-mime-parser.c (SCAN_BUF): oops, put the mempool stuff
	back, we don't use e-memory afterall.  Damn plane hacking.

2003-11-13  Not Zed  <NotZed@Ximian.com>

	* camel-mime-parser.c: Remove mempool code, we use the stuff in
	e-util.
	(PRESERVE_HEADERS): new compile option, if on, we preserve headers
	and folding exactly rather than unfolding all input.  THIS BREAKS
	EVERYTHING right now, so don't turn it on.

	* camel-gpg-context.c (gpg_decrypt): reset the input memstream
	before passing it to the gpg engine.

	* tests/smime/pgp-mime.c (main): redirect /dev/null to stdin so it
	doesn't hang waiting for input.
	(main): removed from build - this tests multipart/signed
	explictly, but now the details of this is handled directly by the
	cipher context.

	* tests/smime/pgp.c (main): fixes for api changes.
	(main): redirect /dev/null to stdin so it doesn't hang waiting for
	input.

	* tests/message/test1.c (main): update for api changes.

	* camel-smime-context.c (sm_verify): look at the content object's
	mime type, not the container's type.

2003-11-11  Not Zed  <NotZed@Ximian.com>

	* camel-cipher-context.c (camel_cipher_validity_set_valid): take
	into account the @valid argument and set validity properly.
	(camel_cipher_validity_clone): new method to copy validities.

	* camel-smime-context.c (sm_signing_cmsmessage): removed a todo.

2003-11-10  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.c (sm_verify_cmsg): split out the CMSMessage
	verification code so it can be used from enveloped or externally
	signed data.

	* camel-cipher-context.c (camel_cipher_verify): only take a
	mimepart, internally handle multiparts and the hash.

2003-11-07  Not Zed  <NotZed@Ximian.com>

	* camel-cipher-context.c: make ciphervalidity a public structure,
	added encrypt status.
	(camel_cipher_decrypt): changed to return a ciphervalidity.  fixed
	implementations.
	(camel_cipher_validity_*): Fixed implementations to match new
	structure, some of this is now redundant.

2003-11-06  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.c (camel_smime_context_describe_part):
	implement.

2003-11-05  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/smtp/camel-smtp-transport.c (connect_to_server): Don't
	bother trying to see if the server advertises EHLO. Simply always
	try EHLO and fall back to HELO if EHLO fails. Fixes bug #50535.

2003-11-05  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.c (camel_smime_context_describe_part): new
	(unfinished) api to peek inside smime parts to tell us whats in
	it.

2003-11-03  Not Zed  <NotZed@Ximian.com>

	* camel-gpg-context.c (gpg_encrypt): Make this output the
	full multipart/encrypted part, not just the encrypted content part.

	* camel-cipher-context.c (camel_cipher_sign): change to output
	full mime part, not just a stream.
	(camel_cipher_canonical_to_stream): utility function to
	canonicalise a mimepart to a stream.

	* camel-smime-context.c (sm_encode_cmsmessage): removed.
	(sm_sign): change interface to output a full mime-part, not just a
	part of a mime part in multipart/signed mode.

2003-11-04  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-gpg-context.c (gpg_ctx_parse_status): We might need to
	convert the passwd from UTF-8 into the locale charset. Fixes bug
	#50485.

2003-10-31  Not Zed  <NotZed@Ximian.com>

	* camel-cms-context.[ch]: removed, now redundant.

2003-10-30  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.c (sm_get_passwd): implement something basic.

	* camel-cipher-context.h: Added a note about api inconsistencies.

2003-10-30  Not Zed  <NotZed@Ximian.com>

	* camel-multipart-encrypted.c (camel_multipart_encrypted_decrypt):
	fix for cipher_decrypt changes.

	* camel-gpg-context.c, camel-cipher-context.c: moved all the init
	code to the end to save having to keep forward declarations
	around.
	(camel_cipher_decrypt): changed to take mimepart input and return
	a mimepart.
	(gpg_decrypt): fix for changed args.

2003-10-29  Not Zed  <NotZed@Ximian.com>

	* camel-smime-context.[ch]: replaced entirely with a new
	implementation which inherits from camel-cipher-context, and add
	to build.

	* camel-multipart-encrypted.c (camel_multipart_encrypted_encrypt):
	fix for cipher_encrypt api changes.
	(camel_multipart_encrypted_decrypt): use g_ascii_strcasecmp.

	* camel-gpg-context.c (gpg_encrypt): Fix to handle input/output as
	parts not streams

	* camel-cipher-context.c (camel_cipher_encrypt): change to take
	mimeparts rather than streams as input/output.  And remove the
	'sign' argument, it is implied if userid is supplied.

2003-10-28  Not Zed  <NotZed@Ximian.com>

	* tests/smime/pgp.c (main): fix for ciphercontext api changes.

	* camel-multipart-signed.c (camel_multipart_signed_verify): pass
	in the part to cipher_verify directly.
	(camel_multipart_signed_sign): let the cipher context setup the
	part details.

	* camel-gpg-context.c (gpg_sign): put the signature stream into a
	mimepart, with appropriate headers/encoding.
	(swrite): write out a mimepart rather than a stream.
	(gpg_verify): handle changed args.

	* camel-cipher-context.c (camel_cipher_sign): write the signature
	to a mimepart rather than a simple stream.
	(camel_cipher_verify): take the signature as a mimepart not a
	stream.

2003-10-22  Not Zed  <NotZed@Ximian.com>

	* camel-utf8.c (camel_ucs2_utf8, camel_utf8_ucs2): helpers for
	ucs2 stuff.  ucs2 is 16 bit truncated unicode.

2003-10-28  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c: We should check List-Post before List-Id
	(List-Post has to contain the mailing-list posting address,
	whereas List-Id does not.) WAlso moved X-Loop to after List-Id to
	make FreeBSD lusers happy. Fixes bug #32297.

2003-10-28  Jeffrey Stedfast  <fejj@ximian.com>

	* Fixes bug #35083

	* providers/imap/camel-imap-store.c (connect_to_server): Same
	here.

	* providers/pop3/camel-pop3-store.c (connect_to_server): Same as
	the smtp changes.

	* providers/smtp/camel-smtp-transport.c (connect_to_server): If
	HAVE_SSL is undefined, don't default to raw connections if the
	option to connect via ssl is set. Instead set an exception and
	return fail.

2003-10-27  Frederic Crozat  <fcrozat@mandrakesoft.com>

	* camel-mime-utils.c: (camel_header_decode_date):
	better detection of broken date to give to broken_date_parser.

2003-10-24  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-text-index.c (text_index_name_add_buffer): If a word is
	longer than CAMEL_TEXT_INDEX_MAX_WORDLEN, then ignore it. This
	fixes bug #50096.

2003-10-23  Jeffrey Stedfast  <fejj@ximian.com>

	* *.c: Removed unneeded CAMEL_OBJECT() casts.

2003-10-21  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-local-folder.c (local_getv, local_setv):
	use the right tag name for the index_body arg.
	(local_sync): write any persistent metadata - to make it
	persistent.
	(camel_local_folder_construct): turn off indexing, for now, it
	should be done in local_setv.

	* providers/local/camel-local-folder.h: change body_index to a bool
	type.

	* camel-object.c (cobject_state_read, cobject_state_write): handle
	bool types
	(cobject_state_write): make sure we free all arg types.

	* camel-arg.c (camel_argv_build):
	(camel_arggetv_build):  handle bool type.

	* camel-arg.h: Added BOO (bool) type.

2003-10-15  Not Zed  <NotZed@Ximian.com>

	* camel-store.c (camel_folder_info_build): Fix so we output the
	tree in sorted depth-first order, rather in reverse.

2003-10-16  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-sasl-kerberos4.c: Fixed a #include.

2003-10-10  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-local-provider.c: set the url fragment
	flag for local providers.

	* camel-provider.h: Move the URL_PART_NEED bits to the high 16
	bits, to allow for easier changes in the future.  Added a
	URL_PART_FRAGMENT flag for providers that use fragment = folder
	path.

2003-10-09  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (header_decode_date): Allow timezone offsets
	to be up to 14 hours ahead of UTC. Fixes bug #49357.

	* broken-date-parser.c (get_tzone): Same.

2003-10-08  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/smtp/camel-smtp-transport.c (smtp_helo): Removed an
	unused variable.

2003-09-25  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/smtp/camel-smtp-transport.c (smtp_helo): If the
	localhost lookup results in a numeric IPv6 host, use the form
	"[IPv6:<addr>]" as specified in rfc2821. Fixes bug #46006.

2003-09-23  Ettore Perazzoli  <ettore@ximian.com>

	* providers/local/camel-local-provider.c: Set the IS_STORAGE bit
	in the mbox provider, since it can now contain a hierarchy of
	folders.

2003-09-23  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-store.c (get_folder): If the CREATE
	flag is set and the parent .sbd directory does not exist, create
	it.

	* camel-mime-utils.c (append_8bit): Don't forget to flush the
	iconv conversion.

	* tests/message/test4.c (main): Don't try dot-files.

2003-09-22  Not Zed  <NotZed@Ximian.com>

	** See bug #41610
	
	* providers/pop3/camel-pop3-folder.c (cmd_tocache): protect a
	divide by 0 for 0 length messages.

2003-09-22  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-provider.c: Added "offline_sync"
	option, which lets you synchronise all mail to local storage
	automagically.

	* camel-disco-folder.c (cdf_folder_changed): hook onto the folder
	changed single, for all new messages, check that they are online
	using another thread, if the offline_sync option has been enabled
	for this store.

2003-09-21  Not Zed  <NotZed@Ximian.com>

	* camel-session.c (session_thread_destroy): call proper entry
	point for freeing the message.

2003-09-18  Not Zed  <NotZed@Ximian.com>

	* camel-folder.c (filter_filter): register the filtering process
	for progress, and do progress of the filtering process.

2003-09-17  Not Zed  <NotZed@Ximian.com>

	* camel.c (camel_init): init camel operation.

	* camel-operation.c (camel_operation_reset): removed, not used,
	not worth it.
	(camel_operation_mute): new method to stop all status updates
	permanently.
	(*): Changed to use thread specific data and a list rather than a
	hashtable.
	(cancel_thread): removed.
	(camel_operation_register): return the previously registered op.

2003-09-22  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/nntp/camel-nntp-store.c (connect_to_server): Fix the
	code that creates a new ssl stream to pass the correct arguments
	and the proper flags.

	* providers/imapp/camel-imapp-folder.c (imap_sync): Cast the
	CamelFolder to a CamelIMAPPFolder to hush some compiler warnings.

	* camel-mime-utils.h: Define a struct _CamelContentDisposition
	(allows the imapp code to compile)

	* providers/imapp/camel-imapp-driver.c: #include <string.h>

2003-09-18  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (camel_transfer_encoding_to_string): New
	function to replace the one from camel-mime-part.c
	(camel_transfer_encoding_from_string): Same.
	(camel_content_transfer_encoding_decode): Renamed from
	camel_header_content_encoding_decode().

	* camel-mime-part.c (camel_mime_part_encoding_to_string): Removed.
	(camel_mime_part_encoding_from_string): Removed.

	* camel-data-wrapper.[c,h]: updated for CamelTransferEncoding
	namespace changes

	* camel-folder-summary.c: updated for CamelTransferEncoding
	namespace changes

	* camel-mime-filter-bestenc.[c,h]: updated for CamelTransferEncoding
	namespace changes

	* camel-mime-message.c: updated for CamelTransferEncoding
	namespace changes

	* camel-mime-part-utils.c: updated for CamelTransferEncoding
	namespace changes

	* camel-multipart-signed.c: updated for CamelTransferEncoding
	namespace changes

	* camel-smime-context.c: updated for CamelTransferEncoding
	namespace changes

	* providers/imapp/camel-imapp-utils.c: updated for
	CamelTransferEncoding namespace changes

	* tests/lib/messages.c: updated for CamelTransferEncoding
	namespace changes

	* tests/message/test1.c: updated for CamelTransferEncoding
	namespace changes

2003-09-18  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.[c,h]: namespaced the encoding/decoding
	routines.

	* camel-mime-filter-basic.c: updated for namespace changes to the
	encoding/decoding routines in camel-mime-utils.c

	* camel-multipart.c: updated for namespace changes to the
	encoding/decoding routines in camel-mime-utils.c

	* camel-sasl-digest-md5.c: updated for namespace changes to the
	encoding/decoding routines in camel-mime-utils.c

	* camel-sasl.c: updated for namespace changes to the
	encoding/decoding routines in camel-mime-utils.c
	
	* camel-vee-folder.c: updated for namespace changes to the
	encoding/decoding routines in camel-mime-utils.c

	* providers/imap/camel-imap-search.c: updated for namespace
	changes to the encoding/decoding routines in camel-mime-utils.c

	* providers/pop3/camel-pop3-folder.c: updated for namespace
	changes to the encoding/decoding routines in camel-mime-utils.c

2003-08-26  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-parser.[c,h]: s/HSCAN_/CAMEL_MIME_PARSER_STATE_/g and
	s/_header_state/_camel_mime_parser_state/g

	* camel-filter-driver.c: Same.

	* camel-folder-summary.c: Here too.

	* camel-http-stream.c: And here.

	* camel-mime-message.c: ...

	* camel-mime-part-utils.c: ...

	* camel-mime-part.c: ...

	* camel-movemail.c: ...

	* camel-multipart-signed.c: ...

	* camel-multipart.c: ...

	* providers/local/camel-mbox-folder.c: ...

	* providers/local/camel-mbox-summary.c: ...

	* providers/local/camel-mh-summary.c: ...

	* providers/nntp/camel-nntp-summary.c: ...

	* providers/pop3/camel-pop3-folder.c: ...

2003-08-25  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.[c,h]: Namespaced.

	* camel-data-wrapper.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-digest-folder.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-filter-driver.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-filter-search.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-folder-search.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-folder-summary.[c,h]: updated for namespace changed made
	to camel-mime-utils.[c,h]

	* camel-http-stream.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-http-stream.h: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-internet-address.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-medium.[c,h]: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-mime-message.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-mime-parser.[c,h]: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-mime-part-utils.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-mime-part.[c,h]: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-movemail.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-multipart-encrypted.c: updated for namespace changed made
	to camel-mime-utils.[c,h]

	* camel-multipart-signed.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-multipart.c: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* camel-search-private.[c,h]: updated for namespace changed made
	to camel-mime-utils.[c,h]

	* camel-types.h: updated for namespace changed made to
	camel-mime-utils.[c,h]

	* providers/imap/camel-imap-folder.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/imap/camel-imap-store-summary.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/imap/camel-imap-utils.c: updated for namespace changed
	made to camel-mime-utils.[c,h]

	* providers/imapp/camel-imapp-utils.[c,h]: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/local/camel-local-summary.[c,h]: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/local/camel-maildir-summary.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/local/camel-mbox-summary.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/local/camel-spool-summary.h: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/nntp/camel-nntp-summary.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/nntp/camel-nntp-utils.c: updated for namespace changed
	made to camel-mime-utils.[c,h]

	* providers/pop3/camel-pop3-folder.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

	* providers/sendmail/camel-sendmail-transport.c: updated for
	namespace changed made to camel-mime-utils.[c,h]

	* providers/smtp/camel-smtp-transport.c: updated for namespace
	changed made to camel-mime-utils.[c,h]

2003-09-16  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-folder.c
	(camel_mbox_folder_get_full_path): Implement a temp hack so trunk
	works until we merge in new-ui-branch.

	* camel-stream-filter.c (do_flush): Don't warning about how we
	haven't written anything to the stream, this is not an
	error. fflush() doesn't care if you try to fflush() a stream
	without writing to it, so we shouldn't care either.

2003-09-15  Not Zed  <NotZed@Ximian.com>

	* providers/imapp/camel-imapp-store.c (store_resp_list)
	(imap_login, try_sasl, imap_try_authenticate): removed dead code.

	* providers/imapp/camel-imapp-stream.c: return -1 if stream not
	set.

	* providers/imapp/camel-imapp-engine.c (iterate_completion): put
	done request on the done queue, so all requests are always
	somewhere.
	(camel_imapp_engine_command_free): just spit warnings of active
	messages being freed, but abort if the item isn't in any list.
	Also remove the node from its list before going on.
	(iterate_untagged, iterate_continuation, iterate_completion):
	staticifiy.

	* providers/imapp/camel-imapp-provider.c
	(camel_imapp_module_init): move camel_exception_setup call here.

	* providers/imapp/camel-imapp-driver.c
	(camel_imapp_driver_get_type): remove execption setup here, it
	isn't early enough.
	(camel_imapp_driver_list): handle exceptions.

2003-09-12  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/local/camel-mbox-folder.c
	(camel_mbox_folder_get_full_path): Implements
	CamelLocalFolder::get_full_path() (publicly namespaced so that
	CamelMboxStore can re-use them).
	(camel_mbox_folder_get_meta_path): Same.

	* providers/local/camel-mbox-store.c (get_folder): Changed the way
	the path is constructed, since we now handle subdirectories and
	stuff.
	(delete_folder): Try deleting the Folder.sbd directory. We also
	need to manage our own meta files since CamelLocalStore's impl
	constructs paths differently than what we need.
	(create_folder): Implemented.
	(rename_folder): Implemented.
	(scan_dir): Scan an mbox tree
	(get_folder_info): Implemented using scan_dir().

	* providers/local/camel-local-store.c (delete_folder): Set fi->url
	to the correct value, meaning we need to prefix it with the
	protocol and the folder_name is not actually part of the path, it
	is a separate component to the url.

	* providers/local/camel-local-folder.c
	(camel_local_folder_construct): Use the new class virtual method
	to construct the full folder path and all the meta files.
	(local_get_full_path): Implemented default get_full_path method.
	(local_get_meta_path): Implemented default get_meta_path method.

2003-09-11  Dan Winship  <danw@ximian.com>

	* Makefile.am (noinst_LTLIBRARIES): Remove libcamel-static.la

2003-09-05  Not Zed  <NotZed@Ximian.com>

	* providers/imap/camel-imap-store.c (imap_noop): call
	camel_folder_sync bypassing the folder lock.  See
	imap_store_refresh_folders too.

2003-09-04  David Woodhouse  <dwmw2@infradead.org>

	* providers/camel-imap-store.[ch]: Add PREAUTH handling and
	pine/mutt/etpan/etc.-style 'ssh <mailhost> exec imapd' support.
	
2003-09-03  David Woodhouse  <dwmw2@infradead.org>

	* camel-stream-process.[ch]: New stream implementation for running
	commands.
	* Makefile.am: Compile the above

2003-08-20  Not Zed  <NotZed@Ximian.com>

	** See bug #47765.

	* camel-folder-search.h: Removed match1 member.

	* camel-folder-search.c (camel_folder_search_match_expression):
	use current directly rather than match1.  This method isn't used
	anywhere anyway.
	(search_not): remove match1 stuff.
	(search_match_all): properly handle the match-all against 1
	message as a scalar result, not an array result.

2003-09-03  Not Zed  <NotZed@Ximian.com>

	* camel-http-stream.c (camel_http_stream_set_proxy): handle NULL
	proxy_url - unset the proxy.

2003-08-29  Not Zed  <NotZed@Ximian.com>

	* camel-object.c (camel_object_state_write): 
	(cobject_getv):
	(cobject_setv, cobject_state_read, cobject_state_read) 
	(cobject_state_write): removed debug printfs.

	* providers/local/camel-local-folder.c (local_getv): Need to copy
	the local properties list before passing it out, since it's freed.

2003-08-27  Not Zed  <NotZed@Ximian.com>

	* providers/local/camel-local-folder.c (local_getv): implement
	PERSISTENT_PROPERTIES, for index mode.

	* camel-object.c (cobject_state_read): Also add property reading,
	and bump version to 1.
	(cobject_state_write): add persistent property writing.

2003-08-26  Not Zed  <NotZed@Ximian.com>

	* camel-folder.c (folder_getv): chain up properly.

	* camel-file-utils.c (camel_file_util_savename): helper to create
	a .#filename filename.

	* providers/local/camel-local-folder.c
	(camel_local_folder_construct): init meta-data for local folders.
	(local_getv): chain up properly, if args are not processed, rather
	than don't if they aren't.

2003-08-23  Not Zed  <NotZed@Ximian.com>

	* camel-object.c (cobject_class_init): added a new event,
	meta_changed.
	(camel_object_meta_set, camel_object_meta_get): meta-data api.
	(camel_object_free_hooks): Free meta-data if it is set on the
	object.

	* providers/local/camel-local-folder.c
	(camel_local_folder_get_type): setup a property list for local
	folders, just 'index_body' at present.

2003-08-25  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-filter-driver.c (pipe_to_system): Added some more error
	checking for reading/writing to the pipes. Fixes bug #47880.

2003-08-21  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-data-wrapper.c (decode_to_stream): Don't poke
	wrapper->stream directly, use camel_data_wrapper_write_to_stream()
	instead as this simplifies things and makes the imap data wrapper
	implementation Just Work (tm).

	* providers/imap/camel-imap-wrapper.c: changed prototype of
	write_to_stream() to return ssize_t.

2003-08-20  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-wrapper.c (imap_wrapper_hydrate): Make
	sure to ref the stream. Fixes bug #47749.

2003-08-18  Not Zed  <NotZed@Ximian.com>

	* camel-http-stream.c: Various fixes to make it work.

	* tests/smime/pgp-mime.c (main): added missing 'ret' variable.

	* providers/smtp/camel-smtp-transport.c (connect_to_server): 
	* providers/imapp/camel-imapp-store.c (connect_to_server:
	* providers/imap/camel-imap-store.c (connect_to_server):
	* providers/pop3/camel-pop3-store.c (connect_to_server):
	* camel-http-stream.c (http_connect): change service->session for
	tcp_stream_ssl_new.

	* camel-tcp-stream-ssl.c: Changed service to session, and fix some
	refcounting of it.
	include camel-operation.h

2003-08-15  Not Zed  <NotZed@Ximian.com>

	** See bug #47634.

	* tests/lib/messages.c (test_message_compare): check
	write_to_stream returns.
	(message_dump_rec): helper to dump message structure.

	* camel-mime-part-utils.c
	(simple_data_wrapper_construct_from_parser): dont set content
	encoding here.
	(camel_mime_part_construct_content_from_parser): set it here
	instead, on every part.  basically same as setting the
	mime_type_field always.

	* camel-multipart-signed.c (camel_multipart_signed_class_init): 
	* camel-mime-message.c (camel_mime_message_class_init): 
	* camel-multipart.c (camel_multipart_class_init): override
	decode_to_stream to always do the same as write_to_stream, since
	we can never be encoded.

2003-08-15  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-wrapper.c (imap_wrapper_hydrate):
	Don't attach any filters to decode base64/qp/etc.

2003-08-14  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-part.c (write_to_stream): Save errno when
	flushing/unreffing the filter stream.

2003-08-13  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-part.c (write_to_stream): If the content is
	base64/qp/uu/etc encoded but the part is 7bit/8bit/(or otherwise
	non-encoded), set reencode to TRUE so that we decode the original
	content stream. Fixes a bug noticed on
	evolution-patches@ximian.com where a patch had a
	Content-Transfer-Encoding of 7bit but was base64 encoded.

2003-08-13  Not Zed  <NotZed@Ximian.com>

	* camel-folder-summary.c (camel_folder_summary_remove_range): Fix
	the range check, we were stopping removal of 1 or 2 removals, for
	some odd and completely uncomprehensible reason.  Perhaps debug
	left in?

2003-08-13  Not Zed  <NotZed@Ximian.com>

	** See bug #47517.

	* camel-vee-folder.c (vee_sync): Always rebuild folder on any
	sync, not just expunge ones.

2003-08-11  Not Zed  <NotZed@Ximian.com>

	* providers/imapp/camel-imapp-store.c (imap_get_folder_info):
	force connect manually so basics work.

	** See bug #45505.

	* camel-service.c (camel_gethostbyname): duh, pthread_create
	returns the error code directly, not via errno.
	(camel_gethostbyaddr): Same, also properly handle the failure
	case.

2003-08-01  Not Zed  <NotZed@Ximian.com>

	** See bug #47208.

	* camel-filter-search.c (match_all): match-all with no arguments	
	should always return TRUE.

	* camel-folder-search.c (camel_folder_search_execute_expression):
	print a warning when we get an invalid result type & fixed a leak
	for that case.

2003-08-08  Jeffrey Stedfast  <fejj@ximian.com>

	* tests/message/test4.c: New test suite for the mime parser (which
	is where the below 2 fixes were noticed).

	* camel-mime-parser.c (folder_boundary_check): Calculate 'len' by
	subtracting the boundary start from inend rather than 'atleast'.
	(folder_scan_content): Calculate 'inend' differently depending on
	the EOF state.

2003-08-08  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-filter-tohtml.c (html_convert): Rather than checking
	*inptr == '\n', check inptr >= inend - this gets rid of an Invalid
	Read report from valgrind.

	* camel-mime-part.c (write_to_stream): Don't necessarily re-encode
	just because the encodings differ. Need to look into making it so
	that message/rfc822 and multipart parts ignore the
	Content-Transfer-Encoding header and just keep their 'encoding'
	bits set to DEFAULT.

2003-08-05  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/imap/camel-imap-folder.c (get_content): Updated.

	* camel-mime-message.c (camel_mime_message_init): Don't override
	the mime_type here.
	(process_header): Updated to use CamelDataWrapper's mime_type
	field.
	(find_best_encoding): Same.
	(best_encoding): Here too.

	* camel-digest-folder.c (camel_digest_folder_new): Updated for
	CamelMimePart::content_type change.

	* camel-mime-part.c (camel_mime_part_init): Override our parent
	class's default mime_type.
	(camel_mime_part_finalize): Don't need to unref the content_type
	anymore.
	(process_header): Updated to use CamelDataWrapper's mime_type
	field.
	(camel_mime_part_set_filename): Same.
	(camel_mime_part_get_filename): Same.
	(camel_mime_part_get_content_type): Same.
	(set_content_object): Here too.
	(write_to_stream): Updated.
	(construct_from_parser): Updated.

	* camel-mime-part.h: Remove the content_type field.

2003-07-31  Jeffrey Stedfast  <fejj@ximian.com>

	* tests/lib/messages.c (test_message_compare_content): If the
	chunks differ, perform a hexdump on the data being compared so
	that we may analyse it easier.

	* camel-multipart-signed.c (write_to_stream): Return ssize_t.

	* camel-mime-utils.h: Added the CamelMimePartEncodingType enum
	here.

	* camel-mime-part.h: Removed the CamelMimePartEncodingType enum
	from here.

	* camel-mime-part.c (write_to_stream): Updated to return
	ssize_t. Also minor changes to only re-encode the content stream
	if the charset or encoding changed (this way we write it out in
	the original raw form if nothing changed).

	* camel-mime-part-utils.c
	(simple_data_wrapper_construct_from_parser): Drastically
	simplify. We no longer scan html content to try and find the
	charset, nor do we care about converting the content to UTF-8 and
	handling broken windows charsets.

	* camel-mime-message.c (find_best_encoding): Use
	decode_to_stream() here. Also updated to not assume the content
	charset is UTF-8 since it is very likely not the case anymore
	since data-wrappers no longer are converted to UTF-8 at parse
	time.

	* camel-folder-summary.c (summary_build_content_info_message): Use
	decode_to_stream instead here too.

	* camel-folder-search.c (match_words_1message): Use
	decode_to_stream instead of write_to_stream so we can search the
	contents.

	* camel-data-wrapper.c (camel_data_wrapper_init): Set the default
	encoding to DEFAULT.
	(write_to_stream): Updated to return ssize_t
	(camel_data_wrapper_decode_to_stream): New virtual function to
	decode a data wrapper to a stream (results in nearly identical
	behaviour to the old write_to_stream method).
	(decode_to_stream): Default implementation of above virtual
	method. Decodes base64/qp/etc streams.

	* camel-data-wrapper.h: Removed the rawtext bit and added an
	encoding member.

2003-08-01  Jeffrey Stedfast  <fejj@ximian.com>

	* tests/smime/pgp-mime.c: Same.

	* tests/smime/pgp.c: Updated to build and to import some custom
	gpg keys for use with testing.

2003-07-30  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-message.c (write_to_stream): Also updated.

	* camel-data-wrapper.c (write_to_stream): This should return ssize_t

	* camel-multipart-signed.c (write_to_stream): Updated.

	* camel-multipart.c (write_to_stream): Same.

	* camel-mime-part.c (write_to_stream): Here too.

2003-07-11  Suresh Chandrasekharan <suresh.chandrasekharan@sun.com>

	* camel-iconv.c: Fix for #46168 'some additional locale aliases
	required for chinese support'.

2003-07-25  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (header_decode_word): Revert NotZed's fix for
	bug #42170 - this causes even more problems than it solves. See
	bug #46331 for info. Basically, each address header would be
	converted to UTF-8 twice which means no raw 8bit address header
	would render correctly.
	(header_decode_mailbox): Perform a sanity check on the resultant
	addr->str to make sure that it is valid UTF-8, if not convert it
	to UTF-8. Fixes bug #42170.

2003-07-23  Ettore Perazzoli  <ettore@ximian.com>

	* camel-provider.c (camel_provider_init): Print the provider
	directory as well, for debugging.

2003-07-23  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-message.c (find_best_encoding): Revert my previous
	changes to this function.

	* camel-mime-utils.h: Revert previous changes.

	* camel-mime-part.h: Revert previous changes.

	* camel-mime-part-utils.c: Revert previous changes.

	* camel-data-wrapper.c (camel_data_wrapper_init): Revert previous
	changes.
	(write_to_stream): Revert previous changes.

2003-07-23  Dan Winship  <danw@ximian.com>

	* camel-block-file.c: #include camel-file-utils.h for camel_read()

	* camel-uid-cache.c (camel_uid_cache_save): Remove unused variable
	and label.

	* camel-url.c: #include camel-string-utils.h for camel_strdown

	* providers/pop3/camel-pop3-store.c (pop3_try_authenticate): Cast
	an (unsigned char *) to (char *) to fix a warning

2003-07-17  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-message.c (find_best_encoding): Updated to convert
	to/from the correct charset (since content is no longer
	necessarily in UTF-8).
	(best_encoding): Free the charset string when we're done with it.

	* camel-stream-fs.c (stream_read): Increment the seekable stream
	position by the number of bytes read. Oops.
	(stream_write): Same here.

2003-07-17  Timo Sirainen <tss@iki.fi>

	** See bug #42573
	
	* providers/imap/camel-imap-folder.c (do_append): Only free the
	response after we have finished the literal request, otherwise we
	could try processing folder updates incorrectly.

2003-07-14  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.h: Add the CamelMimePartEncodingType definition
	here.

	* camel-mime-part.h: Remove the CamelMimePartEncodingType
	definition.

	* camel-mime-part-utils.c
	(simple_data_wrapper_construct_from_parser): Don't do any of the
	auto-detection we used to do here anymore. Just read the content
	into a memory buffer and record the encoding type.
	(camel_mime_part_construct_content_from_parser): Don't mangle the
	Content-Type struct here anymore.

	* camel-data-wrapper.c (camel_data_wrapper_init): Init encoding to
	DEFAULT.
	(write_to_stream): If the stream needs to be decoded, decode it.

2003-07-15  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-stream-fs.c (stream_read): If we read 0 bytes, then set
	eos to TRUE.

2003-07-09  Jeffrey Stedfast  <fejj@ximian.com>

	Get rid of the #ifdef ENABLE_THREADS since we no longer plan to
	support/maintain this.

	* providers/nntp/camel-nntp-store.c: Here.

	* providers/nntp/camel-nntp-newsrc.c: And here.

	* providers/nntp/camel-nntp-folder.c: Same.

	* providers/local/camel-local-folder.c: And here.

	* camel-block-file.c: Here too.

	* camel.c: Same.

	* camel-certdb.c: Here too.

	* camel-charset-map.c: And here.

	* camel-cipher-context.c: "

	* camel-data-wrapper.c: "

	* camel-digest-folder.c: "

	* camel-exception.c: "

	* camel-folder.c: "

	* camel-folder-summary.c: "

	* camel-lock-client.c: "

	* camel-mime-utils.c: "

	* camel-object.c: "

	* camel-operation.c: "

	* camel-partition-table.c: "

	* camel-sasl-popb4smtp.c: "

	* camel-service.c: "

	* camel-session.c: "

	* camel-store.c: "

	* camel-store-summary.c: "

	* camel-text-index.c: "

	* camel-transport.c: "

	* camel-vee-folder.c: "

	* camel-tcp-stream-openssl.c: Removed pthread.h, it isn't needed.

2003-07-09  Larry Ewing  <lewing@ximian.com>

	* camel.h: remove reference to camel-pgp-mime.h

2003-07-08  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-pgp-mime.[c,h]: Removed.

	* camel-iconv.c: Updated (new copy/paste from e-iconv).

	* camel-block-file.c (camel_block_file_get_block): Use
	camel_read() rather than libc read.

	* camel-tcp-stream-raw.c (stream_read): Use camel_read().
	(stream_write): Use camel_write().

	* camel-stream-fs.c (stream_read): Use camel_read().
	(stream_write): Use camel_write().

2003-07-07  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/nntp/camel-nntp-folder.c (camel_nntp_folder_new): Use
	camel_mkdir().

	* providers/imap/camel-imap-folder.c (camel_imap_folder_new): Use
	camel_mkdir().

	* camel-session.c (get_storage_path): Use camel_mkdir().

	* camel-store.c (camel_mkdir_hier): Removed.

	* camel-data-cache.c (camel_data_cache_new): Updated to use
	camel_mkdir().
	(data_cache_path): Same.

	* camel-file-utils.c (camel_mkdir): Renamed and documented.
	(camel_file_util_safe_filename): Documented.
	(camel_read): Moved here from camel-io.c
	(camel_write): Same.

	* camel-io.[c,h]: Removed.

	* camel-uid-cache.c (camel_uid_cache_new): Use the
	camel-file-utils.c version of mkdir.

2003-07-07  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-session.c (camel_session_init): Updated for string-utils
	namespace changes.

	* camel-provider.c: Updated for string-utils namespace changes.

	* camel-mime-part.c (init_header_name_table): Updated for
	string-utils namespace changes.

	* camel-mime-message.c (camel_mime_message_class_init): Updated
	for string-utils namespace changes.
	(camel_mime_message_init): Same.

	* camel-mime-filter-enriched.c
	(camel_mime_filter_enriched_class_init): Updated for string-utils
	namespace changes.

	* camel-folder-summary.c (camel_folder_summary_init): Updated for
	string-utils namespace changes.

	* camel-string-utils.[c,h]: Renamed from string-utils.[c,h] and
	also namespaced all functions.

2003-07-01  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-sasl-digest-md5.c (digest_response): Don't quote the
	charset value, the qop value, nor the response value. Fixes bug
	#45712.

2003-07-01  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-utils.c (header_format_date): Use gmtime_r() instead
	of using gmtime() and memcpy() to try and be "atomic".

2003-06-30  Dan Winship  <danw@ximian.com>

	* camel-folder-search.c (camel_folder_search_finalize): free the
	summary hash

2003-06-24  David Woodhouse  <dwmw2@infradead.org>

	* camel-mime-utils.c (header_format_date): Put day of week into
	outgoing email.


2003-06-25  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-folder-summary.h: Added prototype for
	camel_folder_summary_remove_range().

2003-06-25  Not Zed  <NotZed@Ximian.com>

	** See bug #45386
	
	* camel-service.c (camel_gethostbyname, camel_gethostbyaddr): Make
	sure we have an exception that we test against.

2003-06-20  Not Zed  <NotZed@Ximian.com>

	** See bug #43887

	* camel-mime-filter-enriched.c (camel_enriched_to_html): simple
	wrapper to convert enriched to html in one go.

2003-06-18  Not Zed  <NotZed@Ximian.com>

	* camel-service.c (get_hostbyaddr, get_hostbyname): if we got
	cancelled, the message is floating, so free it.
	(struct _lookup_msg): Add a cancelled tag.
	(camel_gethostbyname, camel_gethostbyaddr): if we get a
	failure/cancel, cancel the lookup thread and detach, so we dont
	have to wait for it to return.  cleanup changed to handle the case
	where we didn't get a reply message.

2003-06-13  Jeffrey Stedfast  <fejj@ximian.com>

	* providers/pop3/camel-pop3-folder.c (pop3_finalize): Made static
	(to match the prototype).

2003-06-13  Larry Ewing  <lewing@ximian.com>

	* camel-folder-thread.c (camel_folder_thread_messages_apply):
	don't leak the summary when reloading it.  Fixes a very large
	leak.

2003-06-17  Not Zed  <NotZed@Ximian.com>

	* camel-vee-folder.c (vee_folder_remove_folder): Calculate ranges
	to remove folder info's more efficiently.  affects shutdown
	performance on big vfolders signifinantly.
	(vee_folder_build_folder): do the same here, when rebuilding a
	folder's definition.

	* camel-folder-summary.c (camel_folder_summary_remove_index): new
	function to drop a range of index entries in one hit.

2003-06-16  Not Zed  <NotZed@Ximian.com>

	** See bug #31745

	* providers/imap/camel-imap-store-summary.c
	(camel_imap_store_summary_namespace_new): Workaround a shell bug -
	if the namespace has '#' in it, then strip it.

2003-06-16  Not Zed  <NotZed@Ximian.com>

	** See bug #44322
	
	* providers/imap/camel-imap-command.c (imap_command_strdup_vprintf):
	If we are outputting a folder name, make sure we calculate buffer
	size based on the raw/utf7 version

	** See bug #44121
	
	* camel-multipart-signed.c (signed_get_part): If we can't parse
	the content, but we have a stream, just use that as the content.

2003-06-05  Jeffrey Stedfast  <fejj@ximian.com>

	Fix for bug #40788.

	* providers/pop3/camel-pop3-engine.c (camel_pop3_engine_new): Now
	takes a flags argument. Currently there is only 1 flag which can
	be used to disable Pop3 server extensions.
	(get_capabilities): Don't check for Pop3 server extensions if the
	DISABLE_EXTENSIONS flag is set on the engine.
	(camel_pop3_engine_iterate): If we get a response that is neither
	+OK nor -ERR, default to treating it like a -ERR.

	* providers/pop3/camel-pop3-store.c (connect_to_server): Check for
	the disable_extensions param.

	* providers/pop3/camel-pop3-provider.c: Define a checkbox to
	disable all POP3 extension support.

2003-06-11  Jeffrey Stedfast  <fejj@ximian.com>

	Partial fix for bug #44457.

	* camel-mime-part-utils.c
	(simple_data_wrapper_construct_from_parser): Make sure to set
	rawtext to FALSE if we successfully convert the text to UTF-8.

	* camel-data-wrapper.c (camel_data_wrapper_init): Default the
	value of rawtext to TRUE instead of FALSE. This way if the mailer
	decides to try displaying a non-textual part as text, it knows
	that it needs to convert the content to UTF-8.

2003-06-04  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-uid-cache.c (camel_uid_cache_new): Create the directory
	with mode 0777 and the cache file itself with mode 0666. Let the
	user's umask filter the permissions. Instead of saving the fd on
	the Cache object, instead save the filename. Use camel_read()
	instead of expecting read() to just always work without getting an
	EINTR/etc.
	(maybe_write_uid): Don't do anything if cache->fd == -1, this
	means an error has occured in a previous callback. Replace the 2
	calls to write() with camel_write() and check their return
	values. If either of them fails, set cache->fd to -1 (GHashTable
	doesn't give us a way to abort foreach'ing thru the table).
	(camel_uid_cache_save): Save to a temp file instead of overwriting
	the original. Do proper error checking, etc. Also added some
	smarts about whether to try and overwrite the old cache even if we
	haven't successfully saved all the uids in the cache.
	(camel_uid_cache_destroy): Free the cache->filename, no longer
	need to close (cache->fd).

2003-06-11  Larry Ewing  <lewing@ximian.com>

	* camel-text-index.c (text_index_normalise): use g_utf8_strdown
	properly.

2003-06-09  Jeffrey Stedfast  <fejj@ximian.com>

	* camel-mime-message.c (find_best_encoding): Add the
	CAMEL_BESTENC_TEXT bit to enctype if the part is a text part.

	* camel-mime-filter-bestenc.c
	(camel_mime_filter_bestenc_get_best_encoding): If we have any
	nul-bytes or if the content is non-text and contains any 8bit
	octets, we need to use base64. Fixes bug #44344.
