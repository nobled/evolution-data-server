<?xml version="1.0" encoding="utf-8" ?> 
<xs:schema targetNamespace="http://schemas.novell.com/2003/10/NCSP/methods.xsd" elementFormDefault="qualified"
	xmlns="http://schemas.novell.com/2003/10/NCSP/methods.xsd" 
	xmlns:tns="http://schemas.novell.com/2003/10/NCSP/methods.xsd"
	xmlns:types="http://schemas.novell.com/2003/10/NCSP/types.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<xs:element name="acceptRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="items" type="types:ItemRefList"/>
				<xs:element name="comment" type="xs:string"/>
				<xs:element name="acceptLevel" type="types:AcceptLevel"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="acceptResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="addItemRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="container" type="types:uid"/>
				<xs:element name="id" type="types:uid"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="addItemResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="addItemsRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="container" type="types:uid"/>
				<xs:element name="items" type="types:ItemRefList"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="addItemsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="addMembersRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="container" type="types:uid"/>
				<xs:element name="members" type="types:GroupMemberList"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="addMembersResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="closeFreeBusySessionRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="freeBusySessionId" type="xs:int"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="closeFreeBusySessionResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="completeRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="items" type="types:ItemRefList"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="completeResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="createCursorRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="container" type="types:uid"/>
				<xs:element name="view" type="types:View"/>
				<xs:element name="filter" type="types:Filter"/>
<!--				<xs:element name="sort" type="types:Sort"/> -->
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="createCursorResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="cursor" type="xs:int"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="createItemRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="item" type="types:ItemArg"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="createItemResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="types:uid"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="createProxyAccessRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="entry" type="types:AccessRightEntry"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="createProxyAccessResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="types:uid"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="declineRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="items" type="types:ItemRefList"/>
				<xs:element name="comment" type="xs:string"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="declineResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="delegateRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="items" type="types:ItemRefList"/>
				<xs:element name="commentToOrganizer" type="xs:string"/>
				<xs:element name="commentToDelegatee" type="xs:string"/>
				<xs:element name="distribution" type="types:Distribution"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="delegateResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="destroyCursorRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="cursor" type="xs:int"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="destroyCursorResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getAddressBookListRequest">
	</xs:element>

	<xs:element name="getAddressBookListResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="books" type="types:AddressBookList"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getAttachmentRequest">
		<xs:annotation>
			<xs:documentation>
				This work only for file attachments.
				If you try to specify an embedded item, you will get an error.
				If you specify offset = 0 and length = -1,
					you will receive the whole attachment.
				You can supply other values for offset and length to receive
					a part of the attachment.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="types:uid"/>
				<xs:element name="offset" type="xs:int"/>
				<xs:element name="length" type="xs:int"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getAttachmentResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="part" type="types:MessagePart"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getCategoryListRequest">
	</xs:element>

	<xs:element name="getCategoryListResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="categories" type="types:CategoryList"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getCustomListRequest">
	</xs:element>

	<xs:element name="getCustomListResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customs" type="types:CustomList"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getDeltaRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="AddressBookItem" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Appointment" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="CalendarItem" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Contact" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Folder" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Group" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Item" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Mail" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Note" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="PhoneMessage" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Task" type="xs:string" minOccurs="0" maxOccurs="1"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getDeltaResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="used" type="xs:unsignedInt"/>
				<xs:element name="changed" type="xs:boolean"/>
				<xs:element name="deltas" type="types:DeltaList"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getFolderListRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="parent" type="types:uid"/>
				<xs:element name="view" type="types:View"/>
				<xs:element name="recurse" type="xs:boolean"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getFolderListResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="folders" type="types:FolderList"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getFreeBusyRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="freeBusySessionId" type="xs:string"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getFreeBusyResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="freeBusyStats" type="types:FreeBusyStats"/>
				<xs:element name="freeBusyInfo" type="types:FreeBusyInfoList"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getItemRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="types:uid"/>
				<xs:element name="view" type="types:View" nillable="true"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getItemResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="item" type="types:Item"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getItemsRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="container" type="types:uid"/>
				<xs:element name="view" type="types:View"/>
				<xs:element name="filter" type="types:Filter"/>
				<xs:element name="items" type="types:ItemRefList" minOccurs="0" maxOccurs="1"/>
<!--				<xs:element name="sort" type="types:Sort"/> -->
				<xs:element name="count" type="xs:int" default="-1"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getItemsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="items" type="types:Items"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getProxyAccessListRequest">
	</xs:element>

	<xs:element name="getProxyAccessListResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="accessRights" type="types:AccessRightList"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getProxyListRequest">
	</xs:element>

	<xs:element name="getProxyListResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="proxies" type="types:ProxyList"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getSettingsRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="xs:string" minOccurs="0" nillable="true"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getSettingsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="settings" type="types:Settings"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="getTimezoneListRequest">
	</xs:element>

	<xs:element name="getTimezoneListResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="timezones" type="types:TimezoneList"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="loginRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="auth" type="types:Authentication"/>
				<xs:element name="language" type="xs:language"/>
				<xs:element name="version" type="xs:decimal"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="loginResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="session" type="xs:string"/>
				<xs:element name="userinfo" type="types:UserInfo"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="logoutRequest">
	</xs:element>

	<xs:element name="logoutResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="markReadRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="items" type="types:ItemRefList"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="markReadResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="markUnReadRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="items" type="types:ItemRefList"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="markUnReadResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="modifyItemRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="types:uid"/>
				<xs:element name="updates" type="types:ItemChanges"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="modifyItemResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="modifyProxyAccessRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="types:uid"/>
				<xs:element name="updates" type="types:AccessRightChanges"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="modifyProxyAccessResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="modifySettingsRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="settings" type="types:SettingsList"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="modifySettingsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="positionCursorRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="cursor" type="xs:int"/>
				<xs:element name="seek" type="types:CursorSeek"/>
				<xs:element name="offset" type="xs:int"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="positionCursorResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="purgeDeletedItemsRequest">
		<xs:annotation>
			<xs:documentation>
				This method permanently deletes all items that were previously
				   marked for deletion (i.e. stored in the "Trash").
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence/>
		</xs:complexType>
	</xs:element>

	<xs:element name="purgeDeletedItemsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="purgeItemRequest">
		<xs:annotation>
			<xs:documentation>
				If the container is not specified then all of the item
				   links are removed and the item is permanently deleted.
				If the container is specified then only the specific link
				   to the container is deleted. If the last remaining link
				   is deleted then the item will be deleted.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="container" type="types:uid"/>
				<xs:element name="id" type="types:uid"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="purgeItemResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="readCursorRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="cursor" type="xs:int"/>
				<xs:element name="forward" type="xs:boolean"/>
				<xs:element name="count" type="xs:int"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="readCursorResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="items" type="types:ItemList"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="removeItemRequest">
		<xs:annotation>
			<xs:documentation>
				If the container is not specified then the item is 
				   removed from all of the containers that it is linked
				   to and is stored in the "Trash".
				If the container is specified then the item is only
				   removed from that specific container and it's link
				   is stored in the "Trash".
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="container" type="types:uid" nillable="true"/>
				<xs:element name="id" type="types:uid"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="removeItemResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="removeItemsRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="container" type="types:uid"/>
				<xs:element name="items" type="types:ItemRefList"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="removeItemsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="removeMembersRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="container" type="types:uid"/>
				<xs:element name="members" type="types:GroupMemberList"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="removeMembersResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="removeProxyAccessRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="types:uid"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="removeProxyAccessResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="retractRequest">
		<xs:annotation>
			<xs:documentation>
				If a recipient has opened or accepted a Calendar item, a notice
				will be placed in the recipient's in-box when the item is
				retracted.  The notice can be affected by the following options:
				
				"comment":  The comment will be included in the notice.
				"retractCausedByResend": When TRUE, the notice will be suppressed
				in lieu of the 'new' calendar item that will be delivered to 
				the recipient.
				"retractingAllInstances": When TRUE, a single notice will be 
				placed in the recipient's in-box (instead of a notice for each
				instance).  
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="items" type="types:ItemRefList"/>
				<xs:element name="comment" type="xs:string" minOccurs="0"/>
				<xs:element name="retractingAllInstances" type="xs:bool" minOccurs="0"/>
				<xs:element name="retractCausedByResend" type="xs:bool" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="retractResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="sendItemRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="item" type="types:ItemArg"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="sendItemResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="types:uid"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="startFreeBusySessionRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="users" type="types:FreeBusyUserList"/>
				<xs:element name="startDate" type="xs:dateTime"/>
				<xs:element name="endDate" type="xs:dateTime"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="startFreeBusySessionResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="freeBusySessionId" type="xs:int"/>
				<xs:element name="status" type="types:Status"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

</xs:schema>
