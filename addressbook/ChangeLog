2004-12-11  Hans Petter Jansson  <hpj@novell.com>

	* libebook/e-destination.h: Add "changed" signal.

	* libebook/e-destination.c: Add "changed" signal.
	(e_destination_class_init): Init changed signal.
	(e_destination_set_book): Emit changed signal. Additionally, fix
	something that looks like a long standing bug; a negated test would
	make it crash if dest->priv->source_uid was NULL when the book was
	being set.
	(e_destination_set_contact_uid)
	(e_destination_set_source_uid)
	(e_destination_set_name)
	(e_destination_set_email)
	(e_destination_set_auto_recipient)
	(e_destination_set_raw)
	(e_destination_set_html_mail_pref)
	(e_destination_set_contact): Emit changed signal.

2004-12-09  Hans Petter Jansson  <hpj@novell.com>

	* libebook/e-destination.c: Remove antiquated comments.

2004-12-08  Hans Petter Jansson  <hpj@novell.com>

	* libebook/Makefile.am: Build e-destination.c, install e-destination.h.
	Link with Camel.

	* libebook/e-contact.h: Include E_CONTACT_FIELD_FIRST in the field
	enum (currently, the fields are numbered starting at 1).

	* libebook/e-destination.c: Remove bogus includes.
	(utf8_casefold_collate_len)
	(utf8_casefold_collate): Keep local copies of these functions for now.
	(e_destination_equal): Use local utf8_casefold_collate ().

2004-12-08  Rodney Dawes <dobey@novell.com>

	* libebook/e-book-contact.c: #include <config.h>
	(e_contact_pretty_name): Bind and set the textdomain for eds so that
	we get translated strings when we call this outside of eds, as it is
	public API

2004-12-05  Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c 
	(e_book_backend_groupwise_modify_contact) 
	(e_book_backend_groupwise_get_contact) : use the 
	changed prototype of e_gw_connection-get_item 

2004-11-28  Sivaiah Nallagatla <snallagatla@novell.com>

	* libebook/e-book.[ch] :
	(e_book_get_required_fields) 
	(e_book_async_get_required_fields) 
	(do_get_required_fields)
	(e_book_response_get_required_fields)
	(e_book_response_get_required_fields): new methods 
	to required fields defined by backends
	(e_book_handle_response) : added handling for
	GetRequiredFieldsResponse case

	* libebook/e-book-listener.[ch]
	Added GetRequiredFieldsResponse to book listener
	operations
	(impl_BookListener_respond_get_required_fields):
	new method for required fields
	(e_book_listener_class_init) : init notifyRequiredFields
	with corresponding implementation method

	* idl/Evolution-DataServer-Addressbook.idl : added getRequiredFields
	and notifyRequiredFields to book and book listener interfaces

	* libedatabook/e-data-book.[ch] : 
	(impl_GNOME_Evolution_Addressbook_Book_getRequiredFields)
	(e_data_book_respond_get_required_fields) : new methods for required 
	fields handling 
	(e_data_book_class_init) : init notifyRequiredFields
        with corresponding implementation method

	* libedatabook/e-book-backend.[ch] : 
	(e_book_backend_get_required_fields) : new methods 
	for required fields handling.
	
	* libedatabook/e-book-backend-sync.[ch] : 
	(e_book_backend_sync_get_required_fields)
	(_e_book_backend_get_required_fields) : ditto
	(e_book_backend_sync_class_init) : init the new get_required_fields
	method 

	* backends/file/e-book-backend-file.c :
	(e_book_backend_file_get_required_fields) : get_required_fields
	implementation
	(e_book_backend_file_class_init) : init get_requires_method

	* backends/vcf/e-book-backend-vcf.c :
	(e_book_backend_vcf_get_required_fields)
	(e_book_backend_vcf_class_init) :ditto

	* backends/ldap/e-book-backend-ldap.c :
	(e_book_backend_ldap_get_required_fields)
	(e_book_backend_ldap_class_init) : ditto

	* backends/groupwise/e-book-backend-groupwise.c :
	(e_book_backend_groupwise_get_required_fields)
	(e_book_backend_groupwise_class_init) :ditto
	

	
2004-10-30  Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c (
	e_book_backend_groupwise_get_contact_list) : move e_book_backend_sexp_match_contact
	inside if(match_needed) sp that contact won't be returned
	where match is needed but contact does not match the criteria 

2004-10-29  Diego Gonzalez <diego@pemas.net>

	 * backends/file/e-book-backend-file.c (e_book_backend_file_modify_contact):
 	 don't crash if the UID of the contact being commited is NULL.

2004-10-29  Diego Gonzalez <diego@pemas.net>

	  * libebook/e-book.c (do_commit_contact): when doing a e_book_commit_contact,
  	  several times, the first time that this funcion was called with the
 	  sync flag it cleared the UID of the contact, in the next operation the
 	  server would crash due to the UID being null. This fixes the client side
  	  and seems to work without a glitch.

  	  I just removed the e_contact_set as it seems (from visual inspection of
  	  e_contact_set) that this operation doesn't cause any call in the backend,
  	  and thus it will not force the previous operation to be completed.

2004-10-26  Sivaiah Nallagatla <snallagatla@novell.com>

	* libedata-book/e-book-backend-sexp.c : Remove E_CONTACT_UID 
	from the list of feilds we search in. 
	Fixes #42165 

2004-10-25  JP Rosevear  <jpr@novell.com>

	From Anders Carlsson <andersca@gnome.org>
	
	* libedata-book/e-book-backend-factory.c
	(e_book_backend_factory_get_type): allocate the right size for the
	class

2004-10-24  Nat Friedman  <nat@novell.com>

	* libedata-book/e-book-backend-sexp.c (compare_im_groupwise): Make
	GroupWise IM names searchable.

2004-10-14  Rodney Dawes  <dobey@novell.com>

	* backends/*/Makefile.am: Add -avoid-version to LDFLAGS for all
	of the backends
	
2004-10-13 Sivaiah Nallagatla <snallagatla@novell.com>

	* backend/groupwise/e-book-backend-groupwise.c (
	e_book_backend_groupwise_create_contact) 
	(e_book_backend_groupwise_get_contact_list)
	(book_view_thread) (e_book_backend_groupwise_authenticate_user)
	: call the e_gw_connection_* api again if the retuned status 
	code is E_GW_CONNECTION_STATUS_INVALID_CONNECTION. Part of the fix 
	for #64298 

2004-10-04  Chris Toshok  <toshok@ximian.com>

	* backends/groupwise/e-book-backend-groupwise-factory.c: use the new
	E_BOOK_BACKEND_FACTORY_SIMPLE macro.

	* backends/groupwise/e-book-backend-groupwise-factory.h: nuke
	
	* backends/groupwise/Makegroupwise.am (libebookbackendgroupwise_la_SOURCES):
	remove e-book-backend-groupwise-factory.h.

	* backends/ldap/e-book-backend-ldap-factory.c: use the new
	E_BOOK_BACKEND_FACTORY_SIMPLE macro.

	* backends/ldap/e-book-backend-ldap-factory.h: nuke
	
	* backends/ldap/Makeldap.am (libebookbackendldap_la_SOURCES):
	remove e-book-backend-ldap-factory.h.
	
	* backends/vcf/e-book-backend-vcf-factory.c: use the new
	E_BOOK_BACKEND_FACTORY_SIMPLE macro.

	* backends/vcf/e-book-backend-vcf-factory.h: nuke
	
	* backends/vcf/Makevcf.am (libebookbackendvcf_la_SOURCES):
	remove e-book-backend-vcf-factory.h.

	
	* backends/file/e-book-backend-file-factory.c: use the new
	E_BOOK_BACKEND_FACTORY_SIMPLE macro.

	* backends/file/e-book-backend-file-factory.h: nuke
	
	* backends/file/Makefile.am (libebookbackendfile_la_SOURCES):
	remove e-book-backend-file-factory.h.

	* libedata-book/e-book-backend-factory.h: add a macro for all the
	factory boilerplate.

2004-10-04  Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise-ebook-backend-groupwise.c :
	(e_book_backend_groupwise_build_gw_filter) : add an argument 
	to get the search string present in query
	(book_view_thread) : create a gw filter with just firstName
	and lastNmae in case of system address book. This is to simplify the
	auto completion query. Server team believes that this improves scalability limit 
	(e_book_backend_groupwise_get_contact_list) : pass NULL to 
	extra arument added to e_book_backend_groupwise_build_gw_filter
	. We do't need top get back serch string here 
 


2004-09-30  Hans Petter Jansson  <hpj@ximian.com>

	Fixes bug #66368.

	* libebook/e-contact.c (e_contact_new_from_vcard): If the constructed
	vcard does not have a file_as attribute, try to generate one.

2004-09-30  Chris Toshok  <toshok@ximian.com>

	* libedata-book/e-data-book-factory.c
	(e_data_book_factory_register_backend): this function takes an
	EBookBackendFactory* now, instead of an EBookBackendFactoryFn.
	(e_data_book_factory_register_backends): new function.  Get the
	extensions that implement E_TYPE_BOOK_BACKEND_FACTORY, and
	register them.
	(e_data_book_factory_lookup_backend_factory): use an
	EBookBackendFactory instead of EBookBackendFactoryFn.
	(impl_GNOME_Evolution_Addressbook_BookFactory_getBook): change to
	match the EBookBackendFactoryFn -> EBookBackendFactory switch.

	* libedata-book/e-book-backend.h: remove typedef for
	EBookBackendFactoryFn.

	* libedata-book/e-book-backend-sync.h: remove typedef for
	EBookBackendSyncFactoryFn, since it wasn't ever used (and even the
	non-sync version is obsolete now.)

	* libedata-book/e-book-backend-factory.[ch]: new file, superclass
	for all dynamically loaded addressbook factories.

	* libedata-book/Makefile.am (libedata_book_la_SOURCES): add
	e-book-backend-factory.c
	(libedata_bookinclude_HEADERS): add e-book-backend-factory.h

	* libebook/e-book.c (activate_factories_for_uri): don't look for
	factories based on the supported_protocol property, since we can't
	use those anymore with dynamically loaded backends.

	* backends/file/e-book-backend-file-factory.[ch]: new files,
	subclass EBookBackendFactory.

	* backends/file/Makefile.am (extension_LTLIBRARIES):
	libebookbackendfile.la is no longer noinst.
	(libebookbackendfile_la_SOURCES): add
	e-book-backend-file-factory.[ch].

	* backends/groupwise/e-book-backend-groupwise-factory.[ch]: new
	files, subclass EBookBackendFactory.
	
	* backends/groupwise/Makefile.am (extension_LTLIBRARIES):
	libebookbackendgroupwise.la is no longer noinst.
	(libebookbackendfile_la_SOURCES): add
	e-book-backend-groupwise-factory.[ch].

	* backends/ldap/e-book-backend-ldap-factory.[ch]: new files,
	subclass EBookBackendFactory.
	
	* backends/ldap/Makefile.am (extension_LTLIBRARIES):
	libebookbackendldap.la is no longer noinst.
	(libebookbackendfile_la_SOURCES): add
	e-book-backend-ldap-factory.[ch].

	* backends/vcf/e-book-backend-vcf-factory.[ch]: new files,
	subclass EBookBackendFactory.
	
	* backends/vcf/Makefile.am (extension_LTLIBRARIES):
	libebookbackendvcf.la is no longer noinst.
	(libebookbackendfile_la_SOURCES): add
	e-book-backend-vcf-factory.[ch].
	
2004-09-23  Diego Gonzalez  <diego@pemas.net>

	Fixes #66574.

	* libebook/e-book.c (e_book_get_self): open the book before
	getting the contact.

2004-09-23  JP Rosevear  <jpr@novell.com>

	* libebook/Makefile.am: build a versioned lib, don't hard
	code the pkgconfig version

	* libedata-book/Makefile.am: ditto
	
	* backends/file/Makefile.am: link against the correct library
	version
	
	* backends/groupwise/Makefile.am: ditto

	* backends/vcf/Makefile.am: ditto

	* backends/ldap/Makefile.am: ditto

	* tests/vcard/Makefile.am: ditto

	* tests/ebook/Makefile.am: ditto
	
2004-09-22  William Jon McCann  <mccann@jhu.edu>

	* libebook/e-book.c (emit_async_open_response)
	(e_book_response_open): 
	* libebook/e-book-view-listener.c (d): Disable debugging noise.

2004-09-16 Sivaiah Nallagatla  <snallagatla@novell.com>

	* backends/gropwise/e-book-backend-groupwise.c
	(e_book_backend_groupwise_get_contact_list) :
	don't try to search over summary in case of system addr book
	as we don't maintain one. 

2004-09-13  Hans Petter Jansson  <hpj@ximian.com>

	* backends/ldap/e-book-backend-ldap.c: Revert the LDAP attribute names
	changed by Sivaiah's last commit.

2004-09-09  Hans Petter Jansson  <hpj@ximian.com>

	Fixes #63385.

	* libebook/e-book.c (fetch_corba_book): Use g_signal_connect_object ()
	to connect to the listener, so we won't be destroyed in another thread
	while processing signals from it.
	(e_book_dispose): Only disconnect the listener signal if it hasn't
	already been done by GLib. Bug compatibility.

2004-09-06  Sivaiah Nallagatla <snallagatla@novell.com>
	
	* backends/ldap/e-book-backend-ldap.c : Update 
	the ldap attribute names for calendar ui and free busy uri
	fileds to match with what is present in evolutionPerson.schema
	(add_to_supported_fields) : add E_CONTACT_EMAIL_1 also to list of supported fields.
	Also use e_contact_field_name function instead of hardcodring field names
        (anniversary_populate) : correct incorrect contact date
	parameter passing. Also free the contact date

	Fixes some of the issues mentioned in #59582 	
	
2004-08-26  Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c 
	(e_book_backend_groupwise_authenitcate_user) : don' try 
	to get container id and categories if we have already authenitcated
        Fixes #63844

	
2004-08-25  Frederic Crozat  <fcrozat@mandrakesoft.com>

	* tests/ebook/test-photo.c:
	Add missing prototype.

2004-08-23  Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c 
	(e_book_backend_groupwise_get_contact_list)
	(book_view_thread)
	(set_members_in_gw_item) : add "members" view 
	while getting items explicitly to take care of change in server 
	behaviour 
        (e_book_backnd_groupwise_start_book_view) : make the thread 
	non-joinable 
	(e_book_backend_groupwise_stop_book_view) : don;'t try to join
	the thread as it is acusing gui blokcing when server response is slow	
	
2004-08-20  Chris Toshok  <toshok@ximian.com>

	* backends/ldap/e-book-backend-ldap.c
	(e_book_backend_ldap_dispose): free bl->priv->schema_dn.

2004-08-20  Sivaiah Nallagatla <snallagatla@novell.com>

	* backend/groupwise/e-book-backend-groupwise.c (populate_full_name) :
	ignore the name prefix returned by server as it is reurning incorrect values
	see #63225 

2004-08-19  Chris Toshok  <toshok@ximian.com>

	[ part of fix for #60889 ]
	* backends/file/e-book-backend-file.c
	(e_book_backend_file_load_source): add DB_THREAD flag to all calls
	to db->open.
	(string_to_dbt): set dbt->flags to DB_DBT_USERMEM.
	(e_book_backend_file_modify_contact): set dbt->flags to
	DB_DBT_MALLOC and free the dbt's data when we're done.
	(e_book_backend_file_get_contact): same.
	(book_view_thread): same.
	(e_book_backend_file_changes_foreach_key): same.
	(e_book_backend_file_maybe_upgrade_db): same.
	
2004-08-17  Sivaiah Nallagatla <snallagatla@novell.com>
	
	* backends/groupwise/e-book-backend-groupwise.c (func_begins_with):
	do a OR operation insted of assinging BEGINS_WITH_FILE_AS

2004-08-17  Sivaiah Nallagatla <snallagatla@novell.com>
	
	* backends/groupwise/e-book-backend-groupwise.c (book_view_thread) :
	don't update the view with contact when id is not present. Send the 
	"name email" view to server when the query is for auto-completion
	don't try to search on system address book with out filter
	(e_book_backend_groupwise_build_gw_filter) : add an extra argument to know 
	whether the query is auto-completion one or not 
	(e_book_backend_groupwise_get_contact_list) : call the updated build_gw_filter 
	method
	(e_book_backend_groupwise_remove) : return error when 
	there is an attempt to remove System adddress book
	(e_book_backend_groupwise_get_supported_auth_methods ) : return plain/password 
	
2004-08-16  Chris Toshok  <toshok@ximian.com>

	* backends/vcf/e-book-backend-vcf.c: keep both a hash table and a
	GList around for the contacts.
	(insert_contact): insert the contact into the GList and insert the
	GList* into the hashtable.
	(save_file): just use the GList directly instead of building it up
	from the hash table.
	(do_create): call insert_contact instead of directly inserting
	into the hash table.
	(e_book_backend_vcf_remove_contacts): remove the contact from both
	the hashtable and the list.
	(e_book_backend_vcf_modify_contact): just update the GList.
	(e_book_backend_vcf_get_contact): the hashtable contains GList*'s.
	(foreach_get_contact_compare): this is a GFunc now, not a GHFunc.
	(e_book_backend_vcf_get_contact_list): iterate over the list, not
	the hashtable.
	(foreach_search_compare): nuke.
	(book_view_thread): do the iteration here, and break out properly
	when the search is stopped.
	(e_book_backend_vcf_load_source): use g_hash_table_new instead of
	_new_full here.
	(e_book_backend_vcf_dispose): destroy the list and free the hash
	keys.

2004-08-13  Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c 
	(populate_birth_date), (populate_full_name),
	(set_emails_in_gw_item) : patch
	from Vincent Noel (vnoel@cox.net) to fix
	#62597 
	
2004-08-12  Sivaiah Nallagatla <snallagatla@novell.com>

        * backends/ldap/e-book-backend-ldap.c
        (e_book_backend_ldap_get_static_capabilities) : add "anon-access"
        static capability

2004-08-09  Chris Toshok  <toshok@ximian.com>

	* tests/vcard/README (Test): add note about 11.vcf.

2004-08-03  Chris Toshok  <toshok@ximian.com>

	[ fixes #61719 ]
	* libebook/e-vcard.c (read_attribute_params): fix the one
	remaining g_assert_not_reached case.

2004-08-03  Chris Toshok  <toshok@ximian.com>

	* tests/vcard/Makefile.am (EXTRA_DIST): add 11.vcf.

	* tests/vcard/11.vcf: new test, for missing attribute parameters.

2004-07-23  Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c
	(e_book_backend_groupwise_load_source) : read the "use_ssl"
	property from ESource and form the uri accrodingly
	(e_book_backend_groupwise_authenticate_user) : when "use_ssl" is
	"when-posible", try with https first and then http if that fails.
	(e_book_backend_groupwise_init) (e_book_backend_groupwise_dispose) :
	initialize and free the newly added priv member use_ssl

2004-07-19  Hans Petter Jansson  <hpj@ximian.com>

	Really fixes #61052, #61466, #61160. Tested.

	* libebook/e-book.c (e_book_op_remove): Don't lock the book's
	mutex here, for symmetry with e_book_new_op ().
	(do_add_contact): Lock book around op removal.
	(do_commit_contact): Ditto.
	(do_get_supported_fields): Ditto.
	(do_get_supported_auth_methods): Ditto.
	(do_authenticate_user): Ditto.
	(do_get_contact): Ditto.
	(do_get_contacts): Ditto.
	(do_get_changes): Ditto.
	(do_open): Ditto.
	(do_remove): Ditto.
	(emit_async_add_contact_response): Widen the scope of the
	book's lock.
	(emit_async_elist_response): Ditto.
	(emit_async_get_contact_response): Ditto.
	(emit_async_get_book_view_response): Ditto.
	(emit_async_get_contacts_response): Ditto.
	(emit_async_get_changes_response): Ditto.
	(emit_async_generic_response): Ditto.
	(emit_async_open_response): Ditto.
	(e_book_response_add_contact): Lock book around op manipulation,
	widen scope.
	(e_book_response_get_supported_fields): Ditto.
	(e_book_response_get_supported_auth_methods): Ditto.
	(e_book_response_get_contact): Ditto.
	(e_book_response_get_book_view): Ditto.
	(e_book_response_get_contacts): Ditto.
	(e_book_response_get_changes): Ditto.
	(e_book_response_generic): Ditto.
	(e_book_response_open): Ditto.
	(e_book_response_remove): Ditto.

2004-07-19  Sivaiah Nallagatla <snallagatla@novell.com> 
	
	* libedata-book/e-book-backend-sexp.c (compare_address) : provided
	implementation, search in all fileds of all types of addresses 
	till a match occurs
	Fixes #58701
  
2004-07-16  Chris Toshok  <toshok@ximian.com>

	[ fixes #61052 ]
	
	* libebook/e-book.c (e_book_op_remove): lock the book's mutex
	around operations on the id_to_op hashtable, as is done in all
	other e_book_* functions.
	(emit_async_add_contact_response): lock the book's mutex around
	operations on the pending_idle list.
	(e_book_response_add_contact): same.
	(emit_async_elist_response): same.
	(e_book_response_get_supported_fields): same.
	(e_book_response_get_supported_auth_methods): same.
	(emit_async_get_contact_response): same.
	(e_book_response_get_contact): same.
	(emit_async_get_book_view_response): same.
	(e_book_response_get_book_view): same.
	(emit_async_get_contacts_response): same.
	(e_book_response_get_contacts): same.
	(emit_async_get_changes_response): same.
	(e_book_response_get_changes): same.
	(emit_async_generic_response): same.
	(e_book_response_generic): same.
	(emit_async_open_response): same.
	(e_book_response_open): same.
	(e_book_response_remove): same.
	
2004-07-14  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book.c (e_book_idle_writable): simplify this a bit,
	since we don't need to pass the writable state in a closure - we
	can just get it from the book.  also wrap stuff up in a mutex
	since we can get multiple report_writable calls from a backend.
	(e_book_handle_response): make sure we only have 1 idle call at a
	time going, and simplify the closure passing to be just the EBook.
	same with the mutex juju.
	(e_book_dispose): remove the writable idle callback if there is
	one registered.

2004-07-13  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book.c (e_book_get_self): only propagate the GError
	if @error != NULL.  Fixes some console warnings.
	(e_book_set_default_source): same.
	(e_book_new_system_addressbook): same.
	(e_book_new_default_addressbook): same.

2004-07-13  Chris Toshok  <toshok@ximian.com>

	[ fixes #58639 ]
	
	* libebook/e-book-listener.c (impl_BookListener_respond_get_view):
	no need to wrap the g_signal_emit with dup_ref/release_unref.  the
	construct for EBookView does a dup_ref of its own.

	* libedata-book/e-data-book-view.c
	(e_data_book_view_notify_update): don't call
	e_data_book_view_notify_remove when the pending_mutex is already
	called.  call notify_remove directly.
	
2004-07-09  Chris Toshok  <toshok@ximian.com>

	[ part of fix for #56520 ]
	
	* backends/groupwise/e-book-backend-groupwise.c
	(e_book_backend_groupwise_get_static_capabilities): add
	"contact-lists".

	* backends/vcf/e-book-backend-vcf.c
	(e_book_backend_vcf_get_static_capabilities): add "contact-lists".

	* backends/file/e-book-backend-file.c
	(e_book_backend_file_get_static_capabilities): add
	"contact-lists".

2004-07-03  Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c 
	(book_view_thread) : fix the problem
	of returning from the fucntion without singalling the
	parent thread when cnc is null. A probable fix for #60947
	Also send the query to server when summary is not present
	(build_summary), (update_summary) : set priv->is_summary_ready 
	to TRUE when summary loading is done  
	 
2004-06-26  Chris Toshok  <toshok@ximian.com>

	* backends/ldap/e-book-backend-ldap.c (get_ldap_library_info): use
	ldap_unbind_ext_s.
	(e_book_backend_ldap_connect): same.
	(e_book_backend_ldap_dispose): unbind our LDAP* when we're shut
	down.

	* libedata-book/e-data-book-view.h: add prototype for
	e_data_book_view_set_thresholds.

2004-06-24  Hans Petter Jansson  <hpj@ximian.com>

	See bug #51127.

	* backends/vcf/e-book-backend-vcf.c (e_book_backend_vcf_load_source):
	Don't add a default vcard to new books.

	* backends/file/e-book-backend-file.c
	(e_book_backend_file_load_source): Don't add default vcard to new
	books.

2004-06-23  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book.c (e_book_response_add_contact): ref in the
	assignment.
	(e_book_response_get_supported_fields): same.
	(e_book_response_get_supported_auth_methods): same.
	(emit_async_get_contact_response): unref the book before
	returning.
	(e_book_response_get_contact): ref the book in the assignment.
	(emit_async_get_book_view_response): unref the book before
	returning.
	(e_book_response_get_book_view): ref the book in the assignment.
	(e_book_response_get_contacts): same.
	(emit_async_get_changes_response): unref the book before
	returning.
	(e_book_response_get_changes): ref the book in the assignment.
	(emit_async_generic_response): we ref before registering the idle
	handler.
	(e_book_response_generic): ref the book in the assignment.
	(emit_async_open_response): unref the book before returning
	(e_book_response_open): ref the book in the assignment.
	(e_book_response_remove): same.

2004-06-23  Hans Petter Jansson  <hpj@ximan.com>

	* libebook/e-book.c (emit_async_generic_response): Keep a ref on
	the book while we're accessing it, since the callback might unref
	it to zero, causing a crash.

2004-06-22  Chris Toshok  <toshok@ximian.com>

	* libedata-book/e-data-book-view.c
	(e_data_book_view_set_thresholds): allow consumers of
	EDataBookView to control the thresholds used in aggregating
	contacts before sending them to the gui.  allows us to implement
	the different thresholds that were used in the 1.4.x ldap and file
	backends.

	* libedata-book/e-data-book-view.h: add prototype for
	e_data_book_view_set_thresholds.

2004-06-21  Chris Toshok  <toshok@ximian.com>

	* backends/ldap/e-book-backend-ldap.c
	(e_book_backend_ldap_search): clamp the search result limit to the
	ldap backend's limit.

2004-06-21  Chris Toshok  <toshok@ximian.com>

	* libebook/e-contact.c (e_contact_get_const): reorder some stuff
	so we only generate 1 free per string on object destruction.

2004-06-21  Chris Toshok  <toshok@ximian.com>

	* libebook/e-contact.c (e_contact_get_const): cache the most
	recently fetched const pointer so we can hand it out more than
	once (unless there's an intervening _set).  Should substantially
	lessen the number of allocations we do because of this function.
	(e_contact_set): clear the cached slot for this field, so we'll
	allocate/return a new const string from e_contact_get_const.

2004-06-18  Chris Toshok  <toshok@ximian.com>

	[ fixes #59978 ]
	
	* backends/ldap/e-book-backend-ldap.c (photo_ber): implement
	(photo_compare): same.
	(prop_info): set add ber/compare functions for E_CONTACT_PHOTO.

2004-06-18  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book.c (e_book_new_system_addressbook): "oops".

2004-06-18  Chris Toshok  <toshok@ximian.com>

	[ fixes #57628 ]
	
	* libebook/e-book.c (e_book_new_system_addressbook): use the
	new_default_addressbook model, and search for a property on
	sources (system=true).  If we find one, use that source, otherwise
	default to ~/.evolution/local/system.

2004-06-17  Chris Toshok  <toshok@ximian.com>

	* tests/ebook/test-ebook-async.c: down with e-book-async.h, up
	with e-book.h.

	* libedata-book/e-data-book.h: add @opid args to all the
	e_data_book_respond* functions.

	* libedata-book/e-data-book.c
	(impl_GNOME_Evolution_Addressbook_Book_open): add @opid arg and
	pass it on.
	(impl_GNOME_Evolution_Addressbook_Book_remove): same.
	(impl_GNOME_Evolution_Addressbook_Book_getContact): same.
	(impl_GNOME_Evolution_Addressbook_Book_getContactList): same.
	(impl_GNOME_Evolution_Addressbook_Book_authenticateUser): same.
	(impl_GNOME_Evolution_Addressbook_Book_addContact): same.
	(impl_GNOME_Evolution_Addressbook_Book_removeContacts): same.
	(impl_GNOME_Evolution_Addressbook_Book_modifyContact): same.
	(impl_GNOME_Evolution_Addressbook_Book_getBookView): same.
	(impl_GNOME_Evolution_Addressbook_Book_getChanges): same.
	(impl_GNOME_Evolution_Addressbook_Book_getSupportedFields): same.
	(impl_GNOME_Evolution_Addressbook_Book_getSupportedAuthMethods): same.
	(e_data_book_respond_open): same.
	(e_data_book_respond_remove): same.
	(e_data_book_respond_create): same.
	(e_data_book_respond_remove_contacts): same.
	(e_data_book_respond_modify): same.
	(e_data_book_respond_authenticate_user): same.
	(e_data_book_respond_get_supported_fields): same.
	(e_data_book_respond_get_supported_auth_methods): same.
	(e_data_book_respond_get_book_view): same.
	(e_data_book_respond_get_contact): same.
	(e_data_book_respond_get_contact_list): same.
	(e_data_book_respond_get_changes): same.

	* libedata-book/e-book-backend.h: add @opid args everywhere.

	* libedata-book/e-book-backend.c (e_book_backend_open): add @opid
	arg, and pass it along to the backend subclass, as well as all
	calls to e_data_book_respond_*.
	(e_book_backend_remove): same.
	(e_book_backend_create_contact): same.
	(e_book_backend_remove_contacts): same.
	(e_book_backend_modify_contact): same.
	(e_book_backend_get_contact): same.
	(e_book_backend_get_contact_list): same.
	(e_book_backend_start_book_view): same.
	(e_book_backend_stop_book_view): same.
	(e_book_backend_get_changes): same.
	(e_book_backend_authenticate_user): same.
	(e_book_backend_get_supported_fields): same.
	(e_book_backend_get_supported_auth_methods): same.

	* libedata-book/e-book-backend-sync.h: add @opid args everywhere.

	* libedata-book/e-book-backend-sync.c
	(e_book_backend_sync_create_contact): add @opid arg and pass it
	along to subclass.
	(e_book_backend_sync_remove): same.
	(e_book_backend_sync_remove_contacts): same.
	(e_book_backend_sync_modify_contact): same.
	(e_book_backend_sync_get_contact): same.
	(e_book_backend_sync_get_contact_list): same.
	(e_book_backend_sync_get_changes): same.
	(e_book_backend_sync_authenticate_user): same.
	(e_book_backend_sync_get_supported_fields): same.
	(e_book_backend_sync_get_supported_auth_methods): same.
	(_e_book_backend_remove): same.
	(_e_book_backend_create_contact): same.
	(_e_book_backend_remove_contacts): same.
	(_e_book_backend_modify_contact): same.
	(_e_book_backend_get_contact): same.
	(_e_book_backend_get_contact_list): same.
	(_e_book_backend_get_changes): same.
	(_e_book_backend_authenticate_user): same.
	(_e_book_backend_get_supported_fields): same.
	(_e_book_backend_get_supported_auth_methods): same.

	* libebook/e-book.c (struct EBookOp): augment this structure with
	enough info to handle the asynchronous operations.
	(struct _EBookPrivate): remove the current_op pointer and add a
	hashtable mapping ids to ops.  The current sync op is always id 0.
	(e_book_new_op): add @sync arg.
	(e_book_get_op): add @opid arg, and look up the op in the
	hashtable.
	(e_book_get_current_sync_op): convenience function to lookup the
	current sync op.
	(e_book_op_remove): remove the op from the hashtable.
	(do_add_contact): split out all the code from e_book_add_contact
	here, and make it handle both synchronous and async calling
	sequences.
	(e_book_add_contact): call do_add_contact.
	(e_book_async_add_contact): same.
	(e_book_response_add_contact): handle both sync/async ops.  sync =
	notify on our cvar and return.  async = add idle handler that will
	call the op's callback.
	(emit_async_add_contact_response): idle handler for adding
	contacts asynchronously.
	(do_commit_contact): same pattern as above...
	(do_get_supported_fields): same.
	(do_get_supported_auth_methods): same.
	(do_authenticate_user): same.
	(do_get_contact): same.
	(do_remove_contacts): same.
	(do_get_book_view): same.
	(do_get_contacts): same.
	(do_get_changes): same.
	(do_open): same.
	(do_remove): same.

	* libebook/e-book.h: move all the async api foo here.

	* libebook/e-book-listener.h (struct _EBookListenerResponse): add
	opid slot.

	* libebook/e-book-listener.c
	(impl_BookListener_respond_create_contact): add @opid arg and add
	it to the response struct.
	(impl_BookListener_respond_remove_contacts): same.
	(impl_BookListener_respond_modify_contact): same.
	(impl_BookListener_respond_get_contact): same.
	(impl_BookListener_respond_get_contact_list): same.
	(impl_BookListener_respond_get_view): same.
	(impl_BookListener_respond_get_changes): same
	(impl_BookListener_respond_open_book): same.
	(impl_BookListener_respond_remove_book): same.
	(impl_BookListener_respond_authentication_result): same.
	(impl_BookListener_respond_get_supported_fields): same.
	(impl_BookListener_respond_get_supported_auth_methods): same.

	* libebook/Makefile.am (libebook_la_SOURCES): remove
	e-book-async.c
	(libebookinclude_HEADERS): remove e-book-async.h

	* idl/Evolution-DataServer-Addressbook.idl: add opid args to all
	the oneway void Book methods, and to all the responses in
	BookListener.

	* backends/vcf/e-book-backend-vcf.c
	(e_book_backend_vcf_create_contact)
	(e_book_backend_vcf_remove_contacts)
	(e_book_backend_vcf_modify_contact)
	(e_book_backend_vcf_get_contact)
	(e_book_backend_vcf_get_contact_list)
	(e_book_backend_vcf_authenticate_user)
	(e_book_backend_vcf_get_supported_fields): add @opid arg.
	(init_closure): make this more like the file:// backend.
	(closure_destroy): free the cvar.
	(book_view_thread): move the search code into another thread.
	(e_book_backend_vcf_start_book_view): steal this from the file
	backend.
	(e_book_backend_vcf_stop_book_view): same.

	* backends/ldap/e-book-backend-ldap.c (struct LDAPOp): add opid.
	(ldap_op_add): add @opid arg.
	(create_contact_handler): use op->opid in calls to
	e_data_book_respond_*.
	(e_book_backend_ldap_create_contact): same.
	(remove_contact_handler): same.
	(e_book_backend_ldap_remove_contacts): same.
	(modify_contact_modify_handler): same.
	(modify_contact_search_handler): same.
	(e_book_backend_ldap_modify_contact): same.
	(get_contact_handler): same.
	(e_book_backend_ldap_get_contact): same.
	(contact_list_handler): same.
	(e_book_backend_ldap_get_contact_list): same.
	(e_book_backend_ldap_authenticate_user): same.
	(e_book_backend_ldap_get_supported_fields): same.
	(e_book_backend_ldap_get_supported_auth_methods): same.
	(e_book_backend_ldap_get_changes): add @opid arg.
	(e_book_backend_ldap_remove): same.

	* backends/groupwise/e-book-backend-groupwise.c
	(e_book_backend_groupwise_create_contact)
	(e_book_backend_groupwise_remove_contacts)
	(e_book_backend_groupwise_modify_contact)
	(e_book_backend_groupwise_get_contact)
	(e_book_backend_groupwise_get_contact_list)
	(e_book_backend_groupwise_get_changes)
	(e_book_backend_groupwise_authenticate_user)
	(e_book_backend_groupwise_get_supported_fields)
	(e_book_backend_groupwise_get_supported_auth_methods)
	(e_book_backend_groupwise_remove): : add @opid arg, and pass it to
	e_data_book_respond_* functions.

	* backends/file/e-book-backend-file.c
	(e_book_backend_file_create_contact)
	(e_book_backend_file_remove_contacts)
	(e_book_backend_file_modify_contact)
	(e_book_backend_file_get_contact)
	(e_book_backend_file_get_contact_list)
	(e_book_backend_file_get_changes)
	(e_book_backend_file_authenticate_user)
	(e_book_backend_file_get_supported_fields)
	(e_book_backend_file_remove): add @opid arg.

2004-06-16  Not Zed  <NotZed@Ximian.com>

	* backends/groupwise/e-book-backend-groupwise.c
	(e_book_backend_groupwise_cancel_operation): implement, noop
	currently.  Saves an assert exploding the server.

	* backends/ldap/e-book-backend-ldap.c
	(e_book_backend_ldap_cancel_operation): implement.
	(ldap_cancel_op): cancel each operation synchronously (?).
	Related to #56479.

2004-06-15 Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c 
	(populate_contact_members) : set EVC_X_DEST_CONTACT_UID
	EVC_X_DEST_NAME parameters also
	(set_members_in_gw_item) : read the uid's of contacts
	and use them instead of searching based on email values
	
 
2004-06-09  Chris Toshok  <toshok@ximian.com>

	[ probable fix for #58803 ]
	
	* backends/ldap/e-book-backend-ldap.c (ldap_search_handler):
	remove the ref/unref of the book view here.
	(e_book_backend_ldap_search): move the dup_ref of the book view
	here.
	(ldap_search_dtor): and the release_unref to here.

2004-06-09  Chris Toshok  <toshok@ximian.com>

	* backends/ldap/e-book-backend-ldap.c (ldap_search_dtor): we don't
	need to lock/unlock the view's mutex anymore.

2004-06-07  Chris Toshok  <toshok@ximian.com>

	[ fixes bug #58606 ]
	
	* libebook/e-vcard.c (read_attribute_params): actually do what the
	commend above this block says - if there aren't values, free the
	parameter and skip past the character (unless it's a :).

2004-06-03 Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c
	(update_summary) : new function to update the summary after
	getting the changes from server
	
2004-06-01 Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c
	(e_book_backend_groupwise_remove_contacts) : use the new
	e_gw_connection_remove_items which removes all the items form the
	server at once instead of sending one request for each item

2004-05-28 Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c
	( e_book_backend_groupwise_authenicate_user) : form the summary
	(e_book_backend_groupwise_start_book_view),
	(e_book_backend_groupwise_get_contact_list) : search over the
	summary to get ids and retrieve those items from the summary

2004-05-25 Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c
	(e_book_backend_groupwise_load_source) : port is no longer part of
	uri, read it from e-source
	(set_memebers_in_groupwise_item) : compare emails with ignore case
	fixes #58888

2004-05-25  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book-query.c (e_book_query_to_string): encode the
	values we place in the sexp.

2004-05-20  Chris Toshok  <toshok@ximian.com>

	[ fixes bug #58495 ]
	
	* libebook/e-book-async.c (worker): this is now a thread pool
	function, so there's no to_worker_queue to pop things off of.
	(init_async): create the thread pool with MAX_WORKERS threads
	maximum.
	(e_book_async_open, e_book_async_get_supported_fields)
	(e_book_async_get_supported_auth_methods)
	(e_book_async_authenticate_user, e_book_async_get_contact)
	(e_book_async_remove_contacts, e_book_async_add_contact)
	(e_book_async_commit_contact, e_book_async_get_book_view)
	(e_book_async_get_contacts): use g_thread_pool_push here.

2004-05-19  Chris Toshok  <toshok@ximian.com>

	* tests/ebook/*.c: port to new e_book_new/e_book_open apis.
	
	* libebook/e-book-types.h (EBookStatus): URI -> SOURCE.

	* libebook/e-book-async.c (e_book_async_open): new function,
	mostly the same as e_book_async_load_source was.
	(e_book_async_load_local_addressbook, e_book_async_load_source,
	e_book_async_load_uri, e_book_async_get_default_addressbook):
	nuke.
	
	* libebook/e-book-async.h: remove prototypes for
	e_book_async_load_uri/source/local_address, and
	e_book_async_get_default_addressbook.

	* libebook/e-book.c (EBookLoadState): URI -> SOURCE.
	(e_book_add_contact): URI -> SOURCE, and "e_book_load_uri" ->
	"e_book_open"
	(e_book_commit_contact): same.
	(e_book_get_supported_fields): same.
	(e_book_get_supported_auth_methods): same.
	(e_book_authenticate_user): same.
	(e_book_get_contact): same.
	(e_book_remove_contacts): same.
	(e_book_get_book_view): same.
	(e_book_get_contacts): same.
	(e_book_get_changes): same.
	(e_book_open): new function, mostly split out from the old
	contents of fetch_corba_book.  call Book::open here.
	(e_book_remove): we no longer require the book is loaded here, as
	the source (and corba book) is associated at e_book_new time.
	(e_book_unload_uri): URI -> SOURCE.
	(backend_died_cb): same.
	(fetch_corba_book): split out roughly half of the inner loop (the
	part that calls Book::open).  This does nothing more than find a
	factory that will hand us a reference to a corba book.
	(e_book_load_source, e_book_load_uri,
	e_book_load_local_addressbook, e_book_get_default_addressbook):
	nuke.
	(e_book_get_static_capabilities): URI -> SOURCE.
	(e_book_get_self): use new e_book_new* api.
	(e_book_set_default_addressbook): URI -> SOURCE.
	(e_book_new): set the source and call fetch_corba_book here.
	(e_book_new_from_uri): new function, implement in terms of the new
	e_book_new.
	(e_book_new_system_addressbook): new function, implement in terms
	of e_book_new_from_uri.
	(e_book_new_default_addressbook): new function, implement in terms
	of the new e_book_new.
	(e_book_init): URI -> SOURCE.
	(e_book_dispose): same.

	* libebook/e-book.h: rework the e_book_new_* api to be more like
	the calendar.  gone is the constructor with no args.  now you
	associate a source/uri/etc with an ebook at creation time.  Also,
	add e_book_open, and remove all the e_book_load_* calls.

2004-05-19  Hans Petter Jansson  <hpj@ximian.com>

	* backends/ldap/e-book-backend-ldap.c (add_to_supported_fields):
	Add EMAIL_4 field.
	(email_ids): Add EMAIL_4.
	(email_populate): Ditto.
	(email_ber): Ditto.

	* libebook/e-contact.c (field_info): Add EMAIL_4 field.

	* libebook/e-contact.h: Add EMAIL_4 field.

	* libedata-book/e-book-backend-sexp.c (compare_email): Add
	EMAIL_4.

	* libedata-book/e-book-backend-summary.c: Add EMAIL_4 to structs,
	bump version to 5000 (5.0).
	(free_summary_item): Add EMAIL_4.
	(e_book_backend_summary_load_item): Ditto.
	(e_book_backend_summary_save_item): Ditto.
	(e_book_backend_summary_add_contact): Ditto.
	(do_compare): Ditto.
	(e_book_backend_summary_get_summary_vcard): Ditto.

2004-05-18  Chris Toshok  <toshok@ximian.com>

	[ fixes #58522, and some other misc update problems ]
	
	* libedata-book/evolutionperson.schema: make both evolutionPerson
	and evolutionPersonList AUXILIARY classes, so they can be added to
	inetOrgPerson objects in openldap 2.1.x+ servers.

	* backends/ldap/e-book-backend-ldap.c (free_mods): guard against
	mod->mod_bvalues/mod->mod_values being NULL... this shouldn't ever
	happen, but it seem to, and is causing a crash.
	(category_ber): simpler check to see if there are categories - get
	the CATEGORIES property and check if it's NULL/0-length.

	* libebook/e-contact.c (e_contact_set_property): remove the
	CATEGORIES attribute if the string is empty or NULL, and do the
	same for non-synthetic string attributes.

2004-05-18 Sivaiah Nallagatla <snallagatla@novell.com>

        * backends/groupwise/e-book-backend-groupwise.c (set_members_in_gw_item) :
	make sure not to add more than one item id for single email
	Fixes #58369
	(set_organization_in_gw_item) (set_organization_changes_in_gw_item) :
	new functions to add organization field  le storing  contact on server
	Fixes #57846

2004-05-17  Rodney Dawes  <dobey@ximian.com>

	* libebook/Makefile.am (libebook_la_LIBADD):
	* libedata-book/Makefile.am (libedata_book_la_LIBADD):
	Add $(EVOLUTION_ADDRESSBOOK_LIBS) to link to all the right dependencies
	so that the mono bindings will work correctly

	Fixes #58615

2004-05-17  Chris Toshok  <toshok@ximian.com>

	[ fixes bug #57505 ]
	
	* backends/ldap/e-book-backend-ldap.c (category_ber): only include
	category list elements in the ber if they're non-empty.
	(category_compare): don't free the const char*'s.
	(address_ber): make static.
	(add_to_supported_fields): make sure "categories" gets included in
	the list if we support "category_list", since the contact editor
	uses the former, not the latter (and they're really the same thing
	as far as the backend is concerned.)

2004-05-10 Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c (populate_ims) :
	if im does not correspond to one supported in evo, ignore it 
	fixes #58262 

2004-05-04  Sivaiah Nallagatla <snallagatla@novell.com>
	
	* backends/groupwise/e-book-backend-groupwise.c (populate_ims) :
	set type paraemter with value as WORK on attributes while setting ims in 
	contact so that they appear in preview pane
	(free_attr_list) : new function to free list of attributes
	fixes #56776 
	
	
2004-05-03  William Jon McCann  <mccann@jhu.edu>

	* addressbook/libebook/e-address-western.h:
	* addressbook/libebook/e-contact.h:
	* addressbook/libebook/e-name-western-tables.h:
	* addressbook/libebook/e-name-western.h:
	* addressbook/libebook/e-vcard.h:
	* addressbook/libedata-book/e-book-backend-sexp.h:
	* addressbook/libedata-book/e-book-backend-summary.h:
	* addressbook/libedata-book/e-book-backend-sync.h:
	* addressbook/libedata-book/e-book-backend.h:
	* addressbook/libedata-book/e-data-book-types.h:
	* addressbook/libedata-book/e-data-book-view.h:
	* addressbook/libedata-book/e-data-book.h:
	Add missing G_BEGIN_DECLS and G_END_DECLS

2004-05-02  Chris Toshok  <toshok@ximian.com>

	* libedata-book/e-book-backend-sexp.c (prop_info_table): add
	BLOG_URL, CALENDAR_URI, FREEBUSY_URL, ICS_CALENDAR, and VIDEO_URL.

	* libedata-book/e-book-backend-summary.c (check_symbols): add
	"exists".

2004-04-28  Sivaiah Nallagatla <snallagatla@novell.com>
	
	* backends/groupwise/e-book-backend-groupwise.c 
	(set_member_changes) : new function added to apply changes 
	in the contact-list on server 	
	
2004-04-27  Jeffrey Stedfast  <fejj@ximian.com>

	* backends/file/e-book-backend-file.c
	(e_book_backend_file_changes_foreach_key): Revert yesterday's
	changes.

2004-04-26  Jeffrey Stedfast  <fejj@ximian.com>

	* backends/file/e-book-backend-file.c
	(e_book_backend_file_changes_foreach_key): Updated to take 3
	arguments (change to e_dbhash_foreach_key).

2004-04-23  Chris Toshok  <toshok@ximian.com>

	* backends/ldap/e-book-backend-ldap.c
	(e_book_backend_ldap_connect): always set the protocol level to 3
	first (even if we're not doing TLS/SSL) so we can attempt a v3
	bind before falling back to the v2 bind.

2004-04-22  Sivaiah Nallagatla <snallagatla@novell.com>
	
	* backends/groupwise/e-book-backend-groupwise.c
	(populate_contact_members) : set the emails using EVC_X_DEST_EMAIL
	parameter

2004-04-21  Chris Toshok  <toshok@ximian.com>

	* libebook/e-contact.c (E_CONTACT_COMPANY): make this an
	ATTR_TYPE_STR field, using EVC_X_COMPANY as the TYPE.

	* libebook/e-vcard.h (EVC_X_COMPANY): add new parameter type.

2004-04-21  Chris Toshok  <toshok@ximian.com>

	* libebook/e-contact.c (photo_setter): setters aren't called with
	NULL data anymore.
	(fn_setter): same.
	(n_setter): same.
	(adr_setter): same.
	(date_setter): same.
	(cert_setter): same.
	(e_contact_set_property): only call struct_setter if the data is
	non-NULL and non-empty.  otherwise remove the newly created
	attribute.

	* libebook/e-book-view-listener.h: doh, really add _start
	prototype.

	* libebook/e-book-query.c (func_exists): new function - we weren't
	parsing the "exists" query before, so duplicating a query
	containing one failed (duplication = unparse + parse).

	* libebook/e-book-listener.c (impl_BookListener_respond_get_view):
	don't rely on bonobo_object_dup_ref returning the same object.

2004-04-21  Sivaiah Nallagatla <snallagatla@novell.com>
	* backends/groupwise/e-book-backend-groupwise.c 
	(e_book_backend_groupwise_load_source) : change the separtor used between uri
        and book name to ';' from '?'
 
2004-04-20  Chris Toshok  <toshok@ximian.com>

	* tests/ebook/Makefile.am: add test-nonexistent-id and test-query.
	
	* tests/ebook/test-nonexistent-id.c: test for both
	e_book_remove_contact (which was broken until recently) and the
	behavior of libebook when you try to remove a non-existent id.

	* tests/ebook/test-query.c: new test, to see if we correctly
	unparse/parse queries.

2004-04-19  Sivaiah Nallagatla   <snallagatla@novell.com>
	* e-book-backend-groupwise.c  (book_view_thread) : the start_ 
	book_view implementation is moved this method and executed in a separate thread
	(e_book_backend_groupwise_start_book_view) : start the new thread for getting book view
	(e_book_backend_groupwise_stop_book_view ) : set the stopped closure
        field to TRUE and join on the thread.
	(e_book_backend_groupwise_load_source) : change the separtor used between uri 
	and book name to ';' from '?'


2004-04-17  Hans Petter Jansson  <hpj@ximian.com>

	* libebook/e-vcard.c (e_vcard_remove_attributes): Don't pass NULL
	attr_group on to string comparison function.
	(e_vcard_escape_string)
	(e_vcard_attribute_new): Separate variable initialization from
	declaration.
	(e_vcard_unescape_string)
	(e_vcard_new_from_string)
	(e_vcard_to_string_vcard_30)
	(e_vcard_dump_structure)
	(e_vcard_attribute_new)
	(e_vcard_attribute_free)
	(e_vcard_remove_attribute)
	(e_vcard_add_attribute)
	(e_vcard_add_attribute_with_value)
	(e_vcard_add_attribute_with_values)
	(e_vcard_attribute_add_values)
	(e_vcard_attribute_remove_values)
	(e_vcard_attribute_param_free)
	(e_vcard_attribute_param_copy)
	(e_vcard_attribute_add_param)
	(e_vcard_attribute_param_add_value)
	(e_vcard_attribute_param_add_values)
	(e_vcard_attribute_add_param_with_value)
	(e_vcard_attribute_add_param_with_values)
	(e_vcard_attribute_param_remove_values)
	(e_vcard_get_attributes)
	(e_vcard_attribute_get_group)
	(e_vcard_attribute_get_name)
	(e_vcard_attribute_get_values)
	(e_vcard_attribute_get_values_decoded)
	(e_vcard_attribute_is_single_valued)
	(e_vcard_attribute_get_value)
	(e_vcard_attribute_get_value_decoded)
	(e_vcard_attribute_has_type)
	(e_vcard_attribute_param_get_name)
	(e_vcard_attribute_param_get_values)
	(_evc_base64_encode_simple)
	(_evc_base64_decode_simple): Insert preconditions.

2004-04-16  Chris Toshok  <toshok@ximian.com>

	* backends/ldap/e-book-backend-ldap.c
	(e_book_backend_ldap_start_book_view): remove the race prevention
	stuff from here, since we set up everything before returning and
	we know that stop_book_view won't be called before we return.
	(e_book_backend_ldap_stop_book_view): same.

	* backends/file/e-book-backend-file.c (FileBackendSearchClosure):
	add slots for a GCond and GThread, as well as for our backend
	here.
	(closure_destroy): destroy the cvar.
	(init_closure): init the cvar, thread, and backend slots.
	(book_view_thread): new function - this contains the majority of
	the code in the old ::start_book_view, except it lacks any of the
	race prevention code, which it no longer needs.  We use the cvar
	to keep the ::start_book_view thread waiting until the view is
	actually set up and is about to enter the loop, so we know that
	the search closure has been initialized.
	(e_book_backend_file_start_book_view): start up the
	book_view_thread with the closure's mutex locked so it'll pause
	until we wait on the condition variable.  by the time we return
	from this method we know the book view thread has started and is
	at the point where the loop starts.
	(e_book_backend_file_stop_book_view): set the stopped closure
	field to TRUE and join on the thread.  remove all the race
	prevention code from here too.  yay.

	* libedata-book/e-data-book-view.c (e_data_book_view_new): switch
	from PER_REQUEST to PER_OBJECT.  This means that all requests are
	serialized per object, but come in on a thread specific to this
	object.
	(e_data_book_view_dispose): destroy the id's hash table.

	* libebook/e-book-view.c (e_book_view_start): start our
	EBookViewListener.
	(e_book_view_stop): stop the listener.

	* libebook/e-book-view-listener.h: add prototypes for
	e_book_view_listener_start and _stop.

	* libebook/e-book-view-listener.c
	(impl_BookViewListener_notify_contacts_added): add the thread id
	to the spew.
	(impl_BookViewListener_notify_contacts_removed): same.
	(impl_BookViewListener_notify_contacts_changed): same.
	(impl_BookViewListener_notify_sequence_complete): same.
	(impl_BookViewListener_notify_progress): same.
	(e_book_view_listener_init): we start off in a stopped state.
	(e_book_view_listener_start): new function - set stopped to FALSE.
	The next message queued will create the idle handler.
	(e_book_view_listener_stop): remove the idle handler and set
	stopped to TRUE - this will cause all _queue_message calls to drop
	the messages.

	* libebook/e-contact.c (struct _EContactPrivate): add "int
	padding", just so that g_new (EContactPrivate, 1) doesn't return
	NULL.
	(e_contact_dispose): similar change to e-vcard's dispose method.
	don't return early if ->priv == NULL, as we need to chain up to
	the parent's dispoes method.  this and/or the struct
	_EContactPrivate change plug a memory leak as well that was
	causing the EVCardPrivate to go unfreed.

	* libebook/e-vcard.c (e_vcard_dispose): don't return if evc->priv
	is NULL - we still need to chain up the parent's dispose method.

2004-04-15  Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c 
	(set_categories_in_gw_item): store only that part of id which is before '@'
	symbol

2004-04-14  Chris Toshok  <toshok@ximian.com>

	* libebook/e-contact.c (e_contact_set_property): remove the
	MULTI_ELEM attribute if the string is NULL or empty.  This keeps
	us from writing out empty EMAIL attributes.

2004-04-14  Chris Toshok  <toshok@ximian.com>

	[ fixes part of bug #55776 ]
	
	* backends/ldap/e-book-backend-ldap.c
	(e_book_backend_ldap_remove): new method, we need this or else
	e-d-s exits when you try to remove an LDAP addressbook.
	(e_book_backend_ldap_class_init): hook up
	EBookBackendClass::remove.

2004-04-14  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book.c (e_book_remove_contact): fix deadlock when
	calling this function - there's no reason to lock the book's mutex
	here, as all we do is build a list and call
	e_book_remove_contacts, which does the locking.  Fixes
	gnomemeeting's e-d-s problem.

2004-04-14  Chris Toshok  <toshok@ximian.com>

	* backends/file/e-book-backend-file.c
	(e_book_backend_file_remove): fix c&p error, unlink filename and
	summary_filename, not filename twice.

2004-04-10  Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c 
	(e_book_backend_groupwise_load_source) : retrieve the book name form uri instead 
	of e-source
	(set_members_in_gw_item) : new function to set the ids of contact-list members into 
	e-gw-item 

2004-04-07  Chris Toshok  <toshok@ximian.com>

	* libebook/e-vcard.h: reorder the EVC_X #defines a bit, and add in
	all he EVC_X_DEST_* #defines (for use with the new EDestination
	stuff.)

2044-04-07  Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c (func_is) :
	Correct a small type in field name  FullName -> fullName
	 
2004-04-06  Chris Toshok  <toshok@ximian.com>

	* backends/ldap/e-book-backend-ldap.c (struct
	_EBookBackendLDAPPrivate): add a mutex around our it_to_op
	GHashTable.
	(struct _EBookBackendLDAPCursorPrivate): nuke.
	(view_destroy): lock around access to id_to_op.
	(add_to_supported_fields): plug leak (don't strdup the arg to
	g_hash_table_lookup.)
	(query_ldap_root_dse): fix c&p bugs with
	supported_fields/supported_auth_methods.
	(e_book_backend_ldap_connect): add a check for
	LDAP_PARTIAL_RESULTS (which is apparently what certain versions of
	GWIA's ldap returns when we try a root dse query.)  Also, try a v2
	bind if the v3 bind fails.
	(ldap_op_add): lock access to id_to_op hash.
	(ldap_op_finished): same.
	(create_contact_handler): add more debug spew (additional ldap
	error info.)
	(remove_contact_handler): same.
	(modify_contact_modify_handler): same.
	(modify_contact_search_handler): same.
	(get_contact_handler): same.
	(contact_list_handler): same.
	(poll_ldap): lock around id_to_op.
	(ldap_search_handler): add more spew, and just use view instead of
	search_op->view.
	(ldap_search_dtor): lock the book view's mutex here, and clear the
	::search_op g_object_data.
	(e_book_backend_ldap_search): set the book view's ::search_op.
	(e_book_backend_ldap_start_book_view): add race detection with
	::stop here.
	(e_book_backend_ldap_stop_book_view): same.
	(e_book_backend_ldap_load_source): make the default for
	unrecognized ssl type "NO" instead of "WHENEVER".
	(e_book_backend_ldap_dispose): lock access to id_to_op while we
	destroy it, and free our mutex.  also free up some additional
	private data we were leaking before (the ->ldap_host,
	->ldap_rootdn).
	(e_book_backend_ldap_init): init the mutex.

2004-04-06  Chris Toshok  <toshok@ximian.com>

	* backends/file/e-book-backend-file.c (create_contact): new
	function, for use when creating a contact from the db.  all the
	libedata-book machinery depends on the contact having a UID, so if
	it doesn't have one (i.e. it's been corrupted), set it to be the
	uid we pass in (the db key).
	(build_summary): use create_contact
	(e_book_backend_file_start_book_view): same.
	(e_book_backend_file_get_changes): same.
	(e_book_backend_file_upgrade_db): same.
	(e_book_backend_file_load_source): add lots more g_warning spew in
	the event the load fails.

2004-04-05  Sivaiah Nallagatla <snallagatla@novell.com>
	
	* e-book-backend-groupwise.c : added code to build groupwise filter from 
	the query passed to get_contact_list and start_book_view functions
	modified e_book_backend_groupwise_start_book_view and 
	e_book_backend_groupwise_get_contact_list to make use of filter
	Also included gnome-i8n.h 
	
2004-04-02  Dan Winship  <danw@ximian.com>

	* libedata-book/e-book-backend-sync.c
	(_e_book_backend_create_contact,
	_e_book_backend_remove_contacts,
	_e_book_backend_modify_contact,
	_e_book_backend_get_contact,
	_e_book_backend_get_supported_fields,
	_e_book_backend_get_supported_auth_methods): Don't try to free the
	returned data if the method didn't actually return anything

2004-04-02  JP Rosevear  <jpr@ximian.com>

	* backends/groupwise/Makefile.am: fix includes for builddir != srcdir

2004-03-31  Chris Toshok  <toshok@ximian.com>

	* libebook/e-contact.c (e_contact_get_first_attr): ignore the
	attribute's group.
	(e_contact_set_property): same.
	(e_contact_find_attribute_with_types): same.
	(e_contact_get_property): same.
	(e_contact_get_attributes): same.

	* libebook/e-vcard.c (e_vcard_to_string_vcard_30): ignore the
	attribute's group when looking for VERSION attributes.

2004-03-30  Chris Toshok  <toshok@ximian.com>
 
	[ backend portion of fix for #51977 ]
	* libedata-book/e-book-backend-sexp.c (prop_info_table): category
	-> category_list.

	* libebook/e-contact.c (e_contact_get_property): LIST fields (of
	which there is one, "category_list"), need to duplicate both the
	list and the list elements before returning from ::get_property.
	
2004-03-30  Chris Toshok  <toshok@ximian.com>
 
	[ backend portion of fix for #54528 ]
	* libebook/e-vcard.c (read_attribute_params): deal with vcards
	that specify the encoding as "BASE64", even though this isn't the
	proper encoding type for vcard 3.0 cards (that's 'b').
	
2004-03-30  Chris Toshok  <toshok@ximian.com>

	[ backend portion of fix for #48665 ]
	* libedata-book/e-data-book.c
	(impl_GNOME_Evolution_Addressbook_Book_getBookView): pass
	max_results to e_data_book_view_new.

	* backends/ldap/e-book-backend-ldap.c
	(e_book_backend_ldap_search): pass the book view's @max_results as
	the ldap search limit.

	* libedata-book/e-data-book-view.c (e_data_book_view_new): add
	@max_results and pass it to ::construct.
	(e_data_book_view_construct): add @max_results.
	(e_data_book_view_get_max_results): new function.

	* libedata-book/e-data-book-view.h: add max_results arg to ::new,
	and add prototype for e_data_book_view_get_max_results.

2004-03-30  Chris Toshok  <toshok@ximian.com>

	[ looks like this fixes #55527 ]
	* libedata-book/e-data-book-view.c (e_data_book_view_construct):
	use bonobo_object_dup_ref instead of CORBA_Object_duplicate here.

2004-03-28  Sivaiah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.c : added new functions
	set_categories_in_gw_item and set_categories_changes to store contact 
	categories in gw contacts 

2004-03-19  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book-view-listener.c (main_thread_get_response):
	don't unref the listener in the loop.
	(e_book_view_listener_queue_response): don't ref the listener for
	every request.
	(e_book_view_listener_dispose): add some debug spew.

2004-03-18  Chris Toshok  <toshok@ximian.com>

	* tests/ebook/Makefile.am (noinst_PROGRAMS): add test-stress-bookviews.

	* tests/ebook/test-stress-bookviews.c: create and dispose of a ton of
	EBookViews very quickly.  designed to flush out races/problems in
	the way we use bonobo/orbit (and at the time of its writing it
	does show a problem).

2004-03-17  Chris Toshok  <toshok@ximian.com>

	* backends/vcf/e-book-backend-vcf.c (closure_destroy): new
	function, mostly lifted from EBookBackendFile.
	(init_closure): same.
	(get_closure): same.
	(e_book_backend_vcf_start_book_view): mostly copy the file
	backend's start/stop race fixing code.
	(e_book_backend_vcf_stop_book_view): same.
	(e_book_backend_vcf_load_source): create the directory before
	trying to open the database if !only_if_exists.

2004-03-15  Chris Toshok  <toshok@ximian.com>

	* libedata-book/e-data-book.c (e_data_book_respond_create): only
	look up the contact's UID if status == Success.  otherwise, send
	"".

2004-03-15  Rodney Dawes  <dobey@ximian.com>

	* libebook/libebook-1.0.pc.in:
	* libedata-book/libedata-book-1.0.pc.in: Add @LIBBONOBO_REQUIRED@ for
	the libbonobo dependency

2004-03-14  Harish K <kharish@novell.com>
	*  backends/groupwise/e-book-backend-groupwise.c :
	Update calls to e_gw_connection_get_items with the new prototype.

2004-03-12  Chris Toshok  <toshok@ximian.com>

	* libedata-book/e-data-book-view.h: add prototype for
	e_data_book_view_get_mutex.

	* libedata-book/e-data-book-view.c (e_data_book_view_get_mutex):
	new function, return the book view's mutex.
	(e_data_book_view_dispose): free priv->mutex.
	(e_data_book_view_init): init priv->mutex.

	* backends/file/e-book-backend-file.c (closure_destroy):
	GDestroyNotify to clear up the search closure.
	(init_closure): initialize the object data we use to store search
	information (just a "stopped" flag at the moment)
	(get_closure): return the object data.
	(e_book_backend_file_start_book_view): add code to deal with the
	race between start and stop, locking the book_view's mutex around
	the initial get/set of the closure.  also, switch from using
	g_object_ref to bonobo_object_ref on the book_view, and don't do
	any freeing of the search closure here.  it's handled
	automatically for us by virtue of the GDestroyNotify.
	(e_book_backend_file_stop_book_view): flesh this out to fix the
	race between start/stop.

2004-03-12  Chris Toshok  <toshok@ximian.com>

	* libebook/e-contact.c (e_contact_set_property): in the CATEGORIES
	case when we're adding a new attribute to the vcard, make sure to
	call e_vcard_add_attribute after creating it.  also, use
	EVC_CATEGORIES instead of hardcoding the string.
	(e_contact_get_property): use EVC_CATEGORIES.
	
2004-03-12  Chris Toshok  <toshok@ximian.com>

	* tests/ebook/test-categories.c (main): test setting CATEGORIES as
	well as CATEGORY_LIST.

2004-03-09 Sivaioah Nallagatla <snallagatla@novell.com>

	* backends/groupwise/e-book-backend-groupwise.[ch] : added 
	code to compare two e-gw-items and get the changes 
	nd did some code formatting 

2004-03-02  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book-query.h (EBookQueryTest): comment out the
	unsupported query types.

2004-02-26  Chris Toshok  <toshok@ximian.com>

	* libebook/e-contact.h: add
	E_CONTACT_IM_GROUPWISE_{HOME,WORK}_{1,2,3}.

	* libebook/e-contact.c: add attributes
	E_CONTACT_IM_GROUPWISE_{HOME,WORK}_{1,2,3}.

2004-02-25  Chris Toshok  <toshok@ximian.com>

	* libebook/e-vcard.c (e_vcard_attribute_is_single_valued):
	predicate returning TRUE if there's only one value for the
	attribute.
	(e_vcard_attribute_get_value): return the first value in the list,
	if there is one.  also, warn if called on a multi-valued
	attribute.
	(e_vcard_attribute_get_value_decoded): same, but return a GString.
	(e_vcard_attribute_has_type): predicate to check for TYPE=@typestr
	in the parameter list for an attribute.

	* libebook/e-vcard.h: add prototypes for
	e_vcard_attribute_is_single_valued and
	e_vcard_attribute_get_value{_decoded}.  Also, add
	e_vcard_attribute_has_type.

	* libebook/e-contact.h: add prototypes for
	e_contact_{get,set}_attributes, and e_contact_vcard_attribute.

	* libebook/e-contact.c (e_contact_vcard_attribute): new function,
	return the vcard attribute for a given EContactField id.
	(e_contact_get_attributes): get a GList* of EVCardAttributes for
	the given EContactField.  This allows you to get at the parameters
	to the attribute, which you can't get with e_contact_get.
	(e_contact_set_attributes): an analogous setter for
	e_contact_get_attributes.

2004-02-25  Sivaiah Nallagatla  <snallagatla@novell.com>

	* libebook/e-vcard.h : added EVC_X_GROUPWISE definition 
	* libebook/e-contact.[ch] : added E_CONTACT_IM_GROUPWISE field to EContact 
	to store groupwise im ids

2004-02-24  Hans Petter Jansson  <hpj@ximian.com>

	* libebook/e-book-async.c (_default_book_response_dtor): Don't
	unref the *new* book after returning it to user. This was causing
	hard to trace crashes.

	* libebook/e-book.c (e_book_get_default_addressbook): Correctly
	assert the pointer-to-pointer, not the pointed-to pointer.

2004-02-23  Chris Toshok  <toshok@ximian.com>

	* libebook/e-vcard.c (parse): wrap spew in "#define d(x)".
	(e_vcard_attribute_add_value_decoded): same.
	(_evc_base64_encode_close): same.
	(_evc_base64_encode_step): same.

	* libebook/e-contact.c (e_contact_set_property): wrap spew in
	"#define d(x)".
	(e_contact_set): same.
	(e_contact_get_email_list): nuke dead function.

	* libebook/e-book.c (e_book_add_contact): wrap spew in "#define
	d(x)" and reindent.
	(e_book_response_add_contact): same.
	(e_book_response_get_contact): same.
	(e_book_response_get_book_view): same.
	(e_book_response_get_contacts): reindent.
	(e_book_response_get_changes): same.
	(e_book_response_generic): same.
	(e_book_response_open): same.
	(e_book_response_remove): same.

	* libebook/e-book-view-listener.c
	(impl_BookViewListener_notify_contacts_added): wrap spew in
	"#define d(x)".
	(impl_BookViewListener_notify_contacts_removed): same.
	(impl_BookViewListener_notify_contacts_changed): same.
	(impl_BookViewListener_notify_sequence_complete): same.
	(impl_BookViewListener_notify_progress): same.

	* libebook/e-book-listener.c (impl_BookListener_respond_get_view):
	wrap spew in "#define d(x)".

2004-02-23  JP Rosevear <jpr@ximian.com>

	* tests/vcard/Makefile.am: add extra includes for srcdir !=
	builddir

	* tests/ebook/Makefile.am: ditto

	* libedata-book/Makefile.am: ditto

	* libebook/Makefile.am: ditto

	* backends/vcf/Makefile.am: ditto

	* backends/ldap/Makefile.am: ditto

	* backends/file/Makefile.am: ditto

2004-02-23  Chris Toshok  <toshok@ximian.com>

	* tests/ebook/test-search.c: add a utility so we can perform
	searches against addressbooks without having to bring up a gui.

	* tests/ebook/Makefile.am (test_search_LDADD): add.
	(noinst_PROGRAMS): add test-search

2004-02-20  Chris Toshok  <toshok@ximian.com>

	[ fixes bug #53994 ]
	
	* libebook/e-book-query.c (e_book_query_get_type): new function,
	supply e_book_query_copy as the CopyFunc, and e_book_query_unref
	as the FreeFunc.
	(e_book_query_copy): new function, just convert @q to a string and
	reparse it, ala the EVCard copy function.

	* libebook/e-book-query.h: add prototypes for
	e_book_query_get_type and e_book_query_copy.  also add
	E_TYPE_BOOK_QUERY.

	* libebook/e-contact.h: add
	E_TYPE_CONTACT_{DATE,NAME,PHOTO,CERT,ADDRESS}.


2004-02-20 Sivaiah Nallagatla <snallagatla@novell.com>
	
	* backends/groupwise/create-account.c : new file to create an acoount
   
2004-02-20 Sivaiah Nallagatla  <snallagatla@novell.com>
	
	* backends/Makefile.am : added groupwise to SUBDIRs
	* backends/groupwise/Makefile.am
	* backends/groupwise/e-book-backend-groupwise.[ch] : new 
	groupwise address book backend class


2004-02-12  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book-listener.c
	(impl_BookListener_respond_get_contact_list): unref the contacts
	and free the response.list.

	* libebook/e-book.c (e_book_response_get_contacts): copy the GList
	and ref the contacts in it.

2004-02-12  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book-listener.c (e_book_listener_new): use
	ORBIT_THREAD_HINT_ON_CONTEXT, and specify _ebook_context.

	* libebook/e-book.c (e_book_activate): init _ebook_context.
	(startup_mainloop): fun the mainloop on _ebook_context.

2004-02-11  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book-listener.c (e_book_listener_new): fix typo.

2004-02-11  Chris Toshok  <toshok@ximian.com>

	* libedata-book/e-data-book.c (view_listener_died_cb): nuke, moved
	to e-data-book-view.c.
	(impl_GNOME_Evolution_Addressbook_Book_getBookView): remove the
	call to ORBit_small_listen_for_broken.  That's handled in
	e-data-book-view.c too, and don't g_object_unref the view (it's a
	BonoboObject anyway, and we can't unref it after the oneway corba
	call like we could before when it wasn't oneway.)
	(view_destroy): just call e_book_backend_remove_book_view.

	* libedata-book/e-data-book-view.c (view_listener_died_cb): move
	this here from e-data-book.c.
	(e_data_book_view_construct): call ORBit_small_listen_for_broken
	here.
	(impl_GNOME_Evolution_Addressbook_BookView_dispose): call
	ORBit_small_unlisten_for_broken, and unref the view.
	(e_data_book_view_get_card_query): add arg check.
	(e_data_book_view_get_backend): same.
	(e_data_book_view_get_listener): same.
	(e_data_book_view_class_init): fill in epv->dispose.

	* libedata-book/e-book-backend.c (e_book_backend_get_book_views):
	FALSE => NULL.
	(e_book_backend_add_book_view): add a arg check.
	(e_book_backend_remove_book_view): same.
	(e_book_backend_init): don't use ref/unref for the EList
	functions, since we use a weakref to manage the contents of the
	list elsewhere.

	* libebook/e-book-listener.c (impl_BookListener_respond_get_view):
	release_unref after the signal.  the callee must ref to keep the
	book_view alive.

	* libebook/e-book-view.c (e_book_view_do_added_event): don't free
	up the response stuff here, it's handled in the listener code now.
	(e_book_view_do_modified_event): same.
	(e_book_view_do_removed_event): same.
	(e_book_view_do_status_message_event): same.
	(e_book_view_handle_response): add a comment about a useless (imo)
	check.  also, don't g_free (resp).
	(e_book_view_construct):
	(e_book_view_dispose): call BookView::dispose before we
	release_unref it.

	* libebook/e-book-view-listener.c (free_response): new method.
	free up an EBookViewListenerResponse*.
	(main_thread_get_response): call free_response on the response
	after emitting the signal.
	(e_book_view_listener_queue_response): just call free_response
	here instead of duplicating its code.

	* libebook/e-book.c (e_book_response_get_book_view): we don't want
	to ref the listener here.  *unref* it.
	(e_book_get_addressbooks): check addressbook_sources, not
	*addressbook_sources, in the precondition.

	* idl/Evolution-DataServer-Addressbook.idl (BookView): add dispose
	call.

2004-02-09  Michael Meeks  <michael@ximian.com>

	* libedata-book/e-data-book.c (view_destroy): tolerate NULL
	book views.

2004-02-08  Chris Toshok  <toshok@ximian.com>

	* tests/ebook/Makefile.am (noinst_PROGRAMS): build
	test-ebook-async

	* tests/ebook/test-ebook-async.c: async version of test-ebook.c

	* tests/ebook/test-ebook.c (main): remove the call to
	bonobo_main_quit here - we don't need it.

2004-02-08  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book-async.c (main_thread_get_response): lock the
	idle mutex around this function, reset it to -1, and return FALSE.
	(push_response): abstract out all the g_async_queue_push stuff
	from the various handlers.  do proper locking, and register the
	main thread idle handler if we need to.
	(e_book_async_load_local_addressbook): new function.  async
	version of e_book_load_local_addressbok.
	(*_handler): use push_response instead of g_async_queue_push.
	(init_async): remove the timeout stuff.  we register idle handlers
	when we need to.  no more polling the async queue.

	* libebook/e-book-async.h: add prototype for
	e_book_async_load_local_addressbook.

	* libebook/e-book-view-listener.c (main_thread_get_response): new
	function to read responses from the CORBA request threads.
	(e_book_view_listener_queue_response): don't just emit a signal
	here, as that causes the response to be handled on the request
	thread, and hoists re-entrancy requirements on calling code.
	instead, push the response onto the async queue.
	(e_book_view_listener_new): initialize the
	queue/idle_mutex/idle_id.
	(e_book_view_listener_dispose): dispose of the idle foo/queue.

2004-02-08  Chris Toshok  <toshok@ximian.com>

	* backends/file/e-book-backend-file.c
	(e_book_backend_file_start_book_view): don't free the
	closure/mutex inside the loop, then access it again right after
	the loop.  Should fix crashes when doing repeated searches (while
	stopping them often), like when autocompleting.



2004-02-06  Hans Petter Jansson  <hpj@ximian.com>

	* libebook/e-address-western.c (e_address_western_extract_region):
	Don't allow end index to go below start index when extracting the
	region. Also handle the case where there is no whitespace after comma
	more gracefully.

2004-02-06  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book.c (e_book_activate): if bonobo hasn't been
	initialized, do it here.  This should be enough to get
	evolution-sharp based programs up and running.
	(activate_factories_for_uri): include the bonobo exception text in
	the console spew.
	
2004-02-05  Chris Toshok  <toshok@ximian.com>

	[ along with previous fixes, this fixes #53129 ]
	
	* backends/ldap/e-book-backend-ldap.c (find_book_view): we no
	longer use EBookBackendLDAPBookView.

2004-02-05  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book.c (startup_mainloop): switch from using
	bonobo_main to using a separate GMainLoop attached to the default
	context.

2004-02-04  Chris Toshok  <toshok@ximian.com>

	* backends/file/e-book-backend-file.c
	(e_book_backend_file_remove_contacts): there's no reason to search
	for the card before removing it.  the error condition is the same
	anyway, and it'll slow us down.

2004-02-04  Chris Toshok  <toshok@ximian.com>

	[ fixes bug #53130 ]
	
	* libedata-book/e-data-book-view.c (MAKE_REALLOC): this might end
	up being a bad assumption, but since it's only used for string
	sequences, assume it always will be.  We need to make a deep copy
	of the sequence.  a memcpy isn't enough, as freeing the buffer
	causes the child strings to be freed.

2004-02-04  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book.c (e_book_op_free): remove the misleading "XXX
	more here" comment from here - there's nothing else to free here.

2004-02-04  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book.c (e_book_load_source): lock the book's mutex
	before checking load_state.  Also, set the load_state to
	E_BOOK_URI_LOADING before we relinquish the lock.  It will be
	reset to URI_NOT_LOADED in fetch_corba_book if there's a problem.
	(e_book_load_uri): remove the e_return_error_if_fail about
	load_state.  It'll be handled by e_book_load_source.
	(fetch_corba_book): reset load_state to E_BOOK_URI_NOT_LOADED in
	all the cases where we return FALSE.

	* libebook/e-contact.c (e_contact_set_property): for GETSET
	properties that aren't STRUCT's, it's a string, not a pointer.
	(e_contact_get_property): same.

2004-02-04  Michael Meeks  <michael@ximian.com>

	* libebook/e-book-async.c (_get_book_view_handler):
	g_new0 so we don't have a bogus uninitialized pointer
	to segv on in _get_book_view_response_dtor.

2004-02-03  Chris Toshok  <toshok@ximian.com>

	* libebook/e-vcard.c (e_vcard_to_string_vcard_30): use "VCARD"
	instead of "vCard" because gnome-vfs is busted and doesn't use a
	case insensitive string check.

2004-02-02  Chris Toshok  <toshok@ximian.com>

	* libebook/e-contact.c (GETSET_FIELD): these are also of type
	STRING.  if you want a GETSET field that's a struct, use
	STRUCT_FIELD.  Fixes a problem with FULL_NAME reflection for
	evolution-sharp.

2004-02-02  Chris Toshok  <toshok@ximian.com>

	* libebook/e-vcard.c (e_vcard_attribute_remove_params): clear
	attr->encoding_set and attr->encoding, since that is just cached
	information from the attribute parameters.  Fixes a spurious
	g_warning.

2004-02-02  Chris Toshok  <toshok@ximian.com>

	* libebook/e-vcard.c (e_vcard_attribute_remove_values): make sure
	to set attr->decoded_values to NULL as well.  fixes oddness when
	overwriting the PHOTO attribute.

2004-02-02  Hans Petter Jansson  <hpj@ximian.com>

	* libebook/e-contact.c (photo_getter): Return NULL if image length is
	zero.
	(photo_setter): Warn and don't set photo if image length is zero.

2004-02-02  Hans Petter Jansson  <hpj@ximian.com>

	* libebook/e-contact.c (photo_setter): Handle NULL.
	(fn_setter): Handle NULL.
	(n_setter): Handle NULL.
	(adr_setter): Handle NULL.
	(date_getter): Return NULL if attr present, but no value.
	(date_setter): Handle NULL.
	(cert_setter): Handle NULL.
	(e_contact_set_property): Don't pass NULL data to setters, remove the
	attribute (if present) instead.

2004-02-02  Michael Meeks  <michael@ximian.com>

	* backends/file/e-book-backend-file.c
	(e_book_backend_file_stop_book_view): unlock after
	taking a lock.

2004-01-30  Hans Petter Jansson  <hpj@ximian.com>

	* libebook/e-book-async.c (e_book_async_load_source)
	(e_book_async_load_uri)
	(e_book_async_get_default_addressbook)
	(e_book_async_get_supported_fields)
	(e_book_async_get_supported_auth_methods)
	(e_book_async_authenticate_user)
	(e_book_async_get_contact)
	(e_book_async_remove_contact)
	(e_book_async_remove_contact_by_id)
	(e_book_async_remove_contacts)
	(e_book_async_add_contact)
	(e_book_async_commit_contact)
	(e_book_async_get_book_view)
	(e_book_async_get_contacts): Add argument preconditions.

	* libebook/e-contact.c (e_contact_new_from_vcard)
	(e_contact_duplicate)
	(e_contact_name_from_string)
	(e_contact_name_copy)
	(e_contact_date_from_string): Add argument preconditions.

2004-01-30  Chris Toshok  <toshok@ximian.com>

	* libedata-book/e-book-backend.c (e_book_backend_remove_client):
	add ref/unref around this function body so that we don't get
	unreffed by something below last_client_gone.

2004-01-29  Chris Toshok  <toshok@ximian.com>

	* libedata-book/ximian-vcard.h (XIMIAN_VCARD): update for new
	office location, and change the FILE-AS/ORG fields to say Novell
	Ximian Group.

2004-01-30  Radek Doulik  <rodo@ximian.com>

	* backends/ldap/e-book-backend-ldap.c (contact_list_dtor): don't
	g_object_unref contact list, it contains strings which are freed
	in e_data_book_respond_get_contact_list, the list is freed there
	as well
	(category_compare): make sure categories != NULL before calling
	strcmp
	(build_mods_from_contacts): make sure we don't introduce new empty
	fields
	(build_mods_from_contacts): make sure the ber_func and
	compare_func are non NULL before calling them

2004-01-29  Chris Toshok  <toshok@m198-139.dsl.rawbw.com>

	* backends/file/e-book-backend-file.c
	(e_book_backend_file_load_source): honor the @only_if_exists arg
	before creating the db or directory.  i.e. fix this so it's not
	completely broken.

2004-01-28  Radek Doulik  <rodo@ximian.com>

	* libebook/e-contact.c (e_contact_set_property): use "CATEGORIES"
	instead of null vcard_field_name
	(e_contact_set_property): check for NULL string value, test for
	single category

2004-01-27  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book-async.h: nuke the prototype for
	e_book_async_unload_uri.

	* libebook/e-book-async.c (e_book_async_unload_uri): nuke.

2004-01-27  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book.h: remove the prototype for e_book_unload_uri.
	If you want to unload the uri, unref the book and create a new
	one.

	* libebook/e-book.c (e_book_cancel): add some preconditions.
	(e_book_load_local_addressbook): same.
	(e_book_get_source): same.
	(e_book_get_static_capabilities): same.  also, set the GError
	instead of generating a g_warning.  This should probably return
	NULL in the error cases instead of g_strdup(""), but i'm not sure
	if that'll break things.
	(e_book_check_static_capability): add some preconditions.
	(e_book_is_writable): same.
	(e_book_set_self): same.
	(e_book_is_self): same.
	(e_book_set_default_addressbook): same.
	(e_book_set_default_source): same.
	(e_book_get_addressbooks): same.
	(e_book_unload_uri): make this static.
	
	* libebook/e-book-types.h (EBookStatus): add
	E_BOOK_ERROR_NO_SUCH_SOURCE.

2004-01-27  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book.c (e_book_load_local_addressbook): change the
	local addressbook path to .evolution/addressbook/local/system, and
	pass FALSE for @only_if_exists, so it'll always be created if it's
	not there already.

2004-01-27  Hans Petter Jansson  <hpj@ximian.com>

	* libebook/e-book.c (e_book_unload_uri): If the load_state is
	E_BOOK_URI_LOADING, don't try to kill the book, just cancel the op
	and let fetch_corba_book() take care of it.
	(fetch_corba_book): Handle cancellation properly.

2004-01-26  Chris Toshok  <toshok@ximian.com>

	* tests/ebook/Makefile.am (noinst_PROGRAMS): add
	test-untyped-phones.
	(test_untyped_phones_LDADD): new variable.

	* tests/ebook/test-untyped-phones.c: new test for 40013.

2004-01-26  Chris Toshok  <toshok@ximian.com>

	[ fixes bug #53228 ]
	
	* tests/ebook/test-categories.c: new test.

	* tests/ebook/Makefile.am (noinst_PROGRAMS): add test-categories.

	* libebook/e-vcard.c (e_vcard_to_string_vcard_30): this is really
	gross.  We don't escape the ,'s if we're generating the value for
	a CATEGORIES attribute.  I can't believe the RFC specifies commas
	for use as a toplevel list separator for CATEGORIES.  That's what
	;'s are for.
	(read_attribute_value): split the CATEGORIES attribute up like a
	normal list would be, only use ','s for it.

	* libebook/e-contact.c (e_contact_set_property): implement the
	setter portion of CATEGORIES support.
	(e_contact_get_property): implement the CATEGORIES getter.

2004-01-26  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book.c (e_book_get_default_addressbook): implement
	this the right way by searching for the "default" property over
	all sources, and returning that source, or the local addressbook
	if there isn't a default source.
	(e_book_set_default_addressbook): new function.
	(e_book_set_default_source): new function.

	* libebook/e-book.h: add prototypes for
	e_book_set_default_addressbook/e_book_set_default_source.

2004-01-23  Chris Toshok  <toshok@ximian.com>

	* libebook/e-vcard.c (e_vcard_unescape_string): make public.
	(e_vcard_escape_string): same.
	(e_vcard_to_string_vcard_30): use the public escape_string
	function.
	(e_vcard_dump_structure): same.

	* libebook/e-vcard.h (e_vcard_unescape_string): expose this
	(e_vcard_escape_string): and this.

	* libebook/e-contact.h: rearrange the enum again, to keep
	strings/structs separate.

	* libebook/e-book.c (e_book_get_default_addressbook): might as
	well switch this to the new folder layout.
	(e_book_load_local_addressbook): same.

	* libebook/e-contact.c (e_contact_find_attribute_with_types): only
	find the attribute that matches the types explicitly.  this is the
	only way to implement "other phone/fax" currently.
	(e_contact_set_property): same.

2004-01-21  Nat Friedman <nat@novell.com>

	* libedata-book/e-book-backend-sexp.c (compare_im): New function
	to allow searching of IM fields.
	* libedata-book/e-book-backend-sexp.c (compare_im_aim): Likewise.
	* libedata-book/e-book-backend-sexp.c (compare_im_msn): Likewise.
	* libedata-book/e-book-backend-sexp.c (compare_im_icq): Likewise.
	* libedata-book/e-book-backend-sexp.c (compare_im_yahoo):
	Likewise.
	* libedata-book/e-book-backend-sexp.c (compare_im_jabber):
	Likewise.
	* libedata-book/e-book-backend-sexp.c (prop_info_table): Added
	entries for IM field searching.

2004-01-20  Hans Petter Jansson  <hpj@ximian.com>

	* libedata-book/e-data-book-view.c (e_data_book_view_new): Pass a
	threaded POA policy to g_object_new (). Fixes deadlocks.

2004-01-16  JP Rosevear <jpr@ximian.com>

	* libebook/e-book.c (e_book_idle_writable): idle handler to emit
	the writable signal on the main thread
	(e_book_handle_response): use above
	
2003-01-11  Christian Hammond <chipx86@gnupdate.org>
 
 	* addressbook/libebook/e-contact.[ch]: Changed the IM account field
 	types from LIST_FIELD to MULTI_LIST_FIELD, as discussed with Chris
 	Toshok. Added convenience fields for WORK and HOME entries for each
 	IM account list. Add support for setting LIST_FIELD types.
 
2004-01-09  Jeffrey Stedfast  <fejj@ximian.com>

	* tests/ebook/test-date.c (main): Don't let control reach the end
	of a non-void function

	* backends/ldap/e-book-backend-ldap.c (find_book_view): Don't let
	control reach the end of a non-void function

	* libebook/e-contact.c (cert_getter): Don't let control reach the
	end of a non-void function

	* tests/ebook/test-string.c: Same as below.

	* tests/ebook/test-photo.c: #include <string.h> for strlen and
	memcmp.
	(main): Don't let control reach the end of a non-void function

2004-01-09  Ross Burton  <ross@burtonini.com>

	* libebook/e-book-async.h:
	* libebook/e-book-async.c:
	Change the API of e_book_async_get_book_view and
	e_book_async_get_contacts to match e-book.h.

2004-01-08  Ross Burton  <ross@burtonini.com>

	* libebook/e-contact.c:
	* libebook/e-contact.h:
	Add a video conferencing URL field.

2004-01-07  JP Rosevear <jpr@ximian.com>

	* libedata-book/Makefile.am: remove DISABLE_DEPRECATED flags

	* libebook/Makefile.am: ditto
	
2004-01-06  Chris Toshok  <toshok@ximian.com>

	* backends/file/e-book-backend-file.c
	(e_book_backend_file_load_source): use e_util_mkdir_hier here
	instead of mkdir.
	(do_create): add the db_error to the spew.
	(e_book_backend_file_load_source): don't use mkdir here, use
	e_util_mkdir_hier.

2004-01-05  Christian Neumair  <chris@gnome-de.org>

	* libebook/e-book.c: Generalize some strings.

2003-12-29  Chris Toshok  <toshok@ximian.com>

	* tests/ebook/test-undefinedfield.c: new test - make sure we
	return NULL for undefined/unimplemented fields.

	* tests/ebook/Makefile.am (noinst_PROGRAMS): add
	test-undefinedfield.

2003-12-29  Chris Toshok  <toshok@ximian.com>

	* libebook/e-contact.c (e_contact_get_property): reset the GValue
	if there's a problem getting it (will force it to NULL).

2003-12-29  Chris Toshok  <toshok@ximian.com>

	* libebook/e-contact.c (e_contact_get): initialize value to NULL
	so that if the field is unknown (meaning we haven't gotten around
	to implementing it yet, like the category list stuff), we don't
	return an invalid pointer.

2003-12-19  Chris Toshok  <toshok@ximian.com>

	* libebook/e-vcard.h: add lots more #defines, some EVC_X ones for
	attribute TYPE's, as well as the vcard specified "KEY" attribute.

	* libedata-book/e-book-backend.c (e_book_backend_remove_client):
	reorder some code so we hold the lock up until we're done with
	backend->priv->clients.

	* backends/ldap/e-book-backend-ldap.c (prop_info): add an entry
	for E_CONTACT_X509_CERT, and map it to the userCertificate ldap
	attribute.  not sure if this is strictly correct... the
	inetOrgPerson schema mentions using userSMIMECertificate (which
	contains the full certificate chain in pkcs#7 form) in favor of
	userCertificate for S/MIME applications.

	* libebook/e-contact.h: add the CERT field types, the EContactCert
	struct type, and prototypes for e_contact_cert_get_type and
	e_contact_cert_free.

	* libebook/e-contact.c (field_info): add E_CONTACT_X509_CERT
	(cert_getter, cert_setter): new functions, implement
	getting/setting of certs.
	(e_contact_cert_free): new function.
	(e_contact_cert_copy): same.
	(e_contact_cert_get_type): same.

2003-12-17  Chris Toshok  <toshok@ximian.com>

	* libebook/e-book-async.c (_get_book_view_response_dtor): if
	there's a crash in the wombat and we're left with an invalid
	EBook, resp->book_view will be NULL here.  don't unref it.

2003-12-16  Hans Petter Jansson  <hpj@ximian.com>

	* libebook/e-book.c (fetch_corba_book): Ref and keep the loaded
	ESource around. Unref old source if present.
	(e_book_get_source): Implement.
	(e_book_init): Init source pointer.
	(e_book_dispose): Unref source, if any.

2003-12-15  Hans Petter Jansson  <hpj@ximian.com>

	* libebook/e-contact.c (adr_getter): Initialize the address_format
	field. Absence of this was causing crashes.
	(e_contact_set_property): For synthetic attr_type fields, add a
	case for struct/get_set alongside strings. This makes addresses work.
	(e_contact_get_property): For multi_elem strings, count the matching
	attributes instead of trying to get a list from the first attribute
	encountered (which is what list_elem does). This makes e-mail
	addresses work.

2003-12-10  Hans Petter Jansson  <hpj@ximian.com>

	* backends/ldap/e-book-backend-ldap.c
	(e_book_backend_ldap_load_source): Get attributes from source, not URI.

2003-12-09  Chris Toshok  <toshok@ximian.com>

	* backends/file/e-book-backend-file.c (select_changes): change to
	return gboolean and take the filename, not the struct dirent *.
	(e_book_backend_file_remove): switch from using scandir to
	g_dir_*.

2003-12-07  JP Rosevear  <jpr@ximian.com>

	* libedata-book/e-data-book-factory.c: version the OAFIID

	* libebook/e-book.c (activate_factories_for_uri): update repo id
	
2003-12-07  JP Rosevear  <jpr@ximian.com>

	* libebook/e-book.c (activate_factories_for_uri): use the
	versioned repo id

2003-12-05  Chris Toshok  <toshok@ximian.com>

	* libebook/e-contact.c (e_contact_get_const): make this only work
	for strings, since really that's all it works for now.

2003-12-05  Hans Petter Jansson  <hpj@ximian.com>

	* libebook/e-contact.c (e_contact_get_property): Return boxed type
	for struct.
	(e_contact_name_from_string): Never pass NULL to
	e_name_western_parse ().

2003-12-04  Chris Toshok  <toshok@ximian.com>

	* tests/ebook/test-ebook.c (print_email): print out the
	NAME_OR_ORG of the contact too.

	* libebook/e-contact.h (EContactField): add NAME_OR_ORG.

	* libebook/e-contact.c (field_info): add NAME_OR_ORG.
	(e_contact_get_property): handle NAME_OR_ORG.

2003-12-01  Hans Petter Jansson  <hpj@ximian.com>

	* libebook/e-book.c (e_book_unload_uri): When clearing the cached
	capabilities, also clear the cap_queried flag.

2003-12-01  Hans Petter Jansson  <hpj@ximian.com>

	* libebook/e-book.c (fetch_corba_book): If the book failed to load,
	set load_state to E_BOOK_URI_NOT_LOADED, so _unload () won't crash.

2003-12-01  Hans Petter Jansson  <hpj@ximian.com>

	* libebook/e-book-async.c (_load_uri_response_handler)
	(_load_uri_response_dtor)
	(_load_uri_handler)
	(_load_uri_dtor)
	(_default_book_response_handler)
	(_default_book_response_dtor): Pass source instead of URI, and
	s/uri/source/.
	(e_book_async_load_source): Implement.
	(e_book_async_load_uri): Create a source and pass that to worker.

2003-11-28  Chris Toshok  <toshok@ximian.com>

	* tests/ebook/Makefile.am (test_ebook_view_LDADD): new variable.
	(noinst_PROGRAMS): add test-ebook-view

	* tests/ebook/test-ebook-view.c: new test for ebook view's.

2003-11-26  Hans Petter Jansson  <hpj@ximian.com>

	* backends/file/e-book-backend-file.c (e_book_backend_file_load_uri):
	Rename to e_book_backend_file_load_source () and take an ESource
	instead of an URI.
	(e_book_backend_file_dispose): Don't free URI anymore.
	(e_book_backend_file_class_init): load_uri -> load_source.
	(e_book_backend_file_init): Don't init URI anymore.

	* backends/ldap/e-book-backend-ldap.c (e_book_backend_ldap_load_uri):
	Rename to e_book_backend_ldap_load_uri () and take an ESource instead
	of an URI.
	(e_book_backend_ldap_dispose): Don't free URI anymore.
	(e_book_backend_ldap_class_init): load_uri -> load_source.

	* backends/vcf/e-book-backend-vcf.c (e_book_backend_vcf_load_uri):
	Rename to e_book_backend_vcf_load_source () and take an ESource
	instead of an URI.
	(e_book_backend_vcf_dispose): Don't free URI anymore.
	(e_book_backend_vcf_class_init): load_uri -> load_source.
	(e_book_backend_vcf_init): Don't init URI anymore.

	* idl/Evolution-DataServer-Addressbook.idl (getBook): In parameter
	"uri" renamed to "source". Takes standalone source XML.

	* libebook/e-book.c (fetch_corba_book): Implement, taking ESource.
	(e_book_load_source): Implement.
	(e_book_load_uri): Create a source based on the URI and use
	e_book_load_source () to load that.

	* libedata-book/e-book-backend.c (e_book_backend_load_uri): Renamed
	to e_book_backend_load_source () and takes ESource instead of URI.
	(e_book_backend_get_uri): Renamed to e_book_backend_get_source ()
	and returns ESource instead of URI.
	(e_book_backend_open): Use e_book_backend_load_source ().
	(e_book_backend_init): Don't init URI anymore.
	(e_book_backend_dispose): Don't free URI anymore.

	* libedata-book/e-data-book-factory.c (backend_last_client_gone_cb):
	Get URI from backend's ESource.
	(impl_GNOME_Evolution_Addressbook_BookFactory_getBook): Take
	standalone source XML, construct an ESource, and fetch a backend
	with that.

	* libedata-book/e-data-book.c (e_data_book_get_uri): Renamed to
	e_data_book_get_source () and return ESource.
	(e_data_book_construct): Take ESource instead of URI.
	(e_data_book_new): Take ESource instead of URI.
	(e_data_book_dispose): Don't free URI. Instead, unref ESource.

2003-11-25  Chris Toshok  <toshok@ximian.com>

	* tests/ebook/test-self.c: new file/test, print out the current
	self contact.

	* tests/ebook/test-ebook.c (print_email): fix the email printing.

	* libebook/e-vcard.c (parse): if the vcard doesn't begin with a
	"begin" attribute, we still want to add the attribute to the
	vcard.

	* libebook/e-contact.c (field_info): add GETSET_FIELD for fields
	that don't have a structured type associated with them (such as
	FN) but that need getter/setter methods for some reason.  add a
	GType getter function to STRUCT_FIELD, and fill in the getter
	(e_contact_class_init): use boxed types for STRUCT fields.
	(adr_setter): implement.
	(e_contact_set_property): use g_value_get_boxed for STRUCT types.
	(e_contact_get_property): implement GETSET getter.
	(e_contact_name_get_type): implement.
	(e_contact_date_copy): same.
	(e_contact_date_get_type): same.
	(e_contact_date_new): same.
	(e_contact_photo_copy): same.
	(e_contact_photo_get_type): same.
	(e_contact_address_copy): same.
	(e_contact_address_get_type): same.

	* libebook/e-contact.h: add prototypes for
	e_contact_{date,name,photo,address}_get_type.

	* libebook/e-book-types.h: add E_BOOK_ERROR_NO_SELF_CONTACT.

	* libebook/e-book.c (e_book_get_self): implement.
	(e_book_set_self): same.
	(e_book_is_self): same.
	(e_book_get_default_addressbook): add more to the comment telling
	how this *really* should be implemented.
	(e_book_get_addressbooks): implement.

	* libebook/e-book.h: add prototype for e_book_is_self, change
	e_book_set_self to take an EContact instead of just the uid.
	Also, unifdef the prototype for e_book_get_addressbooks.

2003-11-23  Chris Toshok  <toshok@ximian.com>

	* backends/file/e-book-backend-file.c
	(e_book_backend_file_load_uri): remove the db3 version checks, and
	add the extra transaction arg to db->open.

	* backends/file/Makefile.am (INCLUDES): use the embedded db4.

2003-11-22  Chris Toshok  <toshok@ximian.com>

	* backends/ldap/e-book-backend-ldap.c (contact_list_handler,
	contact_list_dtor, e_book_backend_ldap_get_contact_list):
	implement get_contact_list for the ldap backend.
	(category_populate): un-ifdef this.
	(category_ber): same.
	(category_compare): same.
	(e_book_backend_ldap_class_init): fill in
	EBookBackendClass::get_contact_list.

2003-11-11  Chris Toshok  <toshok@ximian.com>

	* tests/vcard/dump-vcard.c (main): convert the vcard to a string
	and print it out as well.  also fix the evcard leak.

	* tests/vcard/README: add blurb about 10.vcf.

	* tests/vcard/Makefile.am (EXTRA_DIST): add 10.vcf

	* tests/vcard/10.vcf: new quotted attribute parameter value test.

	* tests/vcard/[1-9].vcf: add these back in.

2003-11-10  JP Rosevear <jpr@ximian.com>

	* libebook/e-book-listener.c: remove construct method, it did
	nothing and should use construct time args in future if needed

2003-11-10  Dan Winship  <danw@ximian.com>

	* libebook/e-contact.c (e_contact_date_equal): New utility
	function to compare two (possibly NULL) EContactDates

	* backends/ldap/e-book-backend-ldap.c (anniversary_compare,
	birthday_compare): Use it

	* libedata-book/e-book-backend-summary.c
	(e_book_backend_summary_check_contact): New utility function to
	check if an id is in the summary (without doing any additional
	work beyond that).

2003-11-10  Dan Winship  <danw@ximian.com>

	* libedata-book/e-book-backend.h:
	s/E_TYPE_BACKEND/E_TYPE_BOOK_BACKEND/
	s/E_IS_BACKEND/E_IS_BOOK_BACKEND/

	* libedata-book/e-book-backend-sync.h: Likewise
	* backends/file/e-book-backend-file.h: Likewise
	* backends/vcf/e-book-backend-vcf.h: Likewise
	* backends/ldap/e-book-backend-ldap.h: Likewise

	* libedata-book/e-book-backend.c: Update for that. Also simplify
	some redundant g_return_if_fail tests and reindent a bunch of
	lines that were indented wrong after the pas->e_book renaming.

	* libedata-book/e-book-backend-sync.c: Likewise
	* backends/file/e-book-backend-file.c: Likewise
	* backends/vcf/e-book-backend-vcf.c: Likewise
	* backends/ldap/e-book-backend-ldap.c: Likewise

2003-11-08  Chris Toshok  <toshok@ximian.com>

	* libebook/e-vcard.c (skip_until): implement.
	(read_attribute_params): implement quoted parameter values, in our
	trademark overly accepting way.  it'll accept "hi" as well as
	"hi"and"bye" as parameter values (with the values being "hi" and
	"hiandbye" respectively).
	(e_vcard_to_string_vcard_30): hardcode VERSION:3.0 here, since
	we're outputing a version 3.0 card.  also, ignore any VERSION
	attributes that may be in the vcard we parsed in.  lastly, search
	parameter values for whitespace before outputting them, and wrap
	them in quotes if they have any.

	* libebook/e-book-async.c (e_book_async_add_contact): use
	e_contact_duplicate here so if the caller modifies the contact
	after calling us we use the original copy.
	(e_book_async_commit_contact): same.

2003-11-07  Dan Winship  <danw@ximian.com>

	* libebook/e-address-western.c: 
	* libebook/e-name-western.c: Move these here.

	* libebook/e-contact.c: Update e-name-western include

	* libebook/Makefile.am (libebook_la_SOURCES): Add
	e-address-western.c and e-name-western.c.
	(libebookinclude_HEADERS): and their headers
	(libebook_la_LDFLAGS): Remove -no-undefined

	* libedata-book/Makefile.am (libedata_book_la_LDFLAGS): Likewise

2003-11-06  Dan Winship  <danw@ximian.com>

	* backends/ldap/e-book-backend-ldap.c: Remove the word "process"
	from method names, which hasn't really made sense since 1.2.

	* backends/vcf/e-book-backend-vcf.c: Likewise

2003-11-06    <jpr@ximian.com>

	* libebook/Makefile.am: don't add libename

2003-11-06  JP Rosevear <jpr@ximian.com>

	* libebook/e-book.c: replace e_mutex stuff with gthread stuff

2003-11-06  JP Rosevear <jpr@ximian.com>

	* Makefile.am: build new subdirs

	* backends/*: build the file, vcf and ldap backends here

	* libedata-cal/Makefile.am: no longer build them here	
	
2003-11-05  JP Rosevear <jpr@ximian.com>

	* rename libedatabook to libedata-book
	
2003-11-05  JP Rosevear  <jpr@ximian.com>

	* libebook/Makefile.am: use privincludedir

	* libedatabook/Makefile.am: ditto

	* libedatabook/libedatabook-1.0.pc.in: use privincludedir; remove
	gal

	* libebook/libebook-1.0.pc.in: ditto

2003-11-05  Rodrigo Moya <rodrigo@ximian.com>

	* libedatabook/e-book-backend-sexp.c:
	* libedatabook/e-book-backend-summary.c:
	* libedatabook/e-book-backend-vcf.c:
	* libedatabook/e-book-backend-file.c: removed GAL dependency.

2003-11-04  JP Rosvear <jpr@ximian.com>

	* libedatabook/e-data-book-factory.c: use properly name spaced
	default id

	* libebook/e-book.c: kill unneccesary define

2003-11-04  JP Rosevear <jpr@ximian.com>

	* libedatabook/e-data-book-factory.c: remove corbe header include

	* libedatabook/e-data-book.h: include corba header correctly

	* libedatabook/e-data-book-view.h: ditto

	* libedatabook/e-data-book-factory.h: ditto

	* libedatabook/e-book-backend.h: ditto

	* libedatabook/e-book-backend-sync.h: ditto

	* libedatabook/Makefile.am: reflect idl name change

	* libebook/e-book-view.c: remove corba header include

	* libebook/e-book.c: ditto
	
	* libebook/e-book.h: include corba header correctly

	* libebook/e-book-view.h: ditto

	* libebook/e-book-view-listener.h: ditto

	* libebook/e-book-listener.h: ditto

	* idl/Makefile.am (idl_DATA): rename idl to
	Evolution-DataServer-Addressbook.idl

	* libebook/Makefile.am: reflect idl name change

